

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 22 17:20:08 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           ; Version 2.10
    51                           ; Generated 31/07/2019 GMT
    52                           ; 
    53                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F8722 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataCOMRAM
    86  0028D6                     __pidataCOMRAM:
    87                           	opt callstack 0
    88                           
    89                           ;initializer for _button_flag
    90  0028D6  03                 	db	3
    91  0000                     _PORTBbits	set	3969
    92  0000                     _PORTAbits	set	3968
    93  0000                     _LATD	set	3980
    94  0000                     _LATCbits	set	3979
    95  0000                     _LATAbits	set	3977
    96  0000                     _TRISCbits	set	3988
    97  0000                     _LATFbits	set	3982
    98  0000                     _TRISFbits	set	3991
    99  0000                     _TMR0H	set	4055
   100  0000                     _ADCON1	set	4033
   101  0000                     _PORTD	set	3971
   102  0000                     _TRISBbits	set	3987
   103  0000                     _TRISAbits	set	3986
   104  0000                     _T0CON	set	4053
   105  0000                     _OSCCON	set	4051
   106  0000                     _TMR0L	set	4054
   107  0000                     _INTCONbits	set	4082
   108  0000                     _TRISD	set	3989
   109                           
   110                           	psect	smallconst
   111  001000                     __psmallconst:
   112                           	opt callstack 0
   113  001000  00                 	db	0
   114  001001                     STR_5:
   115  001001  49                 	db	73	;'I'
   116  001002  49                 	db	73	;'I'
   117  001003  2E                 	db	46
   118  001004  20                 	db	32
   119  001005  53                 	db	83	;'S'
   120  001006  45                 	db	69	;'E'
   121  001007  54                 	db	84	;'T'
   122  001008  20                 	db	32
   123  001009  48                 	db	72	;'H'
   124  00100A  4F                 	db	79	;'O'
   125  00100B  55                 	db	85	;'U'
   126  00100C  52                 	db	82	;'R'
   127  00100D  20                 	db	32
   128  00100E  20                 	db	32
   129  00100F  20                 	db	32
   130  001010  20                 	db	32
   131  001011  00                 	db	0
   132  001012                     STR_8:
   133  001012  56                 	db	86	;'V'
   134  001013  2E                 	db	46
   135  001014  20                 	db	32
   136  001015  53                 	db	83	;'S'
   137  001016  54                 	db	84	;'T'
   138  001017  4F                 	db	79	;'O'
   139  001018  50                 	db	80	;'P'
   140  001019  20                 	db	32
   141  00101A  57                 	db	87	;'W'
   142  00101B  41                 	db	65	;'A'
   143  00101C  54                 	db	84	;'T'
   144  00101D  43                 	db	67	;'C'
   145  00101E  48                 	db	72	;'H'
   146  00101F  20                 	db	32
   147  001020  20                 	db	32
   148  001021  20                 	db	32
   149  001022  00                 	db	0
   150  001023                     STR_7:
   151  001023  49                 	db	73	;'I'
   152  001024  56                 	db	86	;'V'
   153  001025  2E                 	db	46
   154  001026  20                 	db	32
   155  001027  53                 	db	83	;'S'
   156  001028  45                 	db	69	;'E'
   157  001029  54                 	db	84	;'T'
   158  00102A  20                 	db	32
   159  00102B  53                 	db	83	;'S'
   160  00102C  45                 	db	69	;'E'
   161  00102D  43                 	db	67	;'C'
   162  00102E  4F                 	db	79	;'O'
   163  00102F  4E                 	db	78	;'N'
   164  001030  44                 	db	68	;'D'
   165  001031  20                 	db	32
   166  001032  20                 	db	32
   167  001033  00                 	db	0
   168  001034                     STR_6:
   169  001034  49                 	db	73	;'I'
   170  001035  49                 	db	73	;'I'
   171  001036  49                 	db	73	;'I'
   172  001037  2E                 	db	46
   173  001038  20                 	db	32
   174  001039  53                 	db	83	;'S'
   175  00103A  45                 	db	69	;'E'
   176  00103B  54                 	db	84	;'T'
   177  00103C  20                 	db	32
   178  00103D  4D                 	db	77	;'M'
   179  00103E  49                 	db	73	;'I'
   180  00103F  4E                 	db	78	;'N'
   181  001040  55                 	db	85	;'U'
   182  001041  54                 	db	84	;'T'
   183  001042  45                 	db	69	;'E'
   184  001043  20                 	db	32
   185  001044  00                 	db	0
   186  001045                     STR_4:
   187  001045  49                 	db	73	;'I'
   188  001046  2E                 	db	46
   189  001047  20                 	db	32
   190  001048  44                 	db	68	;'D'
   191  001049  49                 	db	73	;'I'
   192  00104A  47                 	db	71	;'G'
   193  00104B  49                 	db	73	;'I'
   194  00104C  54                 	db	84	;'T'
   195  00104D  41                 	db	65	;'A'
   196  00104E  4C                 	db	76	;'L'
   197  00104F  20                 	db	32
   198  001050  57                 	db	87	;'W'
   199  001051  41                 	db	65	;'A'
   200  001052  54                 	db	84	;'T'
   201  001053  43                 	db	67	;'C'
   202  001054  48                 	db	72	;'H'
   203  001055  00                 	db	0
   204  001056                     STR_1:
   205  001056  5F                 	db	95	;'_'
   206  001057  5F                 	db	95	;'_'
   207  001058  00                 	db	0
   208  0000                     
   209                           ; #config settings
   210  001059  00                 	db	0	; dummy byte at the end
   211  0000                     
   212                           	psect	cinit
   213  002822                     __pcinit:
   214                           	opt callstack 0
   215  002822                     start_initialization:
   216                           	opt callstack 0
   217  002822                     __initialization:
   218                           	opt callstack 0
   219                           
   220                           ; Initialize objects allocated to COMRAM (1 bytes)
   221                           ; load TBLPTR registers with __pidataCOMRAM
   222  002822  0ED6               	movlw	low __pidataCOMRAM
   223  002824  6EF6               	movwf	tblptrl,c
   224  002826  0E28               	movlw	high __pidataCOMRAM
   225  002828  6EF7               	movwf	tblptrh,c
   226  00282A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   227  00282C  6EF8               	movwf	tblptru,c
   228  00282E  0009               	tblrd		*+	;fetch initializer
   229  002830  CFF5 F03C          	movff	tablat,__pdataCOMRAM
   230                           
   231                           ; Clear objects allocated to COMRAM (27 bytes)
   232  002834  EE00  F021         	lfsr	0,__pbssCOMRAM
   233  002838  0E1B               	movlw	27
   234  00283A                     clear_0:
   235  00283A  6AEE               	clrf	postinc0,c
   236  00283C  06E8               	decf	wreg,f,c
   237  00283E  E1FD               	bnz	clear_0
   238  002840                     end_of_initialization:
   239                           	opt callstack 0
   240  002840                     __end_of__initialization:
   241                           	opt callstack 0
   242  002840  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   243  002842  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   244  002844  0100               	movlb	0
   245  002846  EF88  F00C         	goto	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMRAM
   248  000021                     __pbssCOMRAM:
   249                           	opt callstack 0
   250  000021                     _change_state:
   251                           	opt callstack 0
   252  000021                     	ds	1
   253  000022                     _minute_stop_flag:
   254                           	opt callstack 0
   255  000022                     	ds	1
   256  000023                     _second_stop_flag:
   257                           	opt callstack 0
   258  000023                     	ds	1
   259  000024                     _stop_watch_flag:
   260                           	opt callstack 0
   261  000024                     	ds	1
   262  000025                     _hour_flag:
   263                           	opt callstack 0
   264  000025                     	ds	1
   265  000026                     _minute_flag:
   266                           	opt callstack 0
   267  000026                     	ds	1
   268  000027                     _blink_state:
   269                           	opt callstack 0
   270  000027                     	ds	1
   271  000028                     _blink_count:
   272                           	opt callstack 0
   273  000028                     	ds	1
   274  000029                     _count_sel:
   275                           	opt callstack 0
   276  000029                     	ds	1
   277  00002A                     _count_but:
   278                           	opt callstack 0
   279  00002A                     	ds	1
   280  00002B                     _button:
   281                           	opt callstack 0
   282  00002B                     	ds	1
   283  00002C                     _init_setting:
   284                           	opt callstack 0
   285  00002C                     	ds	1
   286  00002D                     _second_read_sel:
   287                           	opt callstack 0
   288  00002D                     	ds	1
   289  00002E                     _first_read_sel:
   290                           	opt callstack 0
   291  00002E                     	ds	1
   292  00002F                     _second_read_change:
   293                           	opt callstack 0
   294  00002F                     	ds	1
   295  000030                     _first_read_change:
   296                           	opt callstack 0
   297  000030                     	ds	1
   298  000031                     _minute_stop:
   299                           	opt callstack 0
   300  000031                     	ds	1
   301  000032                     _second_stop:
   302                           	opt callstack 0
   303  000032                     	ds	1
   304  000033                     _millis_10_stop:
   305                           	opt callstack 0
   306  000033                     	ds	1
   307  000034                     _millis_stop_watch:
   308                           	opt callstack 0
   309  000034                     	ds	1
   310  000035                     _hour:
   311                           	opt callstack 0
   312  000035                     	ds	1
   313  000036                     _minute:
   314                           	opt callstack 0
   315  000036                     	ds	1
   316  000037                     _second:
   317                           	opt callstack 0
   318  000037                     	ds	1
   319  000038                     _millis:
   320                           	opt callstack 0
   321  000038                     	ds	1
   322  000039                     _millis_system:
   323                           	opt callstack 0
   324  000039                     	ds	1
   325  00003A                     _state_but_sel:
   326                           	opt callstack 0
   327  00003A                     	ds	1
   328  00003B                     _state_machine:
   329                           	opt callstack 0
   330  00003B                     	ds	1
   331                           
   332                           	psect	dataCOMRAM
   333  00003C                     __pdataCOMRAM:
   334                           	opt callstack 0
   335  00003C                     _button_flag:
   336                           	opt callstack 0
   337  00003C                     	ds	1
   338                           
   339                           	psect	cstackCOMRAM
   340  000001                     __pcstackCOMRAM:
   341                           	opt callstack 0
   342  000001                     ?_read_button_change:
   343                           	opt callstack 0
   344  000001                     ?_read_button_sel:
   345                           	opt callstack 0
   346  000001                     ?i2___awdiv:
   347                           	opt callstack 0
   348  000001                     ?i2___awmod:
   349                           	opt callstack 0
   350  000001                     i2SendByteBBSPI@output:
   351                           	opt callstack 0
   352  000001                     i2___awdiv@dividend:
   353                           	opt callstack 0
   354  000001                     i2___awmod@dividend:
   355                           	opt callstack 0
   356                           
   357                           ; 2 bytes @ 0x0
   358  000001                     	ds	1
   359  000002                     i2SendByteBBSPI@bitcount:
   360                           	opt callstack 0
   361                           
   362                           ; 1 bytes @ 0x1
   363  000002                     	ds	1
   364  000003                     ?_read_all_button:
   365                           	opt callstack 0
   366  000003                     i2SendByteBBSPI@input:
   367                           	opt callstack 0
   368  000003                     read_all_button@button_A:
   369                           	opt callstack 0
   370  000003                     i2___awdiv@divisor:
   371                           	opt callstack 0
   372  000003                     i2___awmod@divisor:
   373                           	opt callstack 0
   374                           
   375                           ; 2 bytes @ 0x2
   376  000003                     	ds	1
   377  000004                     i2Port_BBSPIInit@port_dir:
   378                           	opt callstack 0
   379  000004                     i2WritePort_BBSPI@a:
   380                           	opt callstack 0
   381                           
   382                           ; 1 bytes @ 0x3
   383  000004                     	ds	1
   384  000005                     i2WritePort_BBSPI@port_add:
   385                           	opt callstack 0
   386  000005                     i2___awdiv@counter:
   387                           	opt callstack 0
   388  000005                     i2___awmod@counter:
   389                           	opt callstack 0
   390  000005                     read_all_button@button_B:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0x4
   394  000005                     	ds	1
   395  000006                     i2LCDPutChar@ch:
   396                           	opt callstack 0
   397  000006                     i2LCDPutInst@ch:
   398                           	opt callstack 0
   399  000006                     i2___awdiv@sign:
   400                           	opt callstack 0
   401  000006                     i2___awmod@sign:
   402                           	opt callstack 0
   403                           
   404                           ; 1 bytes @ 0x5
   405  000006                     	ds	1
   406  000007                     ??i2_LCDInit:
   407  000007                     i2LCDPutStr@ptr:
   408                           	opt callstack 0
   409  000007                     i2___awdiv@quotient:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x6
   413  000007                     	ds	2
   414  000009                     ??i2_initial_display:
   415  000009                     blink@state:
   416                           	opt callstack 0
   417  000009                     display_clock@variable_display:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x8
   421  000009                     	ds	2
   422  00000B                     blink@type:
   423                           	opt callstack 0
   424  00000B                     display_clock@clock1_stopwatch2:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0xA
   428  00000B                     	ds	2
   429  00000D                     ??_display_clock:
   430  00000D                     ??_blink:
   431                           
   432                           ; 1 bytes @ 0xC
   433  00000D                     	ds	2
   434  00000F                     ??_display_change_state:
   435  00000F                     clock_count@state:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0xE
   439  00000F                     	ds	2
   440  000011                     ??_clock_system:
   441                           
   442                           ; 1 bytes @ 0x10
   443  000011                     	ds	4
   444  000015                     ?___awdiv:
   445                           	opt callstack 0
   446  000015                     ?___awmod:
   447                           	opt callstack 0
   448  000015                     SendByteBBSPI@output:
   449                           	opt callstack 0
   450  000015                     ___awdiv@dividend:
   451                           	opt callstack 0
   452  000015                     ___awmod@dividend:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x14
   456  000015                     	ds	1
   457  000016                     SendByteBBSPI@bitcount:
   458                           	opt callstack 0
   459                           
   460                           ; 1 bytes @ 0x15
   461  000016                     	ds	1
   462  000017                     SendByteBBSPI@input:
   463                           	opt callstack 0
   464  000017                     ___awdiv@divisor:
   465                           	opt callstack 0
   466  000017                     ___awmod@divisor:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x16
   470  000017                     	ds	1
   471  000018                     Port_BBSPIInit@port_dir:
   472                           	opt callstack 0
   473  000018                     WritePort_BBSPI@a:
   474                           	opt callstack 0
   475                           
   476                           ; 1 bytes @ 0x17
   477  000018                     	ds	1
   478  000019                     WritePort_BBSPI@port_add:
   479                           	opt callstack 0
   480  000019                     ___awdiv@counter:
   481                           	opt callstack 0
   482  000019                     ___awmod@counter:
   483                           	opt callstack 0
   484                           
   485                           ; 1 bytes @ 0x18
   486  000019                     	ds	1
   487  00001A                     LCDPutChar@ch:
   488                           	opt callstack 0
   489  00001A                     LCDPutInst@ch:
   490                           	opt callstack 0
   491  00001A                     ___awdiv@sign:
   492                           	opt callstack 0
   493  00001A                     ___awmod@sign:
   494                           	opt callstack 0
   495                           
   496                           ; 1 bytes @ 0x19
   497  00001A                     	ds	1
   498  00001B                     ??_change_time:
   499  00001B                     ??_LCDInit:
   500  00001B                     LCDPutStr@ptr:
   501                           	opt callstack 0
   502  00001B                     ___awdiv@quotient:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x1A
   506  00001B                     	ds	2
   507  00001D                     ??_initial_display:
   508  00001D                     
   509                           ; 1 bytes @ 0x1C
   510  00001D                     	ds	2
   511  00001F                     ??_main:
   512                           
   513                           ; 1 bytes @ 0x1E
   514  00001F                     	ds	2
   515                           
   516 ;;
   517 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   518 ;;
   519 ;; *************** function _main *****************
   520 ;; Defined at:
   521 ;;		line 47 in file "main.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;Total ram usage:        2 bytes
   540 ;; Hardware stack levels required when called:   13
   541 ;; This function calls:
   542 ;;		_change_time
   543 ;;		_initial
   544 ;; This function is called by:
   545 ;;		Startup code after reset
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text0
   550  001910                     __ptext0:
   551                           	opt callstack 0
   552  001910                     _main:
   553                           	opt callstack 18
   554  001910                     
   555                           ;main.c: 48:     initial();
   556  001910  ECFA  F013         	call	_initial	;wreg free
   557  001914  EF3F  F00D         	goto	l3200
   558  001918                     l3140:
   559                           
   560                           ;main.c: 52:                 if (button == 1)button_flag = 1;
   561  001918  042B               	decf	_button^0,w,c
   562  00191A  A4D8               	btfss	status,2,c
   563  00191C  EF92  F00C         	goto	u1931
   564  001920  EF94  F00C         	goto	u1930
   565  001924                     u1931:
   566  001924  EF96  F00C         	goto	l3144
   567  001928                     u1930:
   568  001928  0E01               	movlw	1
   569  00192A  6E3C               	movwf	_button_flag^0,c
   570  00192C                     l3144:
   571                           
   572                           ;main.c: 53:                 if (button_flag == 1 && button == 3){
   573  00192C  043C               	decf	_button_flag^0,w,c
   574  00192E  A4D8               	btfss	status,2,c
   575  001930  EF9C  F00C         	goto	u1941
   576  001934  EF9E  F00C         	goto	u1940
   577  001938                     u1941:
   578  001938  EF3F  F00D         	goto	l96
   579  00193C                     u1940:
   580  00193C  0E03               	movlw	3
   581  00193E  182B               	xorwf	_button^0,w,c
   582  001940  A4D8               	btfss	status,2,c
   583  001942  EFA5  F00C         	goto	u1951
   584  001946  EFA7  F00C         	goto	u1950
   585  00194A                     u1951:
   586  00194A  EF3F  F00D         	goto	l96
   587  00194E                     u1950:
   588  00194E                     
   589                           ;main.c: 54:                     state_machine = MODE_1;
   590  00194E  0E01               	movlw	1
   591  001950  6E3B               	movwf	_state_machine^0,c
   592                           
   593                           ;main.c: 55:                     change_state = 1;
   594  001952  0E01               	movlw	1
   595  001954  6E21               	movwf	_change_state^0,c
   596                           
   597                           ;main.c: 56:                     button_flag = 0;
   598  001956  0E00               	movlw	0
   599  001958  6E3C               	movwf	_button_flag^0,c
   600  00195A  EF3F  F00D         	goto	l3200
   601  00195E                     l3150:
   602                           
   603                           ;main.c: 60:                 if (button == 1)button_flag = 1;
   604  00195E  042B               	decf	_button^0,w,c
   605  001960  A4D8               	btfss	status,2,c
   606  001962  EFB5  F00C         	goto	u1961
   607  001966  EFB7  F00C         	goto	u1960
   608  00196A                     u1961:
   609  00196A  EFB9  F00C         	goto	l3154
   610  00196E                     u1960:
   611  00196E  0E01               	movlw	1
   612  001970  6E3C               	movwf	_button_flag^0,c
   613  001972                     l3154:
   614                           
   615                           ;main.c: 61:                 if (button_flag == 1 && button == 3){
   616  001972  043C               	decf	_button_flag^0,w,c
   617  001974  A4D8               	btfss	status,2,c
   618  001976  EFBF  F00C         	goto	u1971
   619  00197A  EFC1  F00C         	goto	u1970
   620  00197E                     u1971:
   621  00197E  EFD0  F00C         	goto	l3160
   622  001982                     u1970:
   623  001982  0E03               	movlw	3
   624  001984  182B               	xorwf	_button^0,w,c
   625  001986  A4D8               	btfss	status,2,c
   626  001988  EFC8  F00C         	goto	u1981
   627  00198C  EFCA  F00C         	goto	u1980
   628  001990                     u1981:
   629  001990  EFD0  F00C         	goto	l3160
   630  001994                     u1980:
   631  001994                     
   632                           ;main.c: 62:                     state_machine = MODE_2;
   633  001994  0E02               	movlw	2
   634  001996  6E3B               	movwf	_state_machine^0,c
   635                           
   636                           ;main.c: 63:                     change_state = 1;
   637  001998  0E01               	movlw	1
   638  00199A  6E21               	movwf	_change_state^0,c
   639                           
   640                           ;main.c: 64:                     button_flag = 0;
   641  00199C  0E00               	movlw	0
   642  00199E  6E3C               	movwf	_button_flag^0,c
   643  0019A0                     l3160:
   644                           
   645                           ;main.c: 66:                 change_time();
   646  0019A0  EC6F  F00A         	call	_change_time	;wreg free
   647                           
   648                           ;main.c: 67:                 break;
   649  0019A4  EF3F  F00D         	goto	l3200
   650  0019A8                     l3162:
   651                           
   652                           ;main.c: 69:                 if (button == 1)button_flag = 1;
   653  0019A8  042B               	decf	_button^0,w,c
   654  0019AA  A4D8               	btfss	status,2,c
   655  0019AC  EFDA  F00C         	goto	u1991
   656  0019B0  EFDC  F00C         	goto	u1990
   657  0019B4                     u1991:
   658  0019B4  EFDE  F00C         	goto	l3166
   659  0019B8                     u1990:
   660  0019B8  0E01               	movlw	1
   661  0019BA  6E3C               	movwf	_button_flag^0,c
   662  0019BC                     l3166:
   663                           
   664                           ;main.c: 70:                 if (button_flag == 1 && button == 3){
   665  0019BC  043C               	decf	_button_flag^0,w,c
   666  0019BE  A4D8               	btfss	status,2,c
   667  0019C0  EFE4  F00C         	goto	u2001
   668  0019C4  EFE6  F00C         	goto	u2000
   669  0019C8                     u2001:
   670  0019C8  EFD0  F00C         	goto	l3160
   671  0019CC                     u2000:
   672  0019CC  0E03               	movlw	3
   673  0019CE  182B               	xorwf	_button^0,w,c
   674  0019D0  A4D8               	btfss	status,2,c
   675  0019D2  EFED  F00C         	goto	u2011
   676  0019D6  EFEF  F00C         	goto	u2010
   677  0019DA                     u2011:
   678  0019DA  EFD0  F00C         	goto	l3160
   679  0019DE                     u2010:
   680  0019DE                     
   681                           ;main.c: 71:                     state_machine = MODE_3;
   682  0019DE  0E03               	movlw	3
   683  0019E0  6E3B               	movwf	_state_machine^0,c
   684                           
   685                           ;main.c: 72:                     change_state = 1;
   686  0019E2  0E01               	movlw	1
   687  0019E4  6E21               	movwf	_change_state^0,c
   688                           
   689                           ;main.c: 73:                     button_flag = 0;
   690  0019E6  0E00               	movlw	0
   691  0019E8  6E3C               	movwf	_button_flag^0,c
   692  0019EA  EFD0  F00C         	goto	l3160
   693  0019EE                     l3174:
   694                           
   695                           ;main.c: 78:                if (button == 1)button_flag = 1;
   696  0019EE  042B               	decf	_button^0,w,c
   697  0019F0  A4D8               	btfss	status,2,c
   698  0019F2  EFFD  F00C         	goto	u2021
   699  0019F6  EFFF  F00C         	goto	u2020
   700  0019FA                     u2021:
   701  0019FA  EF01  F00D         	goto	l3178
   702  0019FE                     u2020:
   703  0019FE  0E01               	movlw	1
   704  001A00  6E3C               	movwf	_button_flag^0,c
   705  001A02                     l3178:
   706                           
   707                           ;main.c: 79:                 if (button_flag == 1 && button == 3){
   708  001A02  043C               	decf	_button_flag^0,w,c
   709  001A04  A4D8               	btfss	status,2,c
   710  001A06  EF07  F00D         	goto	u2031
   711  001A0A  EF09  F00D         	goto	u2030
   712  001A0E                     u2031:
   713  001A0E  EFD0  F00C         	goto	l3160
   714  001A12                     u2030:
   715  001A12  0E03               	movlw	3
   716  001A14  182B               	xorwf	_button^0,w,c
   717  001A16  A4D8               	btfss	status,2,c
   718  001A18  EF10  F00D         	goto	u2041
   719  001A1C  EF12  F00D         	goto	u2040
   720  001A20                     u2041:
   721  001A20  EFD0  F00C         	goto	l3160
   722  001A24                     u2040:
   723  001A24                     
   724                           ;main.c: 80:                     state_machine = MODE_4;
   725  001A24  0E04               	movlw	4
   726  001A26  6E3B               	movwf	_state_machine^0,c
   727                           
   728                           ;main.c: 81:                     change_state = 1;
   729  001A28  0E01               	movlw	1
   730  001A2A  6E21               	movwf	_change_state^0,c
   731                           
   732                           ;main.c: 82:                     button_flag = 0;
   733  001A2C  0E00               	movlw	0
   734  001A2E  6E3C               	movwf	_button_flag^0,c
   735  001A30  EFD0  F00C         	goto	l3160
   736  001A34                     l3186:
   737                           
   738                           ;main.c: 87:                 if (button == 1)button_flag = 1;
   739  001A34  042B               	decf	_button^0,w,c
   740  001A36  A4D8               	btfss	status,2,c
   741  001A38  EF20  F00D         	goto	u2051
   742  001A3C  EF22  F00D         	goto	u2050
   743  001A40                     u2051:
   744  001A40  EF24  F00D         	goto	l3190
   745  001A44                     u2050:
   746  001A44  0E01               	movlw	1
   747  001A46  6E3C               	movwf	_button_flag^0,c
   748  001A48                     l3190:
   749                           
   750                           ;main.c: 88:                 if (button_flag == 1 && button == 3){
   751  001A48  043C               	decf	_button_flag^0,w,c
   752  001A4A  A4D8               	btfss	status,2,c
   753  001A4C  EF2A  F00D         	goto	u2061
   754  001A50  EF2C  F00D         	goto	u2060
   755  001A54                     u2061:
   756  001A54  EFD0  F00C         	goto	l3160
   757  001A58                     u2060:
   758  001A58  0E03               	movlw	3
   759  001A5A  182B               	xorwf	_button^0,w,c
   760  001A5C  A4D8               	btfss	status,2,c
   761  001A5E  EF33  F00D         	goto	u2071
   762  001A62  EF35  F00D         	goto	u2070
   763  001A66                     u2071:
   764  001A66  EFD0  F00C         	goto	l3160
   765  001A6A                     u2070:
   766  001A6A                     
   767                           ;main.c: 89:                     state_machine = MODE_0;
   768  001A6A  0E00               	movlw	0
   769  001A6C  6E3B               	movwf	_state_machine^0,c
   770                           
   771                           ;main.c: 90:                     change_state = 1;
   772  001A6E  0E01               	movlw	1
   773  001A70  6E21               	movwf	_change_state^0,c
   774                           
   775                           ;main.c: 91:                     stop_watch_flag = 0;
   776  001A72  0E00               	movlw	0
   777  001A74  6E24               	movwf	_stop_watch_flag^0,c
   778                           
   779                           ;main.c: 92:                     button_flag = 0;
   780  001A76  0E00               	movlw	0
   781  001A78  6E3C               	movwf	_button_flag^0,c
   782  001A7A  EFD0  F00C         	goto	l3160
   783  001A7E                     l96:
   784  001A7E                     l3200:
   785  001A7E  503B               	movf	_state_machine^0,w,c
   786  001A80  6E1F               	movwf	??_main^0,c
   787  001A82  6A20               	clrf	(??_main+1)^0,c
   788                           
   789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   790                           ; Switch size 1, requested type "simple"
   791                           ; Number of cases is 1, Range of values is 0 to 0
   792                           ; switch strategies available:
   793                           ; Name         Instructions Cycles
   794                           ; simple_byte            4     3 (average)
   795                           ;	Chosen strategy is simple_byte
   796  001A84  5020               	movf	(??_main+1)^0,w,c
   797  001A86  0A00               	xorlw	0	; case 0
   798  001A88  B4D8               	btfsc	status,2,c
   799  001A8A  EF49  F00D         	goto	l3254
   800  001A8E  EF3F  F00D         	goto	l3200
   801  001A92                     l3254:
   802                           
   803                           ; Switch size 1, requested type "simple"
   804                           ; Number of cases is 5, Range of values is 0 to 4
   805                           ; switch strategies available:
   806                           ; Name         Instructions Cycles
   807                           ; simple_byte           16     9 (average)
   808                           ;	Chosen strategy is simple_byte
   809  001A92  501F               	movf	??_main^0,w,c
   810  001A94  0A00               	xorlw	0	; case 0
   811  001A96  B4D8               	btfsc	status,2,c
   812  001A98  EF8C  F00C         	goto	l3140
   813  001A9C  0A01               	xorlw	1	; case 1
   814  001A9E  B4D8               	btfsc	status,2,c
   815  001AA0  EFAF  F00C         	goto	l3150
   816  001AA4  0A03               	xorlw	3	; case 2
   817  001AA6  B4D8               	btfsc	status,2,c
   818  001AA8  EFD4  F00C         	goto	l3162
   819  001AAC  0A01               	xorlw	1	; case 3
   820  001AAE  B4D8               	btfsc	status,2,c
   821  001AB0  EFF7  F00C         	goto	l3174
   822  001AB4  0A07               	xorlw	7	; case 4
   823  001AB6  B4D8               	btfsc	status,2,c
   824  001AB8  EF1A  F00D         	goto	l3186
   825  001ABC  EF3F  F00D         	goto	l3200
   826  001AC0  EF07  F000         	goto	start
   827  001AC4                     __end_of_main:
   828                           	opt callstack 0
   829                           
   830 ;; *************** function _initial *****************
   831 ;; Defined at:
   832 ;;		line 6 in file "initial.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:   12
   853 ;; This function calls:
   854 ;;		_initial_display
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text1
   861  0027F4                     __ptext1:
   862                           	opt callstack 0
   863  0027F4                     _initial:
   864                           	opt callstack 18
   865  0027F4                     
   866                           ;initial.c: 7:     OSCCON = 0b01110000;
   867  0027F4  0E70               	movlw	112
   868  0027F6  6ED3               	movwf	211,c	;volatile
   869                           
   870                           ;initial.c: 8:     T0CON = 0b11000110;
   871  0027F8  0EC6               	movlw	198
   872  0027FA  6ED5               	movwf	213,c	;volatile
   873  0027FC                     
   874                           ;initial.c: 9:     INTCONbits.TMR0IE = 1;
   875  0027FC  8AF2               	bsf	242,5,c	;volatile
   876  0027FE                     
   877                           ;initial.c: 10:     INTCONbits.TMR0IF = 0;
   878  0027FE  94F2               	bcf	242,2,c	;volatile
   879  002800                     
   880                           ;initial.c: 11:     INTCONbits.GIE = 1;
   881  002800  8EF2               	bsf	242,7,c	;volatile
   882  002802                     
   883                           ;initial.c: 12:     TRISAbits.RA5 = 1;
   884  002802  8A92               	bsf	146,5,c	;volatile
   885  002804                     
   886                           ;initial.c: 13:     TRISBbits.RB0 = 1;
   887  002804  8093               	bsf	147,0,c	;volatile
   888                           
   889                           ;initial.c: 14:     TRISD = 0x00;
   890  002806  0E00               	movlw	0
   891  002808  6E95               	movwf	149,c	;volatile
   892                           
   893                           ;initial.c: 15:     PORTD = 0x00;
   894  00280A  0E00               	movlw	0
   895  00280C  6E83               	movwf	131,c	;volatile
   896                           
   897                           ;initial.c: 16:     ADCON1 = 0b00001111;
   898  00280E  0E0F               	movlw	15
   899  002810  6EC1               	movwf	193,c	;volatile
   900                           
   901                           ;initial.c: 17:     TMR0L = 0x00;
   902  002812  0E00               	movlw	0
   903  002814  6ED6               	movwf	214,c	;volatile
   904                           
   905                           ;initial.c: 18:     TMR0L = 0xFFFF - 16*1;
   906  002816  0EEF               	movlw	239
   907  002818  6ED6               	movwf	214,c	;volatile
   908  00281A                     
   909                           ;initial.c: 19:     TMR0H = (0xFFFF - 16*1)>>8;
   910  00281A  68D7               	setf	215,c	;volatile
   911  00281C                     
   912                           ;initial.c: 20:     initial_display();
   913  00281C  EC2D  F008         	call	_initial_display	;wreg free
   914  002820  0012               	return		;funcret
   915  002822                     __end_of_initial:
   916                           	opt callstack 0
   917                           
   918 ;; *************** function _initial_display *****************
   919 ;; Defined at:
   920 ;;		line 137 in file "display.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;Total ram usage:        2 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:   11
   941 ;; This function calls:
   942 ;;		_LCDInit
   943 ;;		_LCDPutChar
   944 ;;		_LCDPutInst
   945 ;;		_LCDPutStr
   946 ;;		___awdiv
   947 ;;		___awmod
   948 ;; This function is called by:
   949 ;;		_initial
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text2
   954  00105A                     __ptext2:
   955                           	opt callstack 0
   956  00105A                     _initial_display:
   957                           	opt callstack 18
   958  00105A                     
   959                           ;display.c: 138:     if (init_setting == 0){
   960  00105A  502C               	movf	_init_setting^0,w,c
   961  00105C  A4D8               	btfss	status,2,c
   962  00105E  EF33  F008         	goto	u1351
   963  001062  EF35  F008         	goto	u1350
   964  001066                     u1351:
   965  001066  EF2C  F009         	goto	l2660
   966  00106A                     u1350:
   967  00106A                     
   968                           ;display.c: 139:         LCDInit();
   969  00106A  EC53  F012         	call	_LCDInit	;wreg free
   970                           
   971                           ;display.c: 140:         LCDPutInst(0x01);
   972  00106E  0E01               	movlw	1
   973  001070  EC27  F013         	call	_LCDPutInst
   974  001074                     
   975                           ;display.c: 141:         init_setting = 1;
   976  001074  0E01               	movlw	1
   977  001076  6E2C               	movwf	_init_setting^0,c
   978  001078  EF2C  F009         	goto	l2660
   979  00107C                     l2594:
   980                           
   981                           ;display.c: 145:             LCDPutInst(0x80);
   982  00107C  0E80               	movlw	128
   983  00107E  EC27  F013         	call	_LCDPutInst
   984  001082                     
   985                           ;display.c: 146:             LCDPutStr("I. DIGITAL WATCH");
   986  001082  0E45               	movlw	low STR_4
   987  001084  6E1B               	movwf	LCDPutStr@ptr^0,c
   988  001086  0E10               	movlw	high STR_4
   989  001088  6E1C               	movwf	(LCDPutStr@ptr+1)^0,c
   990  00108A  ECBC  F013         	call	_LCDPutStr	;wreg free
   991  00108E                     
   992                           ;display.c: 147:             LCDPutInst(0xC0);
   993  00108E  0EC0               	movlw	192
   994  001090  EC27  F013         	call	_LCDPutInst
   995  001094                     
   996                           ;display.c: 148:             LCDPutInst(0xC4);
   997  001094  0EC4               	movlw	196
   998  001096  EC27  F013         	call	_LCDPutInst
   999  00109A                     
  1000                           ;display.c: 149:             LCDPutChar(hour/10 + 48);
  1001  00109A  C035  F015         	movff	_hour,___awdiv@dividend
  1002  00109E  6A16               	clrf	(___awdiv@dividend+1)^0,c
  1003  0010A0  0E00               	movlw	0
  1004  0010A2  6E18               	movwf	(___awdiv@divisor+1)^0,c
  1005  0010A4  0E0A               	movlw	10
  1006  0010A6  6E17               	movwf	___awdiv@divisor^0,c
  1007  0010A8  EC7B  F010         	call	___awdiv	;wreg free
  1008  0010AC  5015               	movf	?___awdiv^0,w,c
  1009  0010AE  0F30               	addlw	48
  1010  0010B0  EC01  F013         	call	_LCDPutChar
  1011  0010B4                     
  1012                           ;display.c: 150:             LCDPutChar(hour%10 + 48);
  1013  0010B4  C035  F015         	movff	_hour,___awmod@dividend
  1014  0010B8  6A16               	clrf	(___awmod@dividend+1)^0,c
  1015  0010BA  0E00               	movlw	0
  1016  0010BC  6E18               	movwf	(___awmod@divisor+1)^0,c
  1017  0010BE  0E0A               	movlw	10
  1018  0010C0  6E17               	movwf	___awmod@divisor^0,c
  1019  0010C2  EC3F  F011         	call	___awmod	;wreg free
  1020  0010C6  5015               	movf	?___awmod^0,w,c
  1021  0010C8  0F30               	addlw	48
  1022  0010CA  EC01  F013         	call	_LCDPutChar
  1023  0010CE                     
  1024                           ;display.c: 151:             LCDPutChar(':');
  1025  0010CE  0E3A               	movlw	58
  1026  0010D0  EC01  F013         	call	_LCDPutChar
  1027  0010D4                     
  1028                           ;display.c: 152:             LCDPutChar(minute/10 + 48);
  1029  0010D4  C036  F015         	movff	_minute,___awdiv@dividend
  1030  0010D8  6A16               	clrf	(___awdiv@dividend+1)^0,c
  1031  0010DA  0E00               	movlw	0
  1032  0010DC  6E18               	movwf	(___awdiv@divisor+1)^0,c
  1033  0010DE  0E0A               	movlw	10
  1034  0010E0  6E17               	movwf	___awdiv@divisor^0,c
  1035  0010E2  EC7B  F010         	call	___awdiv	;wreg free
  1036  0010E6  5015               	movf	?___awdiv^0,w,c
  1037  0010E8  0F30               	addlw	48
  1038  0010EA  EC01  F013         	call	_LCDPutChar
  1039  0010EE                     
  1040                           ;display.c: 153:             LCDPutChar(minute%10 + 48);
  1041  0010EE  C036  F015         	movff	_minute,___awmod@dividend
  1042  0010F2  6A16               	clrf	(___awmod@dividend+1)^0,c
  1043  0010F4  0E00               	movlw	0
  1044  0010F6  6E18               	movwf	(___awmod@divisor+1)^0,c
  1045  0010F8  0E0A               	movlw	10
  1046  0010FA  6E17               	movwf	___awmod@divisor^0,c
  1047  0010FC  EC3F  F011         	call	___awmod	;wreg free
  1048  001100  5015               	movf	?___awmod^0,w,c
  1049  001102  0F30               	addlw	48
  1050  001104  EC01  F013         	call	_LCDPutChar
  1051  001108                     
  1052                           ;display.c: 154:             LCDPutChar(':');
  1053  001108  0E3A               	movlw	58
  1054  00110A  EC01  F013         	call	_LCDPutChar
  1055  00110E                     
  1056                           ;display.c: 155:             LCDPutChar(second/10 + 48);
  1057  00110E  C037  F015         	movff	_second,___awdiv@dividend
  1058  001112  6A16               	clrf	(___awdiv@dividend+1)^0,c
  1059  001114  0E00               	movlw	0
  1060  001116  6E18               	movwf	(___awdiv@divisor+1)^0,c
  1061  001118  0E0A               	movlw	10
  1062  00111A  6E17               	movwf	___awdiv@divisor^0,c
  1063  00111C  EC7B  F010         	call	___awdiv	;wreg free
  1064  001120  5015               	movf	?___awdiv^0,w,c
  1065  001122  0F30               	addlw	48
  1066  001124  EC01  F013         	call	_LCDPutChar
  1067  001128                     
  1068                           ;display.c: 156:             LCDPutChar(second%10 + 48);
  1069  001128  C037  F015         	movff	_second,___awmod@dividend
  1070  00112C  6A16               	clrf	(___awmod@dividend+1)^0,c
  1071  00112E  0E00               	movlw	0
  1072  001130  6E18               	movwf	(___awmod@divisor+1)^0,c
  1073  001132  0E0A               	movlw	10
  1074  001134  6E17               	movwf	___awmod@divisor^0,c
  1075  001136  EC3F  F011         	call	___awmod	;wreg free
  1076  00113A  5015               	movf	?___awmod^0,w,c
  1077  00113C  0F30               	addlw	48
  1078  00113E  EC01  F013         	call	_LCDPutChar
  1079                           
  1080                           ;display.c: 157:             break;
  1081  001142  EF4D  F009         	goto	l506
  1082  001146                     l2618:
  1083                           
  1084                           ;display.c: 159:             LCDPutInst(0x80);
  1085  001146  0E80               	movlw	128
  1086  001148  EC27  F013         	call	_LCDPutInst
  1087  00114C                     
  1088                           ;display.c: 160:             LCDPutStr("II. SET HOUR    ");
  1089  00114C  0E01               	movlw	low STR_5
  1090  00114E  6E1B               	movwf	LCDPutStr@ptr^0,c
  1091  001150  0E10               	movlw	high STR_5
  1092  001152  6E1C               	movwf	(LCDPutStr@ptr+1)^0,c
  1093  001154  ECBC  F013         	call	_LCDPutStr	;wreg free
  1094                           
  1095                           ;display.c: 161:             break;
  1096  001158  EF4D  F009         	goto	l506
  1097  00115C                     l2622:
  1098                           
  1099                           ;display.c: 163:             LCDPutInst(0x80);
  1100  00115C  0E80               	movlw	128
  1101  00115E  EC27  F013         	call	_LCDPutInst
  1102  001162                     
  1103                           ;display.c: 164:             LCDPutStr("III. SET MINUTE ");
  1104  001162  0E34               	movlw	low STR_6
  1105  001164  6E1B               	movwf	LCDPutStr@ptr^0,c
  1106  001166  0E10               	movlw	high STR_6
  1107  001168  6E1C               	movwf	(LCDPutStr@ptr+1)^0,c
  1108  00116A  ECBC  F013         	call	_LCDPutStr	;wreg free
  1109                           
  1110                           ;display.c: 165:             break;
  1111  00116E  EF4D  F009         	goto	l506
  1112  001172                     l2626:
  1113                           
  1114                           ;display.c: 167:             LCDPutInst(0x80);
  1115  001172  0E80               	movlw	128
  1116  001174  EC27  F013         	call	_LCDPutInst
  1117  001178                     
  1118                           ;display.c: 168:             LCDPutStr("IV. SET SECOND  ");
  1119  001178  0E23               	movlw	low STR_7
  1120  00117A  6E1B               	movwf	LCDPutStr@ptr^0,c
  1121  00117C  0E10               	movlw	high STR_7
  1122  00117E  6E1C               	movwf	(LCDPutStr@ptr+1)^0,c
  1123  001180  ECBC  F013         	call	_LCDPutStr	;wreg free
  1124                           
  1125                           ;display.c: 169:             break;
  1126  001184  EF4D  F009         	goto	l506
  1127  001188                     l2630:
  1128                           
  1129                           ;display.c: 171:             LCDPutInst(0x80);
  1130  001188  0E80               	movlw	128
  1131  00118A  EC27  F013         	call	_LCDPutInst
  1132  00118E                     
  1133                           ;display.c: 172:             LCDPutStr("V. STOP WATCH   ");
  1134  00118E  0E12               	movlw	low STR_8
  1135  001190  6E1B               	movwf	LCDPutStr@ptr^0,c
  1136  001192  0E10               	movlw	high STR_8
  1137  001194  6E1C               	movwf	(LCDPutStr@ptr+1)^0,c
  1138  001196  ECBC  F013         	call	_LCDPutStr	;wreg free
  1139  00119A                     
  1140                           ;display.c: 173:             millis_10_stop = 0;
  1141  00119A  0E00               	movlw	0
  1142  00119C  6E33               	movwf	_millis_10_stop^0,c
  1143  00119E                     
  1144                           ;display.c: 174:             second_stop = 0;
  1145  00119E  0E00               	movlw	0
  1146  0011A0  6E32               	movwf	_second_stop^0,c
  1147  0011A2                     
  1148                           ;display.c: 175:             minute_stop = 0;
  1149  0011A2  0E00               	movlw	0
  1150  0011A4  6E31               	movwf	_minute_stop^0,c
  1151  0011A6                     
  1152                           ;display.c: 176:             LCDPutInst(0xCA);
  1153  0011A6  0ECA               	movlw	202
  1154  0011A8  EC27  F013         	call	_LCDPutInst
  1155  0011AC                     
  1156                           ;display.c: 177:             LCDPutChar(millis_10_stop/10 + 48);
  1157  0011AC  C033  F015         	movff	_millis_10_stop,___awdiv@dividend
  1158  0011B0  6A16               	clrf	(___awdiv@dividend+1)^0,c
  1159  0011B2  0E00               	movlw	0
  1160  0011B4  6E18               	movwf	(___awdiv@divisor+1)^0,c
  1161  0011B6  0E0A               	movlw	10
  1162  0011B8  6E17               	movwf	___awdiv@divisor^0,c
  1163  0011BA  EC7B  F010         	call	___awdiv	;wreg free
  1164  0011BE  5015               	movf	?___awdiv^0,w,c
  1165  0011C0  0F30               	addlw	48
  1166  0011C2  EC01  F013         	call	_LCDPutChar
  1167  0011C6                     
  1168                           ;display.c: 178:             LCDPutChar(millis_10_stop%10 + 48);
  1169  0011C6  C033  F015         	movff	_millis_10_stop,___awmod@dividend
  1170  0011CA  6A16               	clrf	(___awmod@dividend+1)^0,c
  1171  0011CC  0E00               	movlw	0
  1172  0011CE  6E18               	movwf	(___awmod@divisor+1)^0,c
  1173  0011D0  0E0A               	movlw	10
  1174  0011D2  6E17               	movwf	___awmod@divisor^0,c
  1175  0011D4  EC3F  F011         	call	___awmod	;wreg free
  1176  0011D8  5015               	movf	?___awmod^0,w,c
  1177  0011DA  0F30               	addlw	48
  1178  0011DC  EC01  F013         	call	_LCDPutChar
  1179  0011E0                     
  1180                           ;display.c: 179:             LCDPutInst(0xC7);
  1181  0011E0  0EC7               	movlw	199
  1182  0011E2  EC27  F013         	call	_LCDPutInst
  1183  0011E6                     
  1184                           ;display.c: 180:             LCDPutChar(second_stop/10 + 48);
  1185  0011E6  C032  F015         	movff	_second_stop,___awdiv@dividend
  1186  0011EA  6A16               	clrf	(___awdiv@dividend+1)^0,c
  1187  0011EC  0E00               	movlw	0
  1188  0011EE  6E18               	movwf	(___awdiv@divisor+1)^0,c
  1189  0011F0  0E0A               	movlw	10
  1190  0011F2  6E17               	movwf	___awdiv@divisor^0,c
  1191  0011F4  EC7B  F010         	call	___awdiv	;wreg free
  1192  0011F8  5015               	movf	?___awdiv^0,w,c
  1193  0011FA  0F30               	addlw	48
  1194  0011FC  EC01  F013         	call	_LCDPutChar
  1195  001200                     
  1196                           ;display.c: 181:             LCDPutChar(second_stop%10 + 48);
  1197  001200  C032  F015         	movff	_second_stop,___awmod@dividend
  1198  001204  6A16               	clrf	(___awmod@dividend+1)^0,c
  1199  001206  0E00               	movlw	0
  1200  001208  6E18               	movwf	(___awmod@divisor+1)^0,c
  1201  00120A  0E0A               	movlw	10
  1202  00120C  6E17               	movwf	___awmod@divisor^0,c
  1203  00120E  EC3F  F011         	call	___awmod	;wreg free
  1204  001212  5015               	movf	?___awmod^0,w,c
  1205  001214  0F30               	addlw	48
  1206  001216  EC01  F013         	call	_LCDPutChar
  1207  00121A                     
  1208                           ;display.c: 182:             LCDPutInst(0xC4);
  1209  00121A  0EC4               	movlw	196
  1210  00121C  EC27  F013         	call	_LCDPutInst
  1211  001220                     
  1212                           ;display.c: 183:             LCDPutChar(minute_stop/10 + 48);
  1213  001220  C031  F015         	movff	_minute_stop,___awdiv@dividend
  1214  001224  6A16               	clrf	(___awdiv@dividend+1)^0,c
  1215  001226  0E00               	movlw	0
  1216  001228  6E18               	movwf	(___awdiv@divisor+1)^0,c
  1217  00122A  0E0A               	movlw	10
  1218  00122C  6E17               	movwf	___awdiv@divisor^0,c
  1219  00122E  EC7B  F010         	call	___awdiv	;wreg free
  1220  001232  5015               	movf	?___awdiv^0,w,c
  1221  001234  0F30               	addlw	48
  1222  001236  EC01  F013         	call	_LCDPutChar
  1223  00123A                     
  1224                           ;display.c: 184:             LCDPutChar(minute_stop%10 + 48);
  1225  00123A  C031  F015         	movff	_minute_stop,___awmod@dividend
  1226  00123E  6A16               	clrf	(___awmod@dividend+1)^0,c
  1227  001240  0E00               	movlw	0
  1228  001242  6E18               	movwf	(___awmod@divisor+1)^0,c
  1229  001244  0E0A               	movlw	10
  1230  001246  6E17               	movwf	___awmod@divisor^0,c
  1231  001248  EC3F  F011         	call	___awmod	;wreg free
  1232  00124C  5015               	movf	?___awmod^0,w,c
  1233  00124E  0F30               	addlw	48
  1234  001250  EC01  F013         	call	_LCDPutChar
  1235                           
  1236                           ;display.c: 185:             break;
  1237  001254  EF4D  F009         	goto	l506
  1238  001258                     l2660:
  1239  001258  503B               	movf	_state_machine^0,w,c
  1240  00125A  6E1D               	movwf	??_initial_display^0,c
  1241  00125C  6A1E               	clrf	(??_initial_display+1)^0,c
  1242                           
  1243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1244                           ; Switch size 1, requested type "simple"
  1245                           ; Number of cases is 1, Range of values is 0 to 0
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte            4     3 (average)
  1249                           ;	Chosen strategy is simple_byte
  1250  00125E  501E               	movf	(??_initial_display+1)^0,w,c
  1251  001260  0A00               	xorlw	0	; case 0
  1252  001262  B4D8               	btfsc	status,2,c
  1253  001264  EF36  F009         	goto	l3256
  1254  001268  EF4D  F009         	goto	l506
  1255  00126C                     l3256:
  1256                           
  1257                           ; Switch size 1, requested type "simple"
  1258                           ; Number of cases is 5, Range of values is 0 to 4
  1259                           ; switch strategies available:
  1260                           ; Name         Instructions Cycles
  1261                           ; simple_byte           16     9 (average)
  1262                           ;	Chosen strategy is simple_byte
  1263  00126C  501D               	movf	??_initial_display^0,w,c
  1264  00126E  0A00               	xorlw	0	; case 0
  1265  001270  B4D8               	btfsc	status,2,c
  1266  001272  EF3E  F008         	goto	l2594
  1267  001276  0A01               	xorlw	1	; case 1
  1268  001278  B4D8               	btfsc	status,2,c
  1269  00127A  EFA3  F008         	goto	l2618
  1270  00127E  0A03               	xorlw	3	; case 2
  1271  001280  B4D8               	btfsc	status,2,c
  1272  001282  EFAE  F008         	goto	l2622
  1273  001286  0A01               	xorlw	1	; case 3
  1274  001288  B4D8               	btfsc	status,2,c
  1275  00128A  EFB9  F008         	goto	l2626
  1276  00128E  0A07               	xorlw	7	; case 4
  1277  001290  B4D8               	btfsc	status,2,c
  1278  001292  EFC4  F008         	goto	l2630
  1279  001296  EF4D  F009         	goto	l506
  1280  00129A                     l506:
  1281  00129A  0012               	return		;funcret
  1282  00129C                     __end_of_initial_display:
  1283                           	opt callstack 0
  1284                           
  1285 ;; *************** function ___awdiv *****************
  1286 ;; Defined at:
  1287 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  dividend        2   20[COMRAM] int 
  1290 ;;  divisor         2   22[COMRAM] int 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  quotient        2   26[COMRAM] int 
  1293 ;;  sign            1   25[COMRAM] unsigned char 
  1294 ;;  counter         1   24[COMRAM] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  2   20[COMRAM] int 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;Total ram usage:        8 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    7
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_initial_display
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text3
  1319  0020F6                     __ptext3:
  1320                           	opt callstack 0
  1321  0020F6                     ___awdiv:
  1322                           	opt callstack 21
  1323  0020F6  0E00               	movlw	0
  1324  0020F8  6E1A               	movwf	___awdiv@sign^0,c
  1325  0020FA  BE18               	btfsc	(___awdiv@divisor+1)^0,7,c
  1326  0020FC  EF84  F010         	goto	u1100
  1327  002100  EF82  F010         	goto	u1101
  1328  002104                     u1101:
  1329  002104  EF8A  F010         	goto	l2400
  1330  002108                     u1100:
  1331  002108  6C17               	negf	___awdiv@divisor^0,c
  1332  00210A  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  1333  00210C  B0D8               	btfsc	status,0,c
  1334  00210E  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  1335  002110  0E01               	movlw	1
  1336  002112  6E1A               	movwf	___awdiv@sign^0,c
  1337  002114                     l2400:
  1338  002114  BE16               	btfsc	(___awdiv@dividend+1)^0,7,c
  1339  002116  EF91  F010         	goto	u1110
  1340  00211A  EF8F  F010         	goto	u1111
  1341  00211E                     u1111:
  1342  00211E  EF97  F010         	goto	l2406
  1343  002122                     u1110:
  1344  002122  6C15               	negf	___awdiv@dividend^0,c
  1345  002124  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  1346  002126  B0D8               	btfsc	status,0,c
  1347  002128  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  1348  00212A  0E01               	movlw	1
  1349  00212C  1A1A               	xorwf	___awdiv@sign^0,f,c
  1350  00212E                     l2406:
  1351  00212E  0E00               	movlw	0
  1352  002130  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  1353  002132  0E00               	movlw	0
  1354  002134  6E1B               	movwf	___awdiv@quotient^0,c
  1355  002136  5017               	movf	___awdiv@divisor^0,w,c
  1356  002138  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  1357  00213A  B4D8               	btfsc	status,2,c
  1358  00213C  EFA2  F010         	goto	u1121
  1359  002140  EFA4  F010         	goto	u1120
  1360  002144                     u1121:
  1361  002144  EFCC  F010         	goto	l2428
  1362  002148                     u1120:
  1363  002148  0E01               	movlw	1
  1364  00214A  6E19               	movwf	___awdiv@counter^0,c
  1365  00214C  EFAC  F010         	goto	l2414
  1366  002150                     l2412:
  1367  002150  90D8               	bcf	status,0,c
  1368  002152  3617               	rlcf	___awdiv@divisor^0,f,c
  1369  002154  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  1370  002156  2A19               	incf	___awdiv@counter^0,f,c
  1371  002158                     l2414:
  1372  002158  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  1373  00215A  EFB1  F010         	goto	u1131
  1374  00215E  EFB3  F010         	goto	u1130
  1375  002162                     u1131:
  1376  002162  EFA8  F010         	goto	l2412
  1377  002166                     u1130:
  1378  002166                     l2416:
  1379  002166  90D8               	bcf	status,0,c
  1380  002168  361B               	rlcf	___awdiv@quotient^0,f,c
  1381  00216A  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1382  00216C  5017               	movf	___awdiv@divisor^0,w,c
  1383  00216E  5C15               	subwf	___awdiv@dividend^0,w,c
  1384  002170  5018               	movf	(___awdiv@divisor+1)^0,w,c
  1385  002172  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  1386  002174  A0D8               	btfss	status,0,c
  1387  002176  EFBF  F010         	goto	u1141
  1388  00217A  EFC1  F010         	goto	u1140
  1389  00217E                     u1141:
  1390  00217E  EFC6  F010         	goto	l2424
  1391  002182                     u1140:
  1392  002182  5017               	movf	___awdiv@divisor^0,w,c
  1393  002184  5E15               	subwf	___awdiv@dividend^0,f,c
  1394  002186  5018               	movf	(___awdiv@divisor+1)^0,w,c
  1395  002188  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  1396  00218A  801B               	bsf	___awdiv@quotient^0,0,c
  1397  00218C                     l2424:
  1398  00218C  90D8               	bcf	status,0,c
  1399  00218E  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  1400  002190  3217               	rrcf	___awdiv@divisor^0,f,c
  1401  002192  2E19               	decfsz	___awdiv@counter^0,f,c
  1402  002194  EFB3  F010         	goto	l2416
  1403  002198                     l2428:
  1404  002198  501A               	movf	___awdiv@sign^0,w,c
  1405  00219A  B4D8               	btfsc	status,2,c
  1406  00219C  EFD2  F010         	goto	u1151
  1407  0021A0  EFD4  F010         	goto	u1150
  1408  0021A4                     u1151:
  1409  0021A4  EFD8  F010         	goto	l2432
  1410  0021A8                     u1150:
  1411  0021A8  6C1B               	negf	___awdiv@quotient^0,c
  1412  0021AA  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  1413  0021AC  B0D8               	btfsc	status,0,c
  1414  0021AE  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  1415  0021B0                     l2432:
  1416  0021B0  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  1417  0021B4  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  1418  0021B8  0012               	return		;funcret
  1419  0021BA                     __end_of___awdiv:
  1420                           	opt callstack 0
  1421                           
  1422 ;; *************** function _LCDPutStr *****************
  1423 ;; Defined at:
  1424 ;;		line 199 in file "BBSPI_LCD.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  ptr             2   26[COMRAM] PTR const unsigned char 
  1427 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1428 ;;		 -> STR_4(17), STR_3(3), STR_2(3), STR_1(3), 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;Total ram usage:        2 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:   10
  1447 ;; This function calls:
  1448 ;;		_LCDPutChar
  1449 ;; This function is called by:
  1450 ;;		_initial_display
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text4
  1455  002778                     __ptext4:
  1456                           	opt callstack 0
  1457  002778                     _LCDPutStr:
  1458                           	opt callstack 18
  1459  002778                     
  1460                           ;BBSPI_LCD.c: 199: void LCDPutStr (const char *ptr);BBSPI_LCD.c: 200: {;BBSPI_LCD.c: 201
      +                          :     while(*ptr) LCDPutChar(*(ptr++));
  1461  002778  EFCA  F013         	goto	l2390
  1462  00277C                     l2386:
  1463  00277C  C01B  FFF6         	movff	LCDPutStr@ptr,tblptrl
  1464  002780  C01C  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  1465  002784                     	if	0	;tblptru may be non-zero
  1466  002784                     	endif
  1467  002784                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1468  002784  0E00               	movlw	low (__mediumconst shr (0+16))
  1469  002786  6EF8               	movwf	tblptru,c
  1470  002788                     	endif
  1471  002788  0008               	tblrd		*
  1472  00278A  50F5               	movf	tablat,w,c
  1473  00278C  EC01  F013         	call	_LCDPutChar
  1474  002790  4A1B               	infsnz	LCDPutStr@ptr^0,f,c
  1475  002792  2A1C               	incf	(LCDPutStr@ptr+1)^0,f,c
  1476  002794                     l2390:
  1477  002794  C01B  FFF6         	movff	LCDPutStr@ptr,tblptrl
  1478  002798  C01C  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  1479  00279C                     	if	0	;tblptru may be non-zero
  1480  00279C                     	endif
  1481  00279C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1482  00279C  0E00               	movlw	low (__mediumconst shr (0+16))
  1483  00279E  6EF8               	movwf	tblptru,c
  1484  0027A0                     	endif
  1485  0027A0  0008               	tblrd		*
  1486  0027A2  50F5               	movf	tablat,w,c
  1487  0027A4  0900               	iorlw	0
  1488  0027A6  A4D8               	btfss	status,2,c
  1489  0027A8  EFD8  F013         	goto	u1091
  1490  0027AC  EFDA  F013         	goto	u1090
  1491  0027B0                     u1091:
  1492  0027B0  EFBE  F013         	goto	l2386
  1493  0027B4                     u1090:
  1494  0027B4  0012               	return		;funcret
  1495  0027B6                     __end_of_LCDPutStr:
  1496                           	opt callstack 0
  1497                           
  1498 ;; *************** function _LCDPutChar *****************
  1499 ;; Defined at:
  1500 ;;		line 161 in file "BBSPI_LCD.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  ch              1    wreg     unsigned char 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  ch              1   25[COMRAM] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, status,0, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;Total ram usage:        1 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    9
  1521 ;; This function calls:
  1522 ;;		_WritePort_BBSPI
  1523 ;; This function is called by:
  1524 ;;		_LCDPutStr
  1525 ;;		_initial_display
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text5
  1530  002602                     __ptext5:
  1531                           	opt callstack 0
  1532  002602                     _LCDPutChar:
  1533                           	opt callstack 18
  1534                           
  1535                           ;incstack = 0
  1536                           ;LCDPutChar@ch stored from wreg
  1537  002602  6E1A               	movwf	LCDPutChar@ch^0,c
  1538  002604                     
  1539                           ;BBSPI_LCD.c: 161: void LCDPutChar (unsigned char ch);BBSPI_LCD.c: 162: {;BBSPI_LCD.c: 1
      +                          63:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1540  002604  0E21               	movlw	33
  1541  002606                     u2087:
  1542  002606  2EE8               	decfsz	wreg,f,c
  1543  002608  D7FE               	bra	u2087
  1544  00260A  F000               	nop	
  1545  00260C                     
  1546                           ;BBSPI_LCD.c: 164:     WritePort_BBSPI (0x12, 0x80);
  1547  00260C  0E80               	movlw	128
  1548  00260E  6E18               	movwf	WritePort_BBSPI@a^0,c
  1549  002610  0E12               	movlw	18
  1550  002612  EC32  F014         	call	_WritePort_BBSPI
  1551  002616                     
  1552                           ;BBSPI_LCD.c: 165:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1553  002616  0E06               	movlw	6
  1554  002618                     u2097:
  1555  002618  2EE8               	decfsz	wreg,f,c
  1556  00261A  D7FE               	bra	u2097
  1557  00261C  D000               	nop2	
  1558  00261E                     
  1559                           ;BBSPI_LCD.c: 166:     WritePort_BBSPI (0x13, ch);
  1560  00261E  C01A  F018         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  1561  002622  0E13               	movlw	19
  1562  002624  EC32  F014         	call	_WritePort_BBSPI
  1563  002628                     
  1564                           ;BBSPI_LCD.c: 167:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1565  002628  0E06               	movlw	6
  1566  00262A                     u2107:
  1567  00262A  2EE8               	decfsz	wreg,f,c
  1568  00262C  D7FE               	bra	u2107
  1569  00262E  D000               	nop2	
  1570  002630                     
  1571                           ;BBSPI_LCD.c: 168:     WritePort_BBSPI (0x12, 0xC0);
  1572  002630  0EC0               	movlw	192
  1573  002632  6E18               	movwf	WritePort_BBSPI@a^0,c
  1574  002634  0E12               	movlw	18
  1575  002636  EC32  F014         	call	_WritePort_BBSPI
  1576  00263A                     
  1577                           ;BBSPI_LCD.c: 169:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1578  00263A  0E06               	movlw	6
  1579  00263C                     u2117:
  1580  00263C  2EE8               	decfsz	wreg,f,c
  1581  00263E  D7FE               	bra	u2117
  1582  002640  D000               	nop2	
  1583  002642                     
  1584                           ;BBSPI_LCD.c: 170:     WritePort_BBSPI (0x12, 0x00);
  1585  002642  0E00               	movlw	0
  1586  002644  6E18               	movwf	WritePort_BBSPI@a^0,c
  1587  002646  0E12               	movlw	18
  1588  002648  EC32  F014         	call	_WritePort_BBSPI
  1589  00264C  0012               	return		;funcret
  1590  00264E                     __end_of_LCDPutChar:
  1591                           	opt callstack 0
  1592                           
  1593 ;; *************** function _LCDInit *****************
  1594 ;; Defined at:
  1595 ;;		line 46 in file "BBSPI_LCD.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;Total ram usage:        1 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:   10
  1616 ;; This function calls:
  1617 ;;		_InitBBSPI
  1618 ;;		_LCDPutInst
  1619 ;;		_Port_BBSPIInit
  1620 ;;		_WritePort_BBSPI
  1621 ;; This function is called by:
  1622 ;;		_initial_display
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text6
  1627  0024A6                     __ptext6:
  1628                           	opt callstack 0
  1629  0024A6                     _LCDInit:
  1630                           	opt callstack 18
  1631  0024A6                     
  1632                           ;BBSPI_LCD.c: 48:     InitBBSPI();
  1633  0024A6  EC59  F014         	call	_InitBBSPI	;wreg free
  1634  0024AA                     
  1635                           ;BBSPI_LCD.c: 49:     TRISFbits.TRISF6 = 0;
  1636  0024AA  9C97               	bcf	151,6,c	;volatile
  1637  0024AC                     
  1638                           ;BBSPI_LCD.c: 50:     LATFbits.LATF6 = 0;
  1639  0024AC  9C8E               	bcf	142,6,c	;volatile
  1640  0024AE                     
  1641                           ;BBSPI_LCD.c: 51:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1642  0024AE  0E03               	movlw	3
  1643  0024B0  6E1B               	movwf	??_LCDInit^0,c
  1644  0024B2  0E98               	movlw	152
  1645  0024B4                     u2127:
  1646  0024B4  2EE8               	decfsz	wreg,f,c
  1647  0024B6  D7FE               	bra	u2127
  1648  0024B8  2E1B               	decfsz	??_LCDInit^0,f,c
  1649  0024BA  D7FC               	bra	u2127
  1650  0024BC                     
  1651                           ;BBSPI_LCD.c: 52:     LATFbits.LATF6 = 1;
  1652  0024BC  8C8E               	bsf	142,6,c	;volatile
  1653  0024BE                     
  1654                           ;BBSPI_LCD.c: 53:     Port_BBSPIInit (0x00);
  1655  0024BE  0E00               	movlw	0
  1656  0024C0  EC25  F014         	call	_Port_BBSPIInit
  1657  0024C4                     
  1658                           ;BBSPI_LCD.c: 54:     Port_BBSPIInit (0x01);
  1659  0024C4  0E01               	movlw	1
  1660  0024C6  EC25  F014         	call	_Port_BBSPIInit
  1661  0024CA                     
  1662                           ;BBSPI_LCD.c: 55:     WritePort_BBSPI (0x12, 0);
  1663  0024CA  0E00               	movlw	0
  1664  0024CC  6E18               	movwf	WritePort_BBSPI@a^0,c
  1665  0024CE  0E12               	movlw	18
  1666  0024D0  EC32  F014         	call	_WritePort_BBSPI
  1667  0024D4                     
  1668                           ;BBSPI_LCD.c: 56:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1669  0024D4  0E27               	movlw	39
  1670  0024D6  6E1B               	movwf	??_LCDInit^0,c
  1671  0024D8  0EF5               	movlw	245
  1672  0024DA                     u2137:
  1673  0024DA  2EE8               	decfsz	wreg,f,c
  1674  0024DC  D7FE               	bra	u2137
  1675  0024DE  2E1B               	decfsz	??_LCDInit^0,f,c
  1676  0024E0  D7FC               	bra	u2137
  1677  0024E2  F000               	nop	
  1678  0024E4                     
  1679                           ;BBSPI_LCD.c: 57:     LCDPutInst(0x32);
  1680  0024E4  0E32               	movlw	50
  1681  0024E6  EC27  F013         	call	_LCDPutInst
  1682  0024EA                     
  1683                           ;BBSPI_LCD.c: 58:     LCDPutInst(0x3C);
  1684  0024EA  0E3C               	movlw	60
  1685  0024EC  EC27  F013         	call	_LCDPutInst
  1686  0024F0                     
  1687                           ;BBSPI_LCD.c: 59:     LCDPutInst(0x0C);
  1688  0024F0  0E0C               	movlw	12
  1689  0024F2  EC27  F013         	call	_LCDPutInst
  1690  0024F6                     
  1691                           ;BBSPI_LCD.c: 60:     LCDPutInst(0x01);
  1692  0024F6  0E01               	movlw	1
  1693  0024F8  EC27  F013         	call	_LCDPutInst
  1694  0024FC                     
  1695                           ;BBSPI_LCD.c: 61:     LCDPutInst(0x06);
  1696  0024FC  0E06               	movlw	6
  1697  0024FE  EC27  F013         	call	_LCDPutInst
  1698  002502  0012               	return		;funcret
  1699  002504                     __end_of_LCDInit:
  1700                           	opt callstack 0
  1701                           
  1702 ;; *************** function _Port_BBSPIInit *****************
  1703 ;; Defined at:
  1704 ;;		line 124 in file "BBSPI_LCD.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  port_dir        1    wreg     unsigned char 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  port_dir        1   23[COMRAM] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;Total ram usage:        1 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    8
  1725 ;; This function calls:
  1726 ;;		_SendByteBBSPI
  1727 ;; This function is called by:
  1728 ;;		_LCDInit
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text7
  1733  00284A                     __ptext7:
  1734                           	opt callstack 0
  1735  00284A                     _Port_BBSPIInit:
  1736                           	opt callstack 19
  1737                           
  1738                           ;incstack = 0
  1739                           ;Port_BBSPIInit@port_dir stored from wreg
  1740  00284A  6E18               	movwf	Port_BBSPIInit@port_dir^0,c
  1741  00284C                     
  1742                           ;BBSPI_LCD.c: 124: void Port_BBSPIInit (unsigned char port_dir);BBSPI_LCD.c: 125: {;BBSP
      +                          I_LCD.c: 129:     LATAbits.LATA2 = 0;
  1743  00284C  9489               	bcf	137,2,c	;volatile
  1744  00284E                     
  1745                           ;BBSPI_LCD.c: 130:     SendByteBBSPI(0x40);
  1746  00284E  0E40               	movlw	64
  1747  002850  ECEF  F011         	call	_SendByteBBSPI
  1748                           
  1749                           ;BBSPI_LCD.c: 131:     SendByteBBSPI(port_dir);
  1750  002854  5018               	movf	Port_BBSPIInit@port_dir^0,w,c
  1751  002856  ECEF  F011         	call	_SendByteBBSPI
  1752                           
  1753                           ;BBSPI_LCD.c: 132:     SendByteBBSPI(0x00);
  1754  00285A  0E00               	movlw	0
  1755  00285C  ECEF  F011         	call	_SendByteBBSPI
  1756  002860                     
  1757                           ;BBSPI_LCD.c: 133:     LATAbits.LATA2 = 1;
  1758  002860  8489               	bsf	137,2,c	;volatile
  1759  002862  0012               	return		;funcret
  1760  002864                     __end_of_Port_BBSPIInit:
  1761                           	opt callstack 0
  1762                           
  1763 ;; *************** function _LCDPutInst *****************
  1764 ;; Defined at:
  1765 ;;		line 180 in file "BBSPI_LCD.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  ch              1    wreg     unsigned char 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  ch              1   25[COMRAM] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;Total ram usage:        1 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    9
  1786 ;; This function calls:
  1787 ;;		_WritePort_BBSPI
  1788 ;; This function is called by:
  1789 ;;		_LCDInit
  1790 ;;		_initial_display
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text8
  1795  00264E                     __ptext8:
  1796                           	opt callstack 0
  1797  00264E                     _LCDPutInst:
  1798                           	opt callstack 19
  1799                           
  1800                           ;incstack = 0
  1801                           ;LCDPutInst@ch stored from wreg
  1802  00264E  6E1A               	movwf	LCDPutInst@ch^0,c
  1803  002650                     
  1804                           ;BBSPI_LCD.c: 180: void LCDPutInst (unsigned char ch);BBSPI_LCD.c: 181: {;BBSPI_LCD.c: 1
      +                          82:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1805  002650  0E21               	movlw	33
  1806  002652                     u2147:
  1807  002652  2EE8               	decfsz	wreg,f,c
  1808  002654  D7FE               	bra	u2147
  1809  002656  F000               	nop	
  1810  002658                     
  1811                           ;BBSPI_LCD.c: 183:     WritePort_BBSPI (0x12, 0x00);
  1812  002658  0E00               	movlw	0
  1813  00265A  6E18               	movwf	WritePort_BBSPI@a^0,c
  1814  00265C  0E12               	movlw	18
  1815  00265E  EC32  F014         	call	_WritePort_BBSPI
  1816  002662                     
  1817                           ;BBSPI_LCD.c: 184:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1818  002662  0E06               	movlw	6
  1819  002664                     u2157:
  1820  002664  2EE8               	decfsz	wreg,f,c
  1821  002666  D7FE               	bra	u2157
  1822  002668  D000               	nop2	
  1823  00266A                     
  1824                           ;BBSPI_LCD.c: 185:     WritePort_BBSPI (0x13, ch);
  1825  00266A  C01A  F018         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  1826  00266E  0E13               	movlw	19
  1827  002670  EC32  F014         	call	_WritePort_BBSPI
  1828  002674                     
  1829                           ;BBSPI_LCD.c: 186:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1830  002674  0E06               	movlw	6
  1831  002676                     u2167:
  1832  002676  2EE8               	decfsz	wreg,f,c
  1833  002678  D7FE               	bra	u2167
  1834  00267A  D000               	nop2	
  1835  00267C                     
  1836                           ;BBSPI_LCD.c: 187:     WritePort_BBSPI (0x12,0x40);
  1837  00267C  0E40               	movlw	64
  1838  00267E  6E18               	movwf	WritePort_BBSPI@a^0,c
  1839  002680  0E12               	movlw	18
  1840  002682  EC32  F014         	call	_WritePort_BBSPI
  1841  002686                     
  1842                           ;BBSPI_LCD.c: 188:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1843  002686  0E06               	movlw	6
  1844  002688                     u2177:
  1845  002688  2EE8               	decfsz	wreg,f,c
  1846  00268A  D7FE               	bra	u2177
  1847  00268C  D000               	nop2	
  1848  00268E                     
  1849                           ;BBSPI_LCD.c: 189:     WritePort_BBSPI (0x12, 0x00);
  1850  00268E  0E00               	movlw	0
  1851  002690  6E18               	movwf	WritePort_BBSPI@a^0,c
  1852  002692  0E12               	movlw	18
  1853  002694  EC32  F014         	call	_WritePort_BBSPI
  1854  002698  0012               	return		;funcret
  1855  00269A                     __end_of_LCDPutInst:
  1856                           	opt callstack 0
  1857                           
  1858 ;; *************** function _WritePort_BBSPI *****************
  1859 ;; Defined at:
  1860 ;;		line 145 in file "BBSPI_LCD.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  port_add        1    wreg     unsigned char 
  1863 ;;  a               1   23[COMRAM] unsigned char 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  port_add        1   24[COMRAM] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1875 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;Total ram usage:        2 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    8
  1882 ;; This function calls:
  1883 ;;		_SendByteBBSPI
  1884 ;; This function is called by:
  1885 ;;		_LCDInit
  1886 ;;		_LCDPutChar
  1887 ;;		_LCDPutInst
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text9
  1892  002864                     __ptext9:
  1893                           	opt callstack 0
  1894  002864                     _WritePort_BBSPI:
  1895                           	opt callstack 18
  1896                           
  1897                           ;incstack = 0
  1898                           ;WritePort_BBSPI@port_add stored from wreg
  1899  002864  6E19               	movwf	WritePort_BBSPI@port_add^0,c
  1900  002866                     
  1901                           ;BBSPI_LCD.c: 145: void WritePort_BBSPI (unsigned char port_add, unsigned char a);BBSPI_
      +                          LCD.c: 146: {;BBSPI_LCD.c: 147:     LATAbits.LATA2 = 0;
  1902  002866  9489               	bcf	137,2,c	;volatile
  1903  002868                     
  1904                           ;BBSPI_LCD.c: 148:     SendByteBBSPI(0x40);
  1905  002868  0E40               	movlw	64
  1906  00286A  ECEF  F011         	call	_SendByteBBSPI
  1907                           
  1908                           ;BBSPI_LCD.c: 149:     SendByteBBSPI(port_add);
  1909  00286E  5019               	movf	WritePort_BBSPI@port_add^0,w,c
  1910  002870  ECEF  F011         	call	_SendByteBBSPI
  1911                           
  1912                           ;BBSPI_LCD.c: 150:     SendByteBBSPI(a);
  1913  002874  5018               	movf	WritePort_BBSPI@a^0,w,c
  1914  002876  ECEF  F011         	call	_SendByteBBSPI
  1915  00287A                     
  1916                           ;BBSPI_LCD.c: 151:     LATAbits.LATA2 = 1;
  1917  00287A  8489               	bsf	137,2,c	;volatile
  1918  00287C  0012               	return		;funcret
  1919  00287E                     __end_of_WritePort_BBSPI:
  1920                           	opt callstack 0
  1921                           
  1922 ;; *************** function _SendByteBBSPI *****************
  1923 ;; Defined at:
  1924 ;;		line 92 in file "BBSPI_LCD.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  output          1    wreg     unsigned char 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  output          1   20[COMRAM] unsigned char 
  1929 ;;  input           1   22[COMRAM] unsigned char 
  1930 ;;  bitcount        1   21[COMRAM] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;Total ram usage:        3 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    7
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_Port_BBSPIInit
  1951 ;;		_WritePort_BBSPI
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text10
  1956  0023DE                     __ptext10:
  1957                           	opt callstack 0
  1958  0023DE                     _SendByteBBSPI:
  1959                           	opt callstack 18
  1960                           
  1961                           ;incstack = 0
  1962                           ;SendByteBBSPI@output stored from wreg
  1963  0023DE  6E15               	movwf	SendByteBBSPI@output^0,c
  1964  0023E0                     
  1965                           ;BBSPI_LCD.c: 92: void SendByteBBSPI (unsigned char output);BBSPI_LCD.c: 93: {;BBSPI_LCD
      +                          .c: 94:     unsigned char bitcount;;BBSPI_LCD.c: 95:     unsigned char input = output;
  1966  0023E0  C015  F017         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  1967  0023E4                     
  1968                           ;BBSPI_LCD.c: 97:     for(bitcount=0;bitcount<8;bitcount++)
  1969  0023E4  0E00               	movlw	0
  1970  0023E6  6E16               	movwf	SendByteBBSPI@bitcount^0,c
  1971  0023E8                     l173:
  1972                           
  1973                           ;BBSPI_LCD.c: 98:     {;BBSPI_LCD.c: 100:         if(output & 0x80)
  1974  0023E8  AE15               	btfss	SendByteBBSPI@output^0,7,c
  1975  0023EA  EFF9  F011         	goto	u11
  1976  0023EE  EFFB  F011         	goto	u10
  1977  0023F2                     u11:
  1978  0023F2  EFFE  F011         	goto	l175
  1979  0023F6                     u10:
  1980  0023F6                     
  1981                           ;BBSPI_LCD.c: 101:             LATCbits.LATC5 = 1;
  1982  0023F6  8A8B               	bsf	139,5,c	;volatile
  1983  0023F8  EFFF  F011         	goto	l176
  1984  0023FC                     l175:
  1985                           
  1986                           ;BBSPI_LCD.c: 103:             LATCbits.LATC5 = 0;
  1987  0023FC  9A8B               	bcf	139,5,c	;volatile
  1988  0023FE                     l176:
  1989                           
  1990                           ;BBSPI_LCD.c: 105:         if (LATCbits.LATC4)
  1991  0023FE  A88B               	btfss	139,4,c	;volatile
  1992  002400  EF04  F012         	goto	u21
  1993  002404  EF06  F012         	goto	u20
  1994  002408                     u21:
  1995  002408  EF0A  F012         	goto	l1194
  1996  00240C                     u20:
  1997  00240C                     
  1998                           ;BBSPI_LCD.c: 106:             input = (input << 1) | 0x1;
  1999  00240C  80D8               	bsf	status,0,c
  2000  00240E  3617               	rlcf	SendByteBBSPI@input^0,f,c
  2001  002410  EF0D  F012         	goto	l1196
  2002  002414                     l1194:
  2003                           
  2004                           ;BBSPI_LCD.c: 108:             input = input << 1;
  2005  002414  5017               	movf	SendByteBBSPI@input^0,w,c
  2006  002416  2417               	addwf	SendByteBBSPI@input^0,w,c
  2007  002418  6E17               	movwf	SendByteBBSPI@input^0,c
  2008  00241A                     l1196:
  2009                           
  2010                           ;BBSPI_LCD.c: 109:         LATCbits.LATC3 = 1;
  2011  00241A  868B               	bsf	139,3,c	;volatile
  2012  00241C                     
  2013                           ;BBSPI_LCD.c: 110:         __nop();__nop();__nop();__nop();__nop();__nop();
  2014  00241C  F000               	nop	
  2015  00241E  F000               	nop	
  2016  002420  F000               	nop	
  2017  002422  F000               	nop	
  2018  002424  F000               	nop	
  2019  002426  F000               	nop	
  2020  002428                     
  2021                           ;BBSPI_LCD.c: 112:         LATCbits.LATC3 = 0;
  2022  002428  968B               	bcf	139,3,c	;volatile
  2023                           
  2024                           ;BBSPI_LCD.c: 113:         output <<= 1;
  2025  00242A  90D8               	bcf	status,0,c
  2026  00242C  3615               	rlcf	SendByteBBSPI@output^0,f,c
  2027  00242E                     
  2028                           ;BBSPI_LCD.c: 114:     }
  2029  00242E  2A16               	incf	SendByteBBSPI@bitcount^0,f,c
  2030  002430  0E07               	movlw	7
  2031  002432  6416               	cpfsgt	SendByteBBSPI@bitcount^0,c
  2032  002434  EF1E  F012         	goto	u31
  2033  002438  EF20  F012         	goto	u30
  2034  00243C                     u31:
  2035  00243C  EFF4  F011         	goto	l173
  2036  002440                     u30:
  2037  002440  0012               	return		;funcret
  2038  002442                     __end_of_SendByteBBSPI:
  2039                           	opt callstack 0
  2040                           
  2041 ;; *************** function _InitBBSPI *****************
  2042 ;; Defined at:
  2043 ;;		line 71 in file "BBSPI_LCD.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		None
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    7
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_LCDInit
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text11
  2072  0028B2                     __ptext11:
  2073                           	opt callstack 0
  2074  0028B2                     _InitBBSPI:
  2075                           	opt callstack 20
  2076  0028B2                     
  2077                           ;BBSPI_LCD.c: 73:     TRISAbits.TRISA2 = 0;
  2078  0028B2  9492               	bcf	146,2,c	;volatile
  2079                           
  2080                           ;BBSPI_LCD.c: 74:     TRISCbits.TRISC4 = 1;
  2081  0028B4  8894               	bsf	148,4,c	;volatile
  2082                           
  2083                           ;BBSPI_LCD.c: 75:     TRISCbits.TRISC5 = 0;
  2084  0028B6  9A94               	bcf	148,5,c	;volatile
  2085                           
  2086                           ;BBSPI_LCD.c: 76:     TRISCbits.TRISC3 = 0;
  2087  0028B8  9694               	bcf	148,3,c	;volatile
  2088                           
  2089                           ;BBSPI_LCD.c: 78:     LATAbits.LATA2 = 1;
  2090  0028BA  8489               	bsf	137,2,c	;volatile
  2091                           
  2092                           ;BBSPI_LCD.c: 79:     LATCbits.LATC4 = 1;
  2093  0028BC  888B               	bsf	139,4,c	;volatile
  2094                           
  2095                           ;BBSPI_LCD.c: 80:     LATCbits.LATC5 = 0;
  2096  0028BE  9A8B               	bcf	139,5,c	;volatile
  2097                           
  2098                           ;BBSPI_LCD.c: 81:     LATCbits.LATC3 = 0;
  2099  0028C0  968B               	bcf	139,3,c	;volatile
  2100  0028C2  0012               	return		;funcret
  2101  0028C4                     __end_of_InitBBSPI:
  2102                           	opt callstack 0
  2103                           
  2104 ;; *************** function _change_time *****************
  2105 ;; Defined at:
  2106 ;;		line 57 in file "clock.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;Total ram usage:        2 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    8
  2127 ;; This function calls:
  2128 ;;		___awmod
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text12
  2135  0014DE                     __ptext12:
  2136                           	opt callstack 0
  2137  0014DE                     _change_time:
  2138                           	opt callstack 22
  2139  0014DE                     
  2140                           ;clock.c: 58:     switch(state_but_sel){
  2141  0014DE  EF67  F00B         	goto	l3070
  2142  0014E2                     l3022:
  2143                           
  2144                           ;clock.c: 60:             if (button == 2) state_but_sel = PRESS;
  2145  0014E2  0E02               	movlw	2
  2146  0014E4  182B               	xorwf	_button^0,w,c
  2147  0014E6  A4D8               	btfss	status,2,c
  2148  0014E8  EF78  F00A         	goto	u1721
  2149  0014EC  EF7A  F00A         	goto	u1720
  2150  0014F0                     u1721:
  2151  0014F0  EF80  F00B         	goto	l300
  2152  0014F4                     u1720:
  2153  0014F4  0E01               	movlw	1
  2154  0014F6  6E3A               	movwf	_state_but_sel^0,c
  2155  0014F8  EF80  F00B         	goto	l300
  2156  0014FC                     l3026:
  2157                           
  2158                           ;clock.c: 63:             if (button != 2){
  2159  0014FC  0E02               	movlw	2
  2160  0014FE  182B               	xorwf	_button^0,w,c
  2161  001500  B4D8               	btfsc	status,2,c
  2162  001502  EF85  F00A         	goto	u1731
  2163  001506  EF87  F00A         	goto	u1730
  2164  00150A                     u1731:
  2165  00150A  EFE5  F00A         	goto	l3042
  2166  00150E                     u1730:
  2167  00150E                     
  2168                           ;clock.c: 64:                 state_but_sel = NORMAL;
  2169  00150E  0E00               	movlw	0
  2170  001510  6E3A               	movwf	_state_but_sel^0,c
  2171                           
  2172                           ;clock.c: 65:                 switch(state_machine){
  2173  001512  EFC8  F00A         	goto	l3040
  2174  001516                     l3030:
  2175                           
  2176                           ;clock.c: 67:                         hour = (hour+1)%24;
  2177  001516  0E01               	movlw	1
  2178  001518  2435               	addwf	_hour^0,w,c
  2179  00151A  6E15               	movwf	___awmod@dividend^0,c
  2180  00151C  6A16               	clrf	(___awmod@dividend+1)^0,c
  2181  00151E  0E00               	movlw	0
  2182  001520  2216               	addwfc	(___awmod@dividend+1)^0,f,c
  2183  001522  0E00               	movlw	0
  2184  001524  6E18               	movwf	(___awmod@divisor+1)^0,c
  2185  001526  0E18               	movlw	24
  2186  001528  6E17               	movwf	___awmod@divisor^0,c
  2187  00152A  EC3F  F011         	call	___awmod	;wreg free
  2188  00152E  5015               	movf	?___awmod^0,w,c
  2189  001530  6E35               	movwf	_hour^0,c
  2190                           
  2191                           ;clock.c: 68:                         break;
  2192  001532  EFE5  F00A         	goto	l3042
  2193  001536                     l3032:
  2194                           
  2195                           ;clock.c: 70:                         minute = (minute+1)%60;
  2196  001536  0E01               	movlw	1
  2197  001538  2436               	addwf	_minute^0,w,c
  2198  00153A  6E15               	movwf	___awmod@dividend^0,c
  2199  00153C  6A16               	clrf	(___awmod@dividend+1)^0,c
  2200  00153E  0E00               	movlw	0
  2201  001540  2216               	addwfc	(___awmod@dividend+1)^0,f,c
  2202  001542  0E00               	movlw	0
  2203  001544  6E18               	movwf	(___awmod@divisor+1)^0,c
  2204  001546  0E3C               	movlw	60
  2205  001548  6E17               	movwf	___awmod@divisor^0,c
  2206  00154A  EC3F  F011         	call	___awmod	;wreg free
  2207  00154E  5015               	movf	?___awmod^0,w,c
  2208  001550  6E36               	movwf	_minute^0,c
  2209                           
  2210                           ;clock.c: 71:                         break;
  2211  001552  EFE5  F00A         	goto	l3042
  2212  001556                     l3034:
  2213                           
  2214                           ;clock.c: 73:                         second = (second+1)%60;
  2215  001556  0E01               	movlw	1
  2216  001558  2437               	addwf	_second^0,w,c
  2217  00155A  6E15               	movwf	___awmod@dividend^0,c
  2218  00155C  6A16               	clrf	(___awmod@dividend+1)^0,c
  2219  00155E  0E00               	movlw	0
  2220  001560  2216               	addwfc	(___awmod@dividend+1)^0,f,c
  2221  001562  0E00               	movlw	0
  2222  001564  6E18               	movwf	(___awmod@divisor+1)^0,c
  2223  001566  0E3C               	movlw	60
  2224  001568  6E17               	movwf	___awmod@divisor^0,c
  2225  00156A  EC3F  F011         	call	___awmod	;wreg free
  2226  00156E  5015               	movf	?___awmod^0,w,c
  2227  001570  6E37               	movwf	_second^0,c
  2228                           
  2229                           ;clock.c: 74:                         break;
  2230  001572  EFE5  F00A         	goto	l3042
  2231  001576                     l3036:
  2232                           
  2233                           ;clock.c: 76:                         stop_watch_flag = stop_watch_flag == 0?1:0;
  2234  001576  5024               	movf	_stop_watch_flag^0,w,c
  2235  001578  B4D8               	btfsc	status,2,c
  2236  00157A  EFC1  F00A         	goto	u1741
  2237  00157E  EFC4  F00A         	goto	u1740
  2238  001582                     u1741:
  2239  001582  0E01               	movlw	1
  2240  001584  EFC5  F00A         	goto	u1750
  2241  001588                     u1740:
  2242  001588  0E00               	movlw	0
  2243  00158A                     u1750:
  2244  00158A  6E24               	movwf	_stop_watch_flag^0,c
  2245                           
  2246                           ;clock.c: 77:                         break;
  2247  00158C  EFE5  F00A         	goto	l3042
  2248  001590                     l3040:
  2249  001590  503B               	movf	_state_machine^0,w,c
  2250  001592  6E1B               	movwf	??_change_time^0,c
  2251  001594  6A1C               	clrf	(??_change_time+1)^0,c
  2252                           
  2253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2254                           ; Switch size 1, requested type "simple"
  2255                           ; Number of cases is 1, Range of values is 0 to 0
  2256                           ; switch strategies available:
  2257                           ; Name         Instructions Cycles
  2258                           ; simple_byte            4     3 (average)
  2259                           ;	Chosen strategy is simple_byte
  2260  001596  501C               	movf	(??_change_time+1)^0,w,c
  2261  001598  0A00               	xorlw	0	; case 0
  2262  00159A  B4D8               	btfsc	status,2,c
  2263  00159C  EFD2  F00A         	goto	l3258
  2264  0015A0  EFE5  F00A         	goto	l3042
  2265  0015A4                     l3258:
  2266                           
  2267                           ; Switch size 1, requested type "simple"
  2268                           ; Number of cases is 4, Range of values is 1 to 4
  2269                           ; switch strategies available:
  2270                           ; Name         Instructions Cycles
  2271                           ; simple_byte           13     7 (average)
  2272                           ;	Chosen strategy is simple_byte
  2273  0015A4  501B               	movf	??_change_time^0,w,c
  2274  0015A6  0A01               	xorlw	1	; case 1
  2275  0015A8  B4D8               	btfsc	status,2,c
  2276  0015AA  EF8B  F00A         	goto	l3030
  2277  0015AE  0A03               	xorlw	3	; case 2
  2278  0015B0  B4D8               	btfsc	status,2,c
  2279  0015B2  EF9B  F00A         	goto	l3032
  2280  0015B6  0A01               	xorlw	1	; case 3
  2281  0015B8  B4D8               	btfsc	status,2,c
  2282  0015BA  EFAB  F00A         	goto	l3034
  2283  0015BE  0A07               	xorlw	7	; case 4
  2284  0015C0  B4D8               	btfsc	status,2,c
  2285  0015C2  EFBB  F00A         	goto	l3036
  2286  0015C6  EFE5  F00A         	goto	l3042
  2287  0015CA                     l3042:
  2288                           
  2289                           ;clock.c: 80:             if (count_sel >= 100) {
  2290  0015CA  0E63               	movlw	99
  2291  0015CC  6429               	cpfsgt	_count_sel^0,c
  2292  0015CE  EFEB  F00A         	goto	u1761
  2293  0015D2  EFED  F00A         	goto	u1760
  2294  0015D6                     u1761:
  2295  0015D6  EF80  F00B         	goto	l300
  2296  0015DA                     u1760:
  2297  0015DA                     
  2298                           ;clock.c: 81:                 state_but_sel = HOLD_1S;
  2299  0015DA  0E02               	movlw	2
  2300  0015DC  6E3A               	movwf	_state_but_sel^0,c
  2301                           
  2302                           ;clock.c: 82:                 count_sel = 0;
  2303  0015DE  0E00               	movlw	0
  2304  0015E0  6E29               	movwf	_count_sel^0,c
  2305  0015E2  EF80  F00B         	goto	l300
  2306  0015E6                     l3046:
  2307                           
  2308                           ;clock.c: 86:             if (button != 2) {
  2309  0015E6  0E02               	movlw	2
  2310  0015E8  182B               	xorwf	_button^0,w,c
  2311  0015EA  B4D8               	btfsc	status,2,c
  2312  0015EC  EFFA  F00A         	goto	u1771
  2313  0015F0  EFFC  F00A         	goto	u1770
  2314  0015F4                     u1771:
  2315  0015F4  EF12  F00B         	goto	l3054
  2316  0015F8                     u1770:
  2317  0015F8                     
  2318                           ;clock.c: 87:                 state_but_sel = NORMAL;
  2319  0015F8  0E00               	movlw	0
  2320  0015FA  6E3A               	movwf	_state_but_sel^0,c
  2321  0015FC                     
  2322                           ;clock.c: 88:                 if (state_machine == MODE_4) stop_watch_flag = stop_watch_
      +                          flag == 0? 1:0;
  2323  0015FC  0E04               	movlw	4
  2324  0015FE  183B               	xorwf	_state_machine^0,w,c
  2325  001600  A4D8               	btfss	status,2,c
  2326  001602  EF05  F00B         	goto	u1781
  2327  001606  EF07  F00B         	goto	u1780
  2328  00160A                     u1781:
  2329  00160A  EF12  F00B         	goto	l3054
  2330  00160E                     u1780:
  2331  00160E  5024               	movf	_stop_watch_flag^0,w,c
  2332  001610  B4D8               	btfsc	status,2,c
  2333  001612  EF0D  F00B         	goto	u1791
  2334  001616  EF10  F00B         	goto	u1790
  2335  00161A                     u1791:
  2336  00161A  0E01               	movlw	1
  2337  00161C  EF11  F00B         	goto	u1800
  2338  001620                     u1790:
  2339  001620  0E00               	movlw	0
  2340  001622                     u1800:
  2341  001622  6E24               	movwf	_stop_watch_flag^0,c
  2342  001624                     l3054:
  2343                           
  2344                           ;clock.c: 90:             if (count_sel >= (50)){
  2345  001624  0E31               	movlw	49
  2346  001626  6429               	cpfsgt	_count_sel^0,c
  2347  001628  EF18  F00B         	goto	u1811
  2348  00162C  EF1A  F00B         	goto	u1810
  2349  001630                     u1811:
  2350  001630  EF80  F00B         	goto	l300
  2351  001634                     u1810:
  2352  001634                     
  2353                           ;clock.c: 91:                 count_sel = 0;
  2354  001634  0E00               	movlw	0
  2355  001636  6E29               	movwf	_count_sel^0,c
  2356                           
  2357                           ;clock.c: 92:                 switch(state_machine){
  2358  001638  EF4E  F00B         	goto	l3066
  2359  00163C                     l3058:
  2360                           
  2361                           ;clock.c: 94:                         hour = (hour+1)%24;
  2362  00163C  0E01               	movlw	1
  2363  00163E  2435               	addwf	_hour^0,w,c
  2364  001640  6E15               	movwf	___awmod@dividend^0,c
  2365  001642  6A16               	clrf	(___awmod@dividend+1)^0,c
  2366  001644  0E00               	movlw	0
  2367  001646  2216               	addwfc	(___awmod@dividend+1)^0,f,c
  2368  001648  0E00               	movlw	0
  2369  00164A  6E18               	movwf	(___awmod@divisor+1)^0,c
  2370  00164C  0E18               	movlw	24
  2371  00164E  6E17               	movwf	___awmod@divisor^0,c
  2372  001650  EC3F  F011         	call	___awmod	;wreg free
  2373  001654  5015               	movf	?___awmod^0,w,c
  2374  001656  6E35               	movwf	_hour^0,c
  2375                           
  2376                           ;clock.c: 95:                         break;
  2377  001658  EF80  F00B         	goto	l300
  2378  00165C                     l3060:
  2379                           
  2380                           ;clock.c: 97:                         minute = (minute+1)%60;
  2381  00165C  0E01               	movlw	1
  2382  00165E  2436               	addwf	_minute^0,w,c
  2383  001660  6E15               	movwf	___awmod@dividend^0,c
  2384  001662  6A16               	clrf	(___awmod@dividend+1)^0,c
  2385  001664  0E00               	movlw	0
  2386  001666  2216               	addwfc	(___awmod@dividend+1)^0,f,c
  2387  001668  0E00               	movlw	0
  2388  00166A  6E18               	movwf	(___awmod@divisor+1)^0,c
  2389  00166C  0E3C               	movlw	60
  2390  00166E  6E17               	movwf	___awmod@divisor^0,c
  2391  001670  EC3F  F011         	call	___awmod	;wreg free
  2392  001674  5015               	movf	?___awmod^0,w,c
  2393  001676  6E36               	movwf	_minute^0,c
  2394                           
  2395                           ;clock.c: 98:                         break;
  2396  001678  EF80  F00B         	goto	l300
  2397  00167C                     l3062:
  2398                           
  2399                           ;clock.c: 100:                         second = (second+1)%60;
  2400  00167C  0E01               	movlw	1
  2401  00167E  2437               	addwf	_second^0,w,c
  2402  001680  6E15               	movwf	___awmod@dividend^0,c
  2403  001682  6A16               	clrf	(___awmod@dividend+1)^0,c
  2404  001684  0E00               	movlw	0
  2405  001686  2216               	addwfc	(___awmod@dividend+1)^0,f,c
  2406  001688  0E00               	movlw	0
  2407  00168A  6E18               	movwf	(___awmod@divisor+1)^0,c
  2408  00168C  0E3C               	movlw	60
  2409  00168E  6E17               	movwf	___awmod@divisor^0,c
  2410  001690  EC3F  F011         	call	___awmod	;wreg free
  2411  001694  5015               	movf	?___awmod^0,w,c
  2412  001696  6E37               	movwf	_second^0,c
  2413                           
  2414                           ;clock.c: 101:                         break;
  2415  001698  EF80  F00B         	goto	l300
  2416  00169C                     l3066:
  2417  00169C  503B               	movf	_state_machine^0,w,c
  2418  00169E  6E1B               	movwf	??_change_time^0,c
  2419  0016A0  6A1C               	clrf	(??_change_time+1)^0,c
  2420                           
  2421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2422                           ; Switch size 1, requested type "simple"
  2423                           ; Number of cases is 1, Range of values is 0 to 0
  2424                           ; switch strategies available:
  2425                           ; Name         Instructions Cycles
  2426                           ; simple_byte            4     3 (average)
  2427                           ;	Chosen strategy is simple_byte
  2428  0016A2  501C               	movf	(??_change_time+1)^0,w,c
  2429  0016A4  0A00               	xorlw	0	; case 0
  2430  0016A6  B4D8               	btfsc	status,2,c
  2431  0016A8  EF58  F00B         	goto	l3260
  2432  0016AC  EF80  F00B         	goto	l300
  2433  0016B0                     l3260:
  2434                           
  2435                           ; Switch size 1, requested type "simple"
  2436                           ; Number of cases is 3, Range of values is 1 to 3
  2437                           ; switch strategies available:
  2438                           ; Name         Instructions Cycles
  2439                           ; simple_byte           10     6 (average)
  2440                           ;	Chosen strategy is simple_byte
  2441  0016B0  501B               	movf	??_change_time^0,w,c
  2442  0016B2  0A01               	xorlw	1	; case 1
  2443  0016B4  B4D8               	btfsc	status,2,c
  2444  0016B6  EF1E  F00B         	goto	l3058
  2445  0016BA  0A03               	xorlw	3	; case 2
  2446  0016BC  B4D8               	btfsc	status,2,c
  2447  0016BE  EF2E  F00B         	goto	l3060
  2448  0016C2  0A01               	xorlw	1	; case 3
  2449  0016C4  B4D8               	btfsc	status,2,c
  2450  0016C6  EF3E  F00B         	goto	l3062
  2451  0016CA  EF80  F00B         	goto	l300
  2452  0016CE                     l3070:
  2453  0016CE  503A               	movf	_state_but_sel^0,w,c
  2454  0016D0  6E1B               	movwf	??_change_time^0,c
  2455  0016D2  6A1C               	clrf	(??_change_time+1)^0,c
  2456                           
  2457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2458                           ; Switch size 1, requested type "simple"
  2459                           ; Number of cases is 1, Range of values is 0 to 0
  2460                           ; switch strategies available:
  2461                           ; Name         Instructions Cycles
  2462                           ; simple_byte            4     3 (average)
  2463                           ;	Chosen strategy is simple_byte
  2464  0016D4  501C               	movf	(??_change_time+1)^0,w,c
  2465  0016D6  0A00               	xorlw	0	; case 0
  2466  0016D8  B4D8               	btfsc	status,2,c
  2467  0016DA  EF71  F00B         	goto	l3262
  2468  0016DE  EF80  F00B         	goto	l300
  2469  0016E2                     l3262:
  2470                           
  2471                           ; Switch size 1, requested type "simple"
  2472                           ; Number of cases is 3, Range of values is 0 to 2
  2473                           ; switch strategies available:
  2474                           ; Name         Instructions Cycles
  2475                           ; simple_byte           10     6 (average)
  2476                           ;	Chosen strategy is simple_byte
  2477  0016E2  501B               	movf	??_change_time^0,w,c
  2478  0016E4  0A00               	xorlw	0	; case 0
  2479  0016E6  B4D8               	btfsc	status,2,c
  2480  0016E8  EF71  F00A         	goto	l3022
  2481  0016EC  0A01               	xorlw	1	; case 1
  2482  0016EE  B4D8               	btfsc	status,2,c
  2483  0016F0  EF7E  F00A         	goto	l3026
  2484  0016F4  0A03               	xorlw	3	; case 2
  2485  0016F6  B4D8               	btfsc	status,2,c
  2486  0016F8  EFF3  F00A         	goto	l3046
  2487  0016FC  EF80  F00B         	goto	l300
  2488  001700                     l300:
  2489  001700  0012               	return		;funcret
  2490  001702                     __end_of_change_time:
  2491                           	opt callstack 0
  2492                           
  2493 ;; *************** function ___awmod *****************
  2494 ;; Defined at:
  2495 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  dividend        2   20[COMRAM] int 
  2498 ;;  divisor         2   22[COMRAM] int 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  sign            1   25[COMRAM] unsigned char 
  2501 ;;  counter         1   24[COMRAM] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  2   20[COMRAM] int 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2511 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;Total ram usage:        6 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    7
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_change_time
  2522 ;;		_initial_display
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text13
  2527  00227E                     __ptext13:
  2528                           	opt callstack 0
  2529  00227E                     ___awmod:
  2530                           	opt callstack 21
  2531  00227E  0E00               	movlw	0
  2532  002280  6E1A               	movwf	___awmod@sign^0,c
  2533  002282  BE16               	btfsc	(___awmod@dividend+1)^0,7,c
  2534  002284  EF48  F011         	goto	u1160
  2535  002288  EF46  F011         	goto	u1161
  2536  00228C                     u1161:
  2537  00228C  EF4E  F011         	goto	l2444
  2538  002290                     u1160:
  2539  002290  6C15               	negf	___awmod@dividend^0,c
  2540  002292  1E16               	comf	(___awmod@dividend+1)^0,f,c
  2541  002294  B0D8               	btfsc	status,0,c
  2542  002296  2A16               	incf	(___awmod@dividend+1)^0,f,c
  2543  002298  0E01               	movlw	1
  2544  00229A  6E1A               	movwf	___awmod@sign^0,c
  2545  00229C                     l2444:
  2546  00229C  BE18               	btfsc	(___awmod@divisor+1)^0,7,c
  2547  00229E  EF55  F011         	goto	u1170
  2548  0022A2  EF53  F011         	goto	u1171
  2549  0022A6                     u1171:
  2550  0022A6  EF59  F011         	goto	l2448
  2551  0022AA                     u1170:
  2552  0022AA  6C17               	negf	___awmod@divisor^0,c
  2553  0022AC  1E18               	comf	(___awmod@divisor+1)^0,f,c
  2554  0022AE  B0D8               	btfsc	status,0,c
  2555  0022B0  2A18               	incf	(___awmod@divisor+1)^0,f,c
  2556  0022B2                     l2448:
  2557  0022B2  5017               	movf	___awmod@divisor^0,w,c
  2558  0022B4  1018               	iorwf	(___awmod@divisor+1)^0,w,c
  2559  0022B6  B4D8               	btfsc	status,2,c
  2560  0022B8  EF60  F011         	goto	u1181
  2561  0022BC  EF62  F011         	goto	u1180
  2562  0022C0                     u1181:
  2563  0022C0  EF86  F011         	goto	l2464
  2564  0022C4                     u1180:
  2565  0022C4  0E01               	movlw	1
  2566  0022C6  6E19               	movwf	___awmod@counter^0,c
  2567  0022C8  EF6A  F011         	goto	l2454
  2568  0022CC                     l2452:
  2569  0022CC  90D8               	bcf	status,0,c
  2570  0022CE  3617               	rlcf	___awmod@divisor^0,f,c
  2571  0022D0  3618               	rlcf	(___awmod@divisor+1)^0,f,c
  2572  0022D2  2A19               	incf	___awmod@counter^0,f,c
  2573  0022D4                     l2454:
  2574  0022D4  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  2575  0022D6  EF6F  F011         	goto	u1191
  2576  0022DA  EF71  F011         	goto	u1190
  2577  0022DE                     u1191:
  2578  0022DE  EF66  F011         	goto	l2452
  2579  0022E2                     u1190:
  2580  0022E2                     l2456:
  2581  0022E2  5017               	movf	___awmod@divisor^0,w,c
  2582  0022E4  5C15               	subwf	___awmod@dividend^0,w,c
  2583  0022E6  5018               	movf	(___awmod@divisor+1)^0,w,c
  2584  0022E8  5816               	subwfb	(___awmod@dividend+1)^0,w,c
  2585  0022EA  A0D8               	btfss	status,0,c
  2586  0022EC  EF7A  F011         	goto	u1201
  2587  0022F0  EF7C  F011         	goto	u1200
  2588  0022F4                     u1201:
  2589  0022F4  EF80  F011         	goto	l2460
  2590  0022F8                     u1200:
  2591  0022F8  5017               	movf	___awmod@divisor^0,w,c
  2592  0022FA  5E15               	subwf	___awmod@dividend^0,f,c
  2593  0022FC  5018               	movf	(___awmod@divisor+1)^0,w,c
  2594  0022FE  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
  2595  002300                     l2460:
  2596  002300  90D8               	bcf	status,0,c
  2597  002302  3218               	rrcf	(___awmod@divisor+1)^0,f,c
  2598  002304  3217               	rrcf	___awmod@divisor^0,f,c
  2599  002306  2E19               	decfsz	___awmod@counter^0,f,c
  2600  002308  EF71  F011         	goto	l2456
  2601  00230C                     l2464:
  2602  00230C  501A               	movf	___awmod@sign^0,w,c
  2603  00230E  B4D8               	btfsc	status,2,c
  2604  002310  EF8C  F011         	goto	u1211
  2605  002314  EF8E  F011         	goto	u1210
  2606  002318                     u1211:
  2607  002318  EF92  F011         	goto	l2468
  2608  00231C                     u1210:
  2609  00231C  6C15               	negf	___awmod@dividend^0,c
  2610  00231E  1E16               	comf	(___awmod@dividend+1)^0,f,c
  2611  002320  B0D8               	btfsc	status,0,c
  2612  002322  2A16               	incf	(___awmod@dividend+1)^0,f,c
  2613  002324                     l2468:
  2614  002324  C015  F015         	movff	___awmod@dividend,?___awmod
  2615  002328  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  2616  00232C  0012               	return		;funcret
  2617  00232E                     __end_of___awmod:
  2618                           	opt callstack 0
  2619                           
  2620 ;; *************** function _clock_system *****************
  2621 ;; Defined at:
  2622 ;;		line 14 in file "main.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;Total ram usage:        4 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    6
  2643 ;; This function calls:
  2644 ;;		_clock_count
  2645 ;;		_display_change_state
  2646 ;;		_read_all_button
  2647 ;;		_read_button_change
  2648 ;;		_read_button_sel
  2649 ;;		_stop_watch_count
  2650 ;; This function is called by:
  2651 ;;		Interrupt level 2
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	intcode
  2656  000008                     __pintcode:
  2657                           	opt callstack 0
  2658  000008                     _clock_system:
  2659                           	opt callstack 18
  2660                           
  2661                           ;incstack = 0
  2662  000008  823D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2663  00000A  ED7F  F00F         	call	int_func,f	;refresh shadow registers
  2664                           
  2665                           	psect	intcode_body
  2666  001EFE                     __pintcode_body:
  2667                           	opt callstack 18
  2668  001EFE                     int_func:
  2669                           	opt callstack 18
  2670  001EFE  0006               	pop		; remove dummy address from shadow register refresh
  2671  001F00  CFF6 F011          	movff	tblptrl,??_clock_system
  2672  001F04  CFF7 F012          	movff	tblptrh,??_clock_system+1
  2673  001F08  CFF8 F013          	movff	tblptru,??_clock_system+2
  2674  001F0C  CFF5 F014          	movff	tablat,??_clock_system+3
  2675  001F10                     
  2676                           ;main.c: 15:     TRISD = 0x00;
  2677  001F10  0E00               	movlw	0
  2678  001F12  6E95               	movwf	149,c	;volatile
  2679  001F14                     
  2680                           ;main.c: 16:     if (INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  2681  001F14  AAF2               	btfss	242,5,c	;volatile
  2682  001F16  EF8F  F00F         	goto	i2u182_41
  2683  001F1A  EF91  F00F         	goto	i2u182_40
  2684  001F1E                     i2u182_41:
  2685  001F1E  EF9D  F00F         	goto	i2l3098
  2686  001F22                     i2u182_40:
  2687  001F22  A4F2               	btfss	242,2,c	;volatile
  2688  001F24  EF96  F00F         	goto	i2u183_41
  2689  001F28  EF98  F00F         	goto	i2u183_40
  2690  001F2C                     i2u183_41:
  2691  001F2C  EF9D  F00F         	goto	i2l3098
  2692  001F30                     i2u183_40:
  2693  001F30                     
  2694                           ;main.c: 17:         TMR0L = 0xFFFF - 16*1;
  2695  001F30  0EEF               	movlw	239
  2696  001F32  6ED6               	movwf	214,c	;volatile
  2697  001F34                     
  2698                           ;main.c: 19:         INTCONbits.TMR0IF = 0;
  2699  001F34  94F2               	bcf	242,2,c	;volatile
  2700  001F36                     
  2701                           ;main.c: 20:         millis_system++;
  2702  001F36  2A39               	incf	_millis_system^0,f,c
  2703  001F38                     
  2704                           ;main.c: 21:         millis_stop_watch++;
  2705  001F38  2A34               	incf	_millis_stop_watch^0,f,c
  2706  001F3A                     i2l3098:
  2707                           
  2708                           ;main.c: 23:     if(state_machine == MODE_4 && millis_stop_watch >= (10/1 - 5)){
  2709  001F3A  0E04               	movlw	4
  2710  001F3C  183B               	xorwf	_state_machine^0,w,c
  2711  001F3E  A4D8               	btfss	status,2,c
  2712  001F40  EFA4  F00F         	goto	i2u184_41
  2713  001F44  EFA6  F00F         	goto	i2u184_40
  2714  001F48                     i2u184_41:
  2715  001F48  EFBA  F00F         	goto	i2l3108
  2716  001F4C                     i2u184_40:
  2717  001F4C  0E04               	movlw	4
  2718  001F4E  6434               	cpfsgt	_millis_stop_watch^0,c
  2719  001F50  EFAC  F00F         	goto	i2u185_41
  2720  001F54  EFAE  F00F         	goto	i2u185_40
  2721  001F58                     i2u185_41:
  2722  001F58  EFBA  F00F         	goto	i2l3108
  2723  001F5C                     i2u185_40:
  2724  001F5C                     
  2725                           ;main.c: 24:         if (stop_watch_flag == 1) {
  2726  001F5C  0424               	decf	_stop_watch_flag^0,w,c
  2727  001F5E  A4D8               	btfss	status,2,c
  2728  001F60  EFB4  F00F         	goto	i2u186_41
  2729  001F64  EFB6  F00F         	goto	i2u186_40
  2730  001F68                     i2u186_41:
  2731  001F68  EFB8  F00F         	goto	i2l3106
  2732  001F6C                     i2u186_40:
  2733  001F6C                     
  2734                           ;main.c: 25:             stop_watch_count();
  2735  001F6C  EC16  F010         	call	_stop_watch_count	;wreg free
  2736  001F70                     i2l3106:
  2737                           
  2738                           ;main.c: 27:         millis_stop_watch = 0;
  2739  001F70  0E00               	movlw	0
  2740  001F72  6E34               	movwf	_millis_stop_watch^0,c
  2741  001F74                     i2l3108:
  2742                           
  2743                           ;main.c: 30:     if (millis_system >= 10/1){
  2744  001F74  0E09               	movlw	9
  2745  001F76  6439               	cpfsgt	_millis_system^0,c
  2746  001F78  EFC0  F00F         	goto	i2u187_41
  2747  001F7C  EFC2  F00F         	goto	i2u187_40
  2748  001F80                     i2u187_41:
  2749  001F80  EFE5  F00F         	goto	i2l3122
  2750  001F84                     i2u187_40:
  2751  001F84                     
  2752                           ;main.c: 31:         millis_system = 0;
  2753  001F84  0E00               	movlw	0
  2754  001F86  6E39               	movwf	_millis_system^0,c
  2755  001F88                     
  2756                           ;main.c: 32:         button = read_all_button(read_button_change(),read_button_sel());
  2757  001F88  ECD9  F012         	call	_read_button_change	;wreg free
  2758  001F8C  C001  F003         	movff	?_read_button_change,read_all_button@button_A
  2759  001F90  C002  F004         	movff	?_read_button_change+1,read_all_button@button_A+1
  2760  001F94  ECB1  F012         	call	_read_button_sel	;wreg free
  2761  001F98  C001  F005         	movff	?_read_button_sel,read_all_button@button_B
  2762  001F9C  C002  F006         	movff	?_read_button_sel+1,read_all_button@button_B+1
  2763  001FA0  EC99  F013         	call	_read_all_button	;wreg free
  2764  001FA4  5003               	movf	?_read_all_button^0,w,c
  2765  001FA6  6E2B               	movwf	_button^0,c
  2766  001FA8                     
  2767                           ;main.c: 33:         if (init_setting) clock_count(state_machine);
  2768  001FA8  502C               	movf	_init_setting^0,w,c
  2769  001FAA  B4D8               	btfsc	status,2,c
  2770  001FAC  EFDA  F00F         	goto	i2u188_41
  2771  001FB0  EFDC  F00F         	goto	i2u188_40
  2772  001FB4                     i2u188_41:
  2773  001FB4  EFE1  F00F         	goto	i2l3118
  2774  001FB8                     i2u188_40:
  2775  001FB8  C03B  F00F         	movff	_state_machine,clock_count@state
  2776  001FBC  6A10               	clrf	(clock_count@state+1)^0,c
  2777  001FBE  ECE5  F00E         	call	_clock_count	;wreg free
  2778  001FC2                     i2l3118:
  2779                           
  2780                           ;main.c: 34:         display_change_state();
  2781  001FC2  EC62  F00D         	call	_display_change_state	;wreg free
  2782  001FC6                     
  2783                           ;main.c: 35:         count_but = 1;
  2784  001FC6  0E01               	movlw	1
  2785  001FC8  6E2A               	movwf	_count_but^0,c
  2786  001FCA                     i2l3122:
  2787                           
  2788                           ;main.c: 37:     if (count_but == 1 && state_but_sel == PRESS){
  2789  001FCA  042A               	decf	_count_but^0,w,c
  2790  001FCC  A4D8               	btfss	status,2,c
  2791  001FCE  EFEB  F00F         	goto	i2u189_41
  2792  001FD2  EFED  F00F         	goto	i2u189_40
  2793  001FD6                     i2u189_41:
  2794  001FD6  EFF8  F00F         	goto	i2l3130
  2795  001FDA                     i2u189_40:
  2796  001FDA  043A               	decf	_state_but_sel^0,w,c
  2797  001FDC  A4D8               	btfss	status,2,c
  2798  001FDE  EFF3  F00F         	goto	i2u190_41
  2799  001FE2  EFF5  F00F         	goto	i2u190_40
  2800  001FE6                     i2u190_41:
  2801  001FE6  EFF8  F00F         	goto	i2l3130
  2802  001FEA                     i2u190_40:
  2803  001FEA                     
  2804                           ;main.c: 38:         count_sel++;
  2805  001FEA  2A29               	incf	_count_sel^0,f,c
  2806  001FEC                     
  2807                           ;main.c: 39:         count_but = 0;
  2808  001FEC  0E00               	movlw	0
  2809  001FEE  6E2A               	movwf	_count_but^0,c
  2810  001FF0                     i2l3130:
  2811                           
  2812                           ;main.c: 41:     if (count_but == 1 && state_but_sel == HOLD_1S){
  2813  001FF0  042A               	decf	_count_but^0,w,c
  2814  001FF2  A4D8               	btfss	status,2,c
  2815  001FF4  EFFE  F00F         	goto	i2u191_41
  2816  001FF8  EF00  F010         	goto	i2u191_40
  2817  001FFC                     i2u191_41:
  2818  001FFC  EF0C  F010         	goto	i2l90
  2819  002000                     i2u191_40:
  2820  002000  0E02               	movlw	2
  2821  002002  183A               	xorwf	_state_but_sel^0,w,c
  2822  002004  A4D8               	btfss	status,2,c
  2823  002006  EF07  F010         	goto	i2u192_41
  2824  00200A  EF09  F010         	goto	i2u192_40
  2825  00200E                     i2u192_41:
  2826  00200E  EF0C  F010         	goto	i2l90
  2827  002012                     i2u192_40:
  2828  002012                     
  2829                           ;main.c: 42:         count_sel++;
  2830  002012  2A29               	incf	_count_sel^0,f,c
  2831  002014                     
  2832                           ;main.c: 43:         count_but = 0;
  2833  002014  0E00               	movlw	0
  2834  002016  6E2A               	movwf	_count_but^0,c
  2835  002018                     i2l90:
  2836  002018  C014  FFF5         	movff	??_clock_system+3,tablat
  2837  00201C  C013  FFF8         	movff	??_clock_system+2,tblptru
  2838  002020  C012  FFF7         	movff	??_clock_system+1,tblptrh
  2839  002024  C011  FFF6         	movff	??_clock_system,tblptrl
  2840  002028  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2841  00202A  0011               	retfie		f
  2842  00202C                     __end_of_clock_system:
  2843                           	opt callstack 0
  2844                           
  2845 ;; *************** function _stop_watch_count *****************
  2846 ;; Defined at:
  2847 ;;		line 37 in file "clock.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;Total ram usage:        0 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    4
  2868 ;; This function calls:
  2869 ;;		_display_clock
  2870 ;; This function is called by:
  2871 ;;		_clock_system
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text15
  2876  00202C                     __ptext15:
  2877                           	opt callstack 0
  2878  00202C                     _stop_watch_count:
  2879                           	opt callstack 19
  2880  00202C                     
  2881                           ;clock.c: 38:     millis_10_stop++;
  2882  00202C  2A33               	incf	_millis_10_stop^0,f,c
  2883                           
  2884                           ;clock.c: 39:     LATD++;
  2885  00202E  2A8C               	incf	140,f,c	;volatile
  2886  002030                     
  2887                           ;clock.c: 40:     second_stop_flag = millis_10_stop == 100 ? 1:0;
  2888  002030  0E64               	movlw	100
  2889  002032  1833               	xorwf	_millis_10_stop^0,w,c
  2890  002034  B4D8               	btfsc	status,2,c
  2891  002036  EF1F  F010         	goto	i2u140_41
  2892  00203A  EF22  F010         	goto	i2u140_40
  2893  00203E                     i2u140_41:
  2894  00203E  0E01               	movlw	1
  2895  002040  EF23  F010         	goto	i2u141_40
  2896  002044                     i2u140_40:
  2897  002044  0E00               	movlw	0
  2898  002046                     i2u141_40:
  2899  002046  6E23               	movwf	_second_stop_flag^0,c
  2900  002048                     
  2901                           ;clock.c: 41:     if (second_stop_flag) millis_10_stop = 0;
  2902  002048  5023               	movf	_second_stop_flag^0,w,c
  2903  00204A  B4D8               	btfsc	status,2,c
  2904  00204C  EF2A  F010         	goto	i2u142_41
  2905  002050  EF2C  F010         	goto	i2u142_40
  2906  002054                     i2u142_41:
  2907  002054  EF2E  F010         	goto	i2l2824
  2908  002058                     i2u142_40:
  2909  002058  0E00               	movlw	0
  2910  00205A  6E33               	movwf	_millis_10_stop^0,c
  2911  00205C                     i2l2824:
  2912                           
  2913                           ;clock.c: 42:     display_clock(1,2);
  2914  00205C  0E00               	movlw	0
  2915  00205E  6E0A               	movwf	(display_clock@variable_display+1)^0,c
  2916  002060  0E01               	movlw	1
  2917  002062  6E09               	movwf	display_clock@variable_display^0,c
  2918  002064  0E00               	movlw	0
  2919  002066  6E0C               	movwf	(display_clock@clock1_stopwatch2+1)^0,c
  2920  002068  0E02               	movlw	2
  2921  00206A  6E0B               	movwf	display_clock@clock1_stopwatch2^0,c
  2922  00206C  EC81  F00B         	call	_display_clock	;wreg free
  2923  002070                     
  2924                           ;clock.c: 43:     if (second_stop_flag){
  2925  002070  5023               	movf	_second_stop_flag^0,w,c
  2926  002072  B4D8               	btfsc	status,2,c
  2927  002074  EF3E  F010         	goto	i2u143_41
  2928  002078  EF40  F010         	goto	i2u143_40
  2929  00207C                     i2u143_41:
  2930  00207C  EF64  F010         	goto	i2l2838
  2931  002080                     i2u143_40:
  2932  002080                     
  2933                           ;clock.c: 44:         second_stop_flag = 0;
  2934  002080  0E00               	movlw	0
  2935  002082  6E23               	movwf	_second_stop_flag^0,c
  2936  002084                     
  2937                           ;clock.c: 45:         second_stop = second_stop + 1;
  2938  002084  2832               	incf	_second_stop^0,w,c
  2939  002086  6E32               	movwf	_second_stop^0,c
  2940  002088                     
  2941                           ;clock.c: 46:         minute_stop_flag = second_stop == 60? 1:0;
  2942  002088  0E3C               	movlw	60
  2943  00208A  1832               	xorwf	_second_stop^0,w,c
  2944  00208C  B4D8               	btfsc	status,2,c
  2945  00208E  EF4B  F010         	goto	i2u144_41
  2946  002092  EF4E  F010         	goto	i2u144_40
  2947  002096                     i2u144_41:
  2948  002096  0E01               	movlw	1
  2949  002098  EF4F  F010         	goto	i2u145_40
  2950  00209C                     i2u144_40:
  2951  00209C  0E00               	movlw	0
  2952  00209E                     i2u145_40:
  2953  00209E  6E22               	movwf	_minute_stop_flag^0,c
  2954                           
  2955                           ;clock.c: 47:         if (minute_stop_flag) second_stop = 0;
  2956  0020A0  5022               	movf	_minute_stop_flag^0,w,c
  2957  0020A2  B4D8               	btfsc	status,2,c
  2958  0020A4  EF56  F010         	goto	i2u146_41
  2959  0020A8  EF58  F010         	goto	i2u146_40
  2960  0020AC                     i2u146_41:
  2961  0020AC  EF5A  F010         	goto	i2l2836
  2962  0020B0                     i2u146_40:
  2963  0020B0  0E00               	movlw	0
  2964  0020B2  6E32               	movwf	_second_stop^0,c
  2965  0020B4                     i2l2836:
  2966                           
  2967                           ;clock.c: 48:         display_clock(2,2);
  2968  0020B4  0E00               	movlw	0
  2969  0020B6  6E0A               	movwf	(display_clock@variable_display+1)^0,c
  2970  0020B8  0E02               	movlw	2
  2971  0020BA  6E09               	movwf	display_clock@variable_display^0,c
  2972  0020BC  0E00               	movlw	0
  2973  0020BE  6E0C               	movwf	(display_clock@clock1_stopwatch2+1)^0,c
  2974  0020C0  0E02               	movlw	2
  2975  0020C2  6E0B               	movwf	display_clock@clock1_stopwatch2^0,c
  2976  0020C4  EC81  F00B         	call	_display_clock	;wreg free
  2977  0020C8                     i2l2838:
  2978                           
  2979                           ;clock.c: 50:     if (minute_stop_flag == 1){
  2980  0020C8  0422               	decf	_minute_stop_flag^0,w,c
  2981  0020CA  A4D8               	btfss	status,2,c
  2982  0020CC  EF6A  F010         	goto	i2u147_41
  2983  0020D0  EF6C  F010         	goto	i2u147_40
  2984  0020D4                     i2u147_41:
  2985  0020D4  EF7A  F010         	goto	i2l275
  2986  0020D8                     i2u147_40:
  2987  0020D8                     
  2988                           ;clock.c: 51:         minute_stop_flag = 0;
  2989  0020D8  0E00               	movlw	0
  2990  0020DA  6E22               	movwf	_minute_stop_flag^0,c
  2991  0020DC                     
  2992                           ;clock.c: 52:         minute_stop_flag = minute+1;
  2993  0020DC  2836               	incf	_minute^0,w,c
  2994  0020DE  6E22               	movwf	_minute_stop_flag^0,c
  2995  0020E0                     
  2996                           ;clock.c: 53:         display_clock(3,2);
  2997  0020E0  0E00               	movlw	0
  2998  0020E2  6E0A               	movwf	(display_clock@variable_display+1)^0,c
  2999  0020E4  0E03               	movlw	3
  3000  0020E6  6E09               	movwf	display_clock@variable_display^0,c
  3001  0020E8  0E00               	movlw	0
  3002  0020EA  6E0C               	movwf	(display_clock@clock1_stopwatch2+1)^0,c
  3003  0020EC  0E02               	movlw	2
  3004  0020EE  6E0B               	movwf	display_clock@clock1_stopwatch2^0,c
  3005  0020F0  EC81  F00B         	call	_display_clock	;wreg free
  3006  0020F4                     i2l275:
  3007  0020F4  0012               	return		;funcret
  3008  0020F6                     __end_of_stop_watch_count:
  3009                           	opt callstack 0
  3010                           
  3011 ;; *************** function _read_button_sel *****************
  3012 ;; Defined at:
  3013 ;;		line 14 in file "button.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  2    0[COMRAM] int 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:        2 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_clock_system
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text16
  3041  002562                     __ptext16:
  3042                           	opt callstack 0
  3043  002562                     _read_button_sel:
  3044                           	opt callstack 23
  3045  002562                     
  3046                           ;button.c: 15:     first_read_sel = second_read_sel;
  3047  002562  C02D  F02E         	movff	_second_read_sel,_first_read_sel
  3048  002566                     
  3049                           ;button.c: 16:     second_read_sel = PORTBbits.RB0;
  3050  002566  0E00               	movlw	0
  3051  002568  B081               	btfsc	129,0,c	;volatile
  3052  00256A  0E01               	movlw	1
  3053  00256C  6E2D               	movwf	_second_read_sel^0,c
  3054  00256E                     
  3055                           ;button.c: 17:     if (first_read_sel == second_read_sel){
  3056  00256E  502D               	movf	_second_read_sel^0,w,c
  3057  002570  182E               	xorwf	_first_read_sel^0,w,c
  3058  002572  A4D8               	btfss	status,2,c
  3059  002574  EFBE  F012         	goto	i2u150_41
  3060  002578  EFC0  F012         	goto	i2u150_40
  3061  00257C                     i2u150_41:
  3062  00257C  EFD4  F012         	goto	i2l2886
  3063  002580                     i2u150_40:
  3064  002580                     
  3065                           ;button.c: 18:         if(second_read_sel == 0)return 1;
  3066  002580  502D               	movf	_second_read_sel^0,w,c
  3067  002582  A4D8               	btfss	status,2,c
  3068  002584  EFC6  F012         	goto	i2u151_41
  3069  002588  EFC8  F012         	goto	i2u151_40
  3070  00258C                     i2u151_41:
  3071  00258C  EFCE  F012         	goto	i2l2882
  3072  002590                     i2u151_40:
  3073  002590  0E00               	movlw	0
  3074  002592  6E02               	movwf	(?_read_button_sel+1)^0,c
  3075  002594  0E01               	movlw	1
  3076  002596  6E01               	movwf	?_read_button_sel^0,c
  3077  002598  EFD8  F012         	goto	i2l371
  3078  00259C                     i2l2882:
  3079  00259C  0E00               	movlw	0
  3080  00259E  6E02               	movwf	(?_read_button_sel+1)^0,c
  3081  0025A0  0E02               	movlw	2
  3082  0025A2  6E01               	movwf	?_read_button_sel^0,c
  3083  0025A4  EFD8  F012         	goto	i2l371
  3084  0025A8                     i2l2886:
  3085                           
  3086                           ;button.c: 21:     return 0;
  3087  0025A8  0E00               	movlw	0
  3088  0025AA  6E02               	movwf	(?_read_button_sel+1)^0,c
  3089  0025AC  0E00               	movlw	0
  3090  0025AE  6E01               	movwf	?_read_button_sel^0,c
  3091  0025B0                     i2l371:
  3092  0025B0  0012               	return		;funcret
  3093  0025B2                     __end_of_read_button_sel:
  3094                           	opt callstack 0
  3095                           
  3096 ;; *************** function _read_button_change *****************
  3097 ;; Defined at:
  3098 ;;		line 5 in file "button.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  2    0[COMRAM] int 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;Total ram usage:        2 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_clock_system
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text17
  3126  0025B2                     __ptext17:
  3127                           	opt callstack 0
  3128  0025B2                     _read_button_change:
  3129                           	opt callstack 23
  3130  0025B2                     
  3131                           ;button.c: 6:     first_read_change = second_read_change;
  3132  0025B2  C02F  F030         	movff	_second_read_change,_first_read_change
  3133  0025B6                     
  3134                           ;button.c: 7:     second_read_change = PORTAbits.RA5;
  3135  0025B6  0E00               	movlw	0
  3136  0025B8  BA80               	btfsc	128,5,c	;volatile
  3137  0025BA  0E01               	movlw	1
  3138  0025BC  6E2F               	movwf	_second_read_change^0,c
  3139  0025BE                     
  3140                           ;button.c: 8:     if (first_read_change == second_read_change){
  3141  0025BE  502F               	movf	_second_read_change^0,w,c
  3142  0025C0  1830               	xorwf	_first_read_change^0,w,c
  3143  0025C2  A4D8               	btfss	status,2,c
  3144  0025C4  EFE6  F012         	goto	i2u148_41
  3145  0025C8  EFE8  F012         	goto	i2u148_40
  3146  0025CC                     i2u148_41:
  3147  0025CC  EFFC  F012         	goto	i2l2864
  3148  0025D0                     i2u148_40:
  3149  0025D0                     
  3150                           ;button.c: 9:         if(second_read_change == 0)return 1;
  3151  0025D0  502F               	movf	_second_read_change^0,w,c
  3152  0025D2  A4D8               	btfss	status,2,c
  3153  0025D4  EFEE  F012         	goto	i2u149_41
  3154  0025D8  EFF0  F012         	goto	i2u149_40
  3155  0025DC                     i2u149_41:
  3156  0025DC  EFF6  F012         	goto	i2l2860
  3157  0025E0                     i2u149_40:
  3158  0025E0  0E00               	movlw	0
  3159  0025E2  6E02               	movwf	(?_read_button_change+1)^0,c
  3160  0025E4  0E01               	movlw	1
  3161  0025E6  6E01               	movwf	?_read_button_change^0,c
  3162  0025E8  EF00  F013         	goto	i2l365
  3163  0025EC                     i2l2860:
  3164  0025EC  0E00               	movlw	0
  3165  0025EE  6E02               	movwf	(?_read_button_change+1)^0,c
  3166  0025F0  0E02               	movlw	2
  3167  0025F2  6E01               	movwf	?_read_button_change^0,c
  3168  0025F4  EF00  F013         	goto	i2l365
  3169  0025F8                     i2l2864:
  3170                           
  3171                           ;button.c: 12:     return 0;
  3172  0025F8  0E00               	movlw	0
  3173  0025FA  6E02               	movwf	(?_read_button_change+1)^0,c
  3174  0025FC  0E00               	movlw	0
  3175  0025FE  6E01               	movwf	?_read_button_change^0,c
  3176  002600                     i2l365:
  3177  002600  0012               	return		;funcret
  3178  002602                     __end_of_read_button_change:
  3179                           	opt callstack 0
  3180                           
  3181 ;; *************** function _read_all_button *****************
  3182 ;; Defined at:
  3183 ;;		line 23 in file "button.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  button_A        2    2[COMRAM] int 
  3186 ;;  button_B        2    4[COMRAM] int 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  2    2[COMRAM] int 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;Total ram usage:        4 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_clock_system
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text18
  3212  002732                     __ptext18:
  3213                           	opt callstack 0
  3214  002732                     _read_all_button:
  3215                           	opt callstack 23
  3216  002732                     
  3217                           ;button.c: 24:     if (button_A == 1) return 1;
  3218  002732  0403               	decf	read_all_button@button_A^0,w,c
  3219  002734  1004               	iorwf	(read_all_button@button_A+1)^0,w,c
  3220  002736  A4D8               	btfss	status,2,c
  3221  002738  EFA0  F013         	goto	i2u152_41
  3222  00273C  EFA2  F013         	goto	i2u152_40
  3223  002740                     i2u152_41:
  3224  002740  EFA8  F013         	goto	i2l2896
  3225  002744                     i2u152_40:
  3226  002744  0E00               	movlw	0
  3227  002746  6E04               	movwf	(?_read_all_button+1)^0,c
  3228  002748  0E01               	movlw	1
  3229  00274A  6E03               	movwf	?_read_all_button^0,c
  3230  00274C  EFBB  F013         	goto	i2l376
  3231  002750                     i2l2896:
  3232                           
  3233                           ;button.c: 25:     if (button_B == 1) return 2;
  3234  002750  0405               	decf	read_all_button@button_B^0,w,c
  3235  002752  1006               	iorwf	(read_all_button@button_B+1)^0,w,c
  3236  002754  A4D8               	btfss	status,2,c
  3237  002756  EFAF  F013         	goto	i2u153_41
  3238  00275A  EFB1  F013         	goto	i2u153_40
  3239  00275E                     i2u153_41:
  3240  00275E  EFB7  F013         	goto	i2l2902
  3241  002762                     i2u153_40:
  3242  002762  0E00               	movlw	0
  3243  002764  6E04               	movwf	(?_read_all_button+1)^0,c
  3244  002766  0E02               	movlw	2
  3245  002768  6E03               	movwf	?_read_all_button^0,c
  3246  00276A  EFBB  F013         	goto	i2l376
  3247  00276E                     i2l2902:
  3248                           
  3249                           ;button.c: 26:     return 3;
  3250  00276E  0E00               	movlw	0
  3251  002770  6E04               	movwf	(?_read_all_button+1)^0,c
  3252  002772  0E03               	movlw	3
  3253  002774  6E03               	movwf	?_read_all_button^0,c
  3254  002776                     i2l376:
  3255  002776  0012               	return		;funcret
  3256  002778                     __end_of_read_all_button:
  3257                           	opt callstack 0
  3258                           
  3259 ;; *************** function _display_change_state *****************
  3260 ;; Defined at:
  3261 ;;		line 15 in file "display.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;Total ram usage:        2 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    5
  3282 ;; This function calls:
  3283 ;;		_blink
  3284 ;;		_display_clock
  3285 ;;		i2_initial_display
  3286 ;; This function is called by:
  3287 ;;		_clock_system
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text19
  3292  001AC4                     __ptext19:
  3293                           	opt callstack 0
  3294  001AC4                     _display_change_state:
  3295                           	opt callstack 18
  3296  001AC4                     
  3297                           ;display.c: 16:     blink_count++;
  3298  001AC4  2A28               	incf	_blink_count^0,f,c
  3299  001AC6                     
  3300                           ;display.c: 17:     if (change_state == 1){
  3301  001AC6  0421               	decf	_change_state^0,w,c
  3302  001AC8  A4D8               	btfss	status,2,c
  3303  001ACA  EF69  F00D         	goto	i2u166_41
  3304  001ACE  EF6B  F00D         	goto	i2u166_40
  3305  001AD2                     i2u166_41:
  3306  001AD2  EF88  F00D         	goto	i2l2960
  3307  001AD6                     i2u166_40:
  3308  001AD6                     
  3309                           ;display.c: 18:         if (state_machine != 4) display_clock(5 - state_machine, 1);
  3310  001AD6  0E04               	movlw	4
  3311  001AD8  183B               	xorwf	_state_machine^0,w,c
  3312  001ADA  B4D8               	btfsc	status,2,c
  3313  001ADC  EF72  F00D         	goto	i2u167_41
  3314  001AE0  EF74  F00D         	goto	i2u167_40
  3315  001AE4                     i2u167_41:
  3316  001AE4  EF82  F00D         	goto	i2l2954
  3317  001AE8                     i2u167_40:
  3318  001AE8  503B               	movf	_state_machine^0,w,c
  3319  001AEA  0805               	sublw	5
  3320  001AEC  6E09               	movwf	display_clock@variable_display^0,c
  3321  001AEE  0E00               	movlw	0
  3322  001AF0  A0D8               	btfss	status,0,c
  3323  001AF2  2AE8               	incf	wreg,f,c
  3324  001AF4  0800               	sublw	0
  3325  001AF6  6E0A               	movwf	(display_clock@variable_display+1)^0,c
  3326  001AF8  0E00               	movlw	0
  3327  001AFA  6E0C               	movwf	(display_clock@clock1_stopwatch2+1)^0,c
  3328  001AFC  0E01               	movlw	1
  3329  001AFE  6E0B               	movwf	display_clock@clock1_stopwatch2^0,c
  3330  001B00  EC81  F00B         	call	_display_clock	;wreg free
  3331  001B04                     i2l2954:
  3332                           
  3333                           ;display.c: 19:         initial_display();
  3334  001B04  EC4E  F009         	call	i2_initial_display	;wreg free
  3335  001B08                     
  3336                           ;display.c: 20:         change_state = 0;
  3337  001B08  0E00               	movlw	0
  3338  001B0A  6E21               	movwf	_change_state^0,c
  3339  001B0C  EF2E  F00E         	goto	i2l452
  3340  001B10                     i2l2960:
  3341                           
  3342                           ;display.c: 23:     if (blink_count >= (25 ) && blink_state == 1){
  3343  001B10  0E18               	movlw	24
  3344  001B12  6428               	cpfsgt	_blink_count^0,c
  3345  001B14  EF8E  F00D         	goto	i2u168_41
  3346  001B18  EF90  F00D         	goto	i2u168_40
  3347  001B1C                     i2u168_41:
  3348  001B1C  EFDB  F00D         	goto	i2l2978
  3349  001B20                     i2u168_40:
  3350  001B20  0427               	decf	_blink_state^0,w,c
  3351  001B22  A4D8               	btfss	status,2,c
  3352  001B24  EF96  F00D         	goto	i2u169_41
  3353  001B28  EF98  F00D         	goto	i2u169_40
  3354  001B2C                     i2u169_41:
  3355  001B2C  EFDB  F00D         	goto	i2l2978
  3356  001B30                     i2u169_40:
  3357  001B30  EFBE  F00D         	goto	i2l2974
  3358  001B34                     i2l2966:
  3359                           
  3360                           ;display.c: 26:                 blink(1,2);
  3361  001B34  0E00               	movlw	0
  3362  001B36  6E0A               	movwf	(blink@state+1)^0,c
  3363  001B38  0E01               	movlw	1
  3364  001B3A  6E09               	movwf	blink@state^0,c
  3365  001B3C  0E00               	movlw	0
  3366  001B3E  6E0C               	movwf	(blink@type+1)^0,c
  3367  001B40  0E02               	movlw	2
  3368  001B42  6E0B               	movwf	blink@type^0,c
  3369  001B44  EC2F  F00E         	call	_blink	;wreg free
  3370                           
  3371                           ;display.c: 27:                 break;
  3372  001B48  EFD7  F00D         	goto	i2l2976
  3373  001B4C                     i2l2968:
  3374                           
  3375                           ;display.c: 29:                 blink(2,2);
  3376  001B4C  0E00               	movlw	0
  3377  001B4E  6E0A               	movwf	(blink@state+1)^0,c
  3378  001B50  0E02               	movlw	2
  3379  001B52  6E09               	movwf	blink@state^0,c
  3380  001B54  0E00               	movlw	0
  3381  001B56  6E0C               	movwf	(blink@type+1)^0,c
  3382  001B58  0E02               	movlw	2
  3383  001B5A  6E0B               	movwf	blink@type^0,c
  3384  001B5C  EC2F  F00E         	call	_blink	;wreg free
  3385                           
  3386                           ;display.c: 30:                 break;
  3387  001B60  EFD7  F00D         	goto	i2l2976
  3388  001B64                     i2l2970:
  3389                           
  3390                           ;display.c: 32:                 blink(3,2);
  3391  001B64  0E00               	movlw	0
  3392  001B66  6E0A               	movwf	(blink@state+1)^0,c
  3393  001B68  0E03               	movlw	3
  3394  001B6A  6E09               	movwf	blink@state^0,c
  3395  001B6C  0E00               	movlw	0
  3396  001B6E  6E0C               	movwf	(blink@type+1)^0,c
  3397  001B70  0E02               	movlw	2
  3398  001B72  6E0B               	movwf	blink@type^0,c
  3399  001B74  EC2F  F00E         	call	_blink	;wreg free
  3400                           
  3401                           ;display.c: 33:                 break;
  3402  001B78  EFD7  F00D         	goto	i2l2976
  3403  001B7C                     i2l2974:
  3404  001B7C  503B               	movf	_state_machine^0,w,c
  3405  001B7E  6E0F               	movwf	??_display_change_state^0,c
  3406  001B80  6A10               	clrf	(??_display_change_state+1)^0,c
  3407                           
  3408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3409                           ; Switch size 1, requested type "simple"
  3410                           ; Number of cases is 1, Range of values is 0 to 0
  3411                           ; switch strategies available:
  3412                           ; Name         Instructions Cycles
  3413                           ; simple_byte            4     3 (average)
  3414                           ;	Chosen strategy is simple_byte
  3415  001B82  5010               	movf	(??_display_change_state+1)^0,w,c
  3416  001B84  0A00               	xorlw	0	; case 0
  3417  001B86  B4D8               	btfsc	status,2,c
  3418  001B88  EFC8  F00D         	goto	i2l3264
  3419  001B8C  EFD7  F00D         	goto	i2l2976
  3420  001B90                     i2l3264:
  3421                           
  3422                           ; Switch size 1, requested type "simple"
  3423                           ; Number of cases is 3, Range of values is 1 to 3
  3424                           ; switch strategies available:
  3425                           ; Name         Instructions Cycles
  3426                           ; simple_byte           10     6 (average)
  3427                           ;	Chosen strategy is simple_byte
  3428  001B90  500F               	movf	??_display_change_state^0,w,c
  3429  001B92  0A01               	xorlw	1	; case 1
  3430  001B94  B4D8               	btfsc	status,2,c
  3431  001B96  EF9A  F00D         	goto	i2l2966
  3432  001B9A  0A03               	xorlw	3	; case 2
  3433  001B9C  B4D8               	btfsc	status,2,c
  3434  001B9E  EFA6  F00D         	goto	i2l2968
  3435  001BA2  0A01               	xorlw	1	; case 3
  3436  001BA4  B4D8               	btfsc	status,2,c
  3437  001BA6  EFB2  F00D         	goto	i2l2970
  3438  001BAA  EFD7  F00D         	goto	i2l2976
  3439  001BAE                     i2l2976:
  3440                           
  3441                           ;display.c: 35:         blink_state = 0;
  3442  001BAE  0E00               	movlw	0
  3443  001BB0  6E27               	movwf	_blink_state^0,c
  3444                           
  3445                           ;display.c: 36:         blink_count = 0;
  3446  001BB2  0E00               	movlw	0
  3447  001BB4  6E28               	movwf	_blink_count^0,c
  3448  001BB6                     i2l2978:
  3449                           
  3450                           ;display.c: 38:     if (blink_count >= (25 ) && blink_state == 0){
  3451  001BB6  0E18               	movlw	24
  3452  001BB8  6428               	cpfsgt	_blink_count^0,c
  3453  001BBA  EFE1  F00D         	goto	i2u170_41
  3454  001BBE  EFE3  F00D         	goto	i2u170_40
  3455  001BC2                     i2u170_41:
  3456  001BC2  EF2E  F00E         	goto	i2l452
  3457  001BC6                     i2u170_40:
  3458  001BC6  5027               	movf	_blink_state^0,w,c
  3459  001BC8  A4D8               	btfss	status,2,c
  3460  001BCA  EFE9  F00D         	goto	i2u171_41
  3461  001BCE  EFEB  F00D         	goto	i2u171_40
  3462  001BD2                     i2u171_41:
  3463  001BD2  EF2E  F00E         	goto	i2l452
  3464  001BD6                     i2u171_40:
  3465  001BD6  EF11  F00E         	goto	i2l2992
  3466  001BDA                     i2l2984:
  3467                           
  3468                           ;display.c: 41:                 blink(1,1);
  3469  001BDA  0E00               	movlw	0
  3470  001BDC  6E0A               	movwf	(blink@state+1)^0,c
  3471  001BDE  0E01               	movlw	1
  3472  001BE0  6E09               	movwf	blink@state^0,c
  3473  001BE2  0E00               	movlw	0
  3474  001BE4  6E0C               	movwf	(blink@type+1)^0,c
  3475  001BE6  0E01               	movlw	1
  3476  001BE8  6E0B               	movwf	blink@type^0,c
  3477  001BEA  EC2F  F00E         	call	_blink	;wreg free
  3478                           
  3479                           ;display.c: 42:                 break;
  3480  001BEE  EF2A  F00E         	goto	i2l2994
  3481  001BF2                     i2l2986:
  3482                           
  3483                           ;display.c: 44:                 blink(2,1);
  3484  001BF2  0E00               	movlw	0
  3485  001BF4  6E0A               	movwf	(blink@state+1)^0,c
  3486  001BF6  0E02               	movlw	2
  3487  001BF8  6E09               	movwf	blink@state^0,c
  3488  001BFA  0E00               	movlw	0
  3489  001BFC  6E0C               	movwf	(blink@type+1)^0,c
  3490  001BFE  0E01               	movlw	1
  3491  001C00  6E0B               	movwf	blink@type^0,c
  3492  001C02  EC2F  F00E         	call	_blink	;wreg free
  3493                           
  3494                           ;display.c: 45:                 break;
  3495  001C06  EF2A  F00E         	goto	i2l2994
  3496  001C0A                     i2l2988:
  3497                           
  3498                           ;display.c: 47:                 blink(3,1);
  3499  001C0A  0E00               	movlw	0
  3500  001C0C  6E0A               	movwf	(blink@state+1)^0,c
  3501  001C0E  0E03               	movlw	3
  3502  001C10  6E09               	movwf	blink@state^0,c
  3503  001C12  0E00               	movlw	0
  3504  001C14  6E0C               	movwf	(blink@type+1)^0,c
  3505  001C16  0E01               	movlw	1
  3506  001C18  6E0B               	movwf	blink@type^0,c
  3507  001C1A  EC2F  F00E         	call	_blink	;wreg free
  3508                           
  3509                           ;display.c: 48:                 break;
  3510  001C1E  EF2A  F00E         	goto	i2l2994
  3511  001C22                     i2l2992:
  3512  001C22  503B               	movf	_state_machine^0,w,c
  3513  001C24  6E0F               	movwf	??_display_change_state^0,c
  3514  001C26  6A10               	clrf	(??_display_change_state+1)^0,c
  3515                           
  3516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3517                           ; Switch size 1, requested type "simple"
  3518                           ; Number of cases is 1, Range of values is 0 to 0
  3519                           ; switch strategies available:
  3520                           ; Name         Instructions Cycles
  3521                           ; simple_byte            4     3 (average)
  3522                           ;	Chosen strategy is simple_byte
  3523  001C28  5010               	movf	(??_display_change_state+1)^0,w,c
  3524  001C2A  0A00               	xorlw	0	; case 0
  3525  001C2C  B4D8               	btfsc	status,2,c
  3526  001C2E  EF1B  F00E         	goto	i2l3266
  3527  001C32  EF2A  F00E         	goto	i2l2994
  3528  001C36                     i2l3266:
  3529                           
  3530                           ; Switch size 1, requested type "simple"
  3531                           ; Number of cases is 3, Range of values is 1 to 3
  3532                           ; switch strategies available:
  3533                           ; Name         Instructions Cycles
  3534                           ; simple_byte           10     6 (average)
  3535                           ;	Chosen strategy is simple_byte
  3536  001C36  500F               	movf	??_display_change_state^0,w,c
  3537  001C38  0A01               	xorlw	1	; case 1
  3538  001C3A  B4D8               	btfsc	status,2,c
  3539  001C3C  EFED  F00D         	goto	i2l2984
  3540  001C40  0A03               	xorlw	3	; case 2
  3541  001C42  B4D8               	btfsc	status,2,c
  3542  001C44  EFF9  F00D         	goto	i2l2986
  3543  001C48  0A01               	xorlw	1	; case 3
  3544  001C4A  B4D8               	btfsc	status,2,c
  3545  001C4C  EF05  F00E         	goto	i2l2988
  3546  001C50  EF2A  F00E         	goto	i2l2994
  3547  001C54                     i2l2994:
  3548                           
  3549                           ;display.c: 50:         blink_state = 1;
  3550  001C54  0E01               	movlw	1
  3551  001C56  6E27               	movwf	_blink_state^0,c
  3552                           
  3553                           ;display.c: 51:         blink_count = 0;
  3554  001C58  0E00               	movlw	0
  3555  001C5A  6E28               	movwf	_blink_count^0,c
  3556  001C5C                     i2l452:
  3557  001C5C  0012               	return		;funcret
  3558  001C5E                     __end_of_display_change_state:
  3559                           	opt callstack 0
  3560                           
  3561 ;; *************** function i2_initial_display *****************
  3562 ;; Defined at:
  3563 ;;		line 137 in file "display.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;Total ram usage:        2 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    4
  3584 ;; This function calls:
  3585 ;;		i2_LCDInit
  3586 ;;		i2_LCDPutChar
  3587 ;;		i2_LCDPutInst
  3588 ;;		i2_LCDPutStr
  3589 ;;		i2___awdiv
  3590 ;;		i2___awmod
  3591 ;; This function is called by:
  3592 ;;		_display_change_state
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text20
  3597  00129C                     __ptext20:
  3598                           	opt callstack 0
  3599  00129C                     i2_initial_display:
  3600                           	opt callstack 18
  3601  00129C                     
  3602                           ;display.c: 138:     if (init_setting == 0){
  3603  00129C  502C               	movf	_init_setting^0,w,c
  3604  00129E  A4D8               	btfss	status,2,c
  3605  0012A0  EF54  F009         	goto	i2u139_41
  3606  0012A4  EF56  F009         	goto	i2u139_40
  3607  0012A8                     i2u139_41:
  3608  0012A8  EF4D  F00A         	goto	i2l2810
  3609  0012AC                     i2u139_40:
  3610  0012AC                     
  3611                           ;display.c: 139:         LCDInit();
  3612  0012AC  EC82  F012         	call	i2_LCDInit	;wreg free
  3613                           
  3614                           ;display.c: 140:         LCDPutInst(0x01);
  3615  0012B0  0E01               	movlw	1
  3616  0012B2  EC4D  F013         	call	i2_LCDPutInst
  3617  0012B6                     
  3618                           ;display.c: 141:         init_setting = 1;
  3619  0012B6  0E01               	movlw	1
  3620  0012B8  6E2C               	movwf	_init_setting^0,c
  3621  0012BA  EF4D  F00A         	goto	i2l2810
  3622  0012BE                     i2l2744:
  3623                           
  3624                           ;display.c: 145:             LCDPutInst(0x80);
  3625  0012BE  0E80               	movlw	128
  3626  0012C0  EC4D  F013         	call	i2_LCDPutInst
  3627  0012C4                     
  3628                           ;display.c: 146:             LCDPutStr("I. DIGITAL WATCH");
  3629  0012C4  0E45               	movlw	low STR_4
  3630  0012C6  6E07               	movwf	i2LCDPutStr@ptr^0,c
  3631  0012C8  0E10               	movlw	high STR_4
  3632  0012CA  6E08               	movwf	(i2LCDPutStr@ptr+1)^0,c
  3633  0012CC  ECDB  F013         	call	i2_LCDPutStr	;wreg free
  3634  0012D0                     
  3635                           ;display.c: 147:             LCDPutInst(0xC0);
  3636  0012D0  0EC0               	movlw	192
  3637  0012D2  EC4D  F013         	call	i2_LCDPutInst
  3638  0012D6                     
  3639                           ;display.c: 148:             LCDPutInst(0xC4);
  3640  0012D6  0EC4               	movlw	196
  3641  0012D8  EC4D  F013         	call	i2_LCDPutInst
  3642  0012DC                     
  3643                           ;display.c: 149:             LCDPutChar(hour/10 + 48);
  3644  0012DC  C035  F001         	movff	_hour,i2___awdiv@dividend
  3645  0012E0  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  3646  0012E2  0E00               	movlw	0
  3647  0012E4  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  3648  0012E6  0E0A               	movlw	10
  3649  0012E8  6E03               	movwf	i2___awdiv@divisor^0,c
  3650  0012EA  ECDD  F010         	call	i2___awdiv	;wreg free
  3651  0012EE  5001               	movf	?i2___awdiv^0,w,c
  3652  0012F0  0F30               	addlw	48
  3653  0012F2  EC73  F013         	call	i2_LCDPutChar
  3654  0012F6                     
  3655                           ;display.c: 150:             LCDPutChar(hour%10 + 48);
  3656  0012F6  C035  F001         	movff	_hour,i2___awmod@dividend
  3657  0012FA  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  3658  0012FC  0E00               	movlw	0
  3659  0012FE  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  3660  001300  0E0A               	movlw	10
  3661  001302  6E03               	movwf	i2___awmod@divisor^0,c
  3662  001304  EC97  F011         	call	i2___awmod	;wreg free
  3663  001308  5001               	movf	?i2___awmod^0,w,c
  3664  00130A  0F30               	addlw	48
  3665  00130C  EC73  F013         	call	i2_LCDPutChar
  3666  001310                     
  3667                           ;display.c: 151:             LCDPutChar(':');
  3668  001310  0E3A               	movlw	58
  3669  001312  EC73  F013         	call	i2_LCDPutChar
  3670  001316                     
  3671                           ;display.c: 152:             LCDPutChar(minute/10 + 48);
  3672  001316  C036  F001         	movff	_minute,i2___awdiv@dividend
  3673  00131A  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  3674  00131C  0E00               	movlw	0
  3675  00131E  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  3676  001320  0E0A               	movlw	10
  3677  001322  6E03               	movwf	i2___awdiv@divisor^0,c
  3678  001324  ECDD  F010         	call	i2___awdiv	;wreg free
  3679  001328  5001               	movf	?i2___awdiv^0,w,c
  3680  00132A  0F30               	addlw	48
  3681  00132C  EC73  F013         	call	i2_LCDPutChar
  3682  001330                     
  3683                           ;display.c: 153:             LCDPutChar(minute%10 + 48);
  3684  001330  C036  F001         	movff	_minute,i2___awmod@dividend
  3685  001334  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  3686  001336  0E00               	movlw	0
  3687  001338  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  3688  00133A  0E0A               	movlw	10
  3689  00133C  6E03               	movwf	i2___awmod@divisor^0,c
  3690  00133E  EC97  F011         	call	i2___awmod	;wreg free
  3691  001342  5001               	movf	?i2___awmod^0,w,c
  3692  001344  0F30               	addlw	48
  3693  001346  EC73  F013         	call	i2_LCDPutChar
  3694  00134A                     
  3695                           ;display.c: 154:             LCDPutChar(':');
  3696  00134A  0E3A               	movlw	58
  3697  00134C  EC73  F013         	call	i2_LCDPutChar
  3698  001350                     
  3699                           ;display.c: 155:             LCDPutChar(second/10 + 48);
  3700  001350  C037  F001         	movff	_second,i2___awdiv@dividend
  3701  001354  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  3702  001356  0E00               	movlw	0
  3703  001358  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  3704  00135A  0E0A               	movlw	10
  3705  00135C  6E03               	movwf	i2___awdiv@divisor^0,c
  3706  00135E  ECDD  F010         	call	i2___awdiv	;wreg free
  3707  001362  5001               	movf	?i2___awdiv^0,w,c
  3708  001364  0F30               	addlw	48
  3709  001366  EC73  F013         	call	i2_LCDPutChar
  3710  00136A                     
  3711                           ;display.c: 156:             LCDPutChar(second%10 + 48);
  3712  00136A  C037  F001         	movff	_second,i2___awmod@dividend
  3713  00136E  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  3714  001370  0E00               	movlw	0
  3715  001372  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  3716  001374  0E0A               	movlw	10
  3717  001376  6E03               	movwf	i2___awmod@divisor^0,c
  3718  001378  EC97  F011         	call	i2___awmod	;wreg free
  3719  00137C  5001               	movf	?i2___awmod^0,w,c
  3720  00137E  0F30               	addlw	48
  3721  001380  EC73  F013         	call	i2_LCDPutChar
  3722                           
  3723                           ;display.c: 157:             break;
  3724  001384  EF6E  F00A         	goto	i2l506
  3725  001388                     i2l2768:
  3726                           
  3727                           ;display.c: 159:             LCDPutInst(0x80);
  3728  001388  0E80               	movlw	128
  3729  00138A  EC4D  F013         	call	i2_LCDPutInst
  3730  00138E                     
  3731                           ;display.c: 160:             LCDPutStr("II. SET HOUR    ");
  3732  00138E  0E01               	movlw	low STR_5
  3733  001390  6E07               	movwf	i2LCDPutStr@ptr^0,c
  3734  001392  0E10               	movlw	high STR_5
  3735  001394  6E08               	movwf	(i2LCDPutStr@ptr+1)^0,c
  3736  001396  ECDB  F013         	call	i2_LCDPutStr	;wreg free
  3737                           
  3738                           ;display.c: 161:             break;
  3739  00139A  EF6E  F00A         	goto	i2l506
  3740  00139E                     i2l2772:
  3741                           
  3742                           ;display.c: 163:             LCDPutInst(0x80);
  3743  00139E  0E80               	movlw	128
  3744  0013A0  EC4D  F013         	call	i2_LCDPutInst
  3745  0013A4                     
  3746                           ;display.c: 164:             LCDPutStr("III. SET MINUTE ");
  3747  0013A4  0E34               	movlw	low STR_6
  3748  0013A6  6E07               	movwf	i2LCDPutStr@ptr^0,c
  3749  0013A8  0E10               	movlw	high STR_6
  3750  0013AA  6E08               	movwf	(i2LCDPutStr@ptr+1)^0,c
  3751  0013AC  ECDB  F013         	call	i2_LCDPutStr	;wreg free
  3752                           
  3753                           ;display.c: 165:             break;
  3754  0013B0  EF6E  F00A         	goto	i2l506
  3755  0013B4                     i2l2776:
  3756                           
  3757                           ;display.c: 167:             LCDPutInst(0x80);
  3758  0013B4  0E80               	movlw	128
  3759  0013B6  EC4D  F013         	call	i2_LCDPutInst
  3760  0013BA                     
  3761                           ;display.c: 168:             LCDPutStr("IV. SET SECOND  ");
  3762  0013BA  0E23               	movlw	low STR_7
  3763  0013BC  6E07               	movwf	i2LCDPutStr@ptr^0,c
  3764  0013BE  0E10               	movlw	high STR_7
  3765  0013C0  6E08               	movwf	(i2LCDPutStr@ptr+1)^0,c
  3766  0013C2  ECDB  F013         	call	i2_LCDPutStr	;wreg free
  3767                           
  3768                           ;display.c: 169:             break;
  3769  0013C6  EF6E  F00A         	goto	i2l506
  3770  0013CA                     i2l2780:
  3771                           
  3772                           ;display.c: 171:             LCDPutInst(0x80);
  3773  0013CA  0E80               	movlw	128
  3774  0013CC  EC4D  F013         	call	i2_LCDPutInst
  3775  0013D0                     
  3776                           ;display.c: 172:             LCDPutStr("V. STOP WATCH   ");
  3777  0013D0  0E12               	movlw	low STR_8
  3778  0013D2  6E07               	movwf	i2LCDPutStr@ptr^0,c
  3779  0013D4  0E10               	movlw	high STR_8
  3780  0013D6  6E08               	movwf	(i2LCDPutStr@ptr+1)^0,c
  3781  0013D8  ECDB  F013         	call	i2_LCDPutStr	;wreg free
  3782  0013DC                     
  3783                           ;display.c: 173:             millis_10_stop = 0;
  3784  0013DC  0E00               	movlw	0
  3785  0013DE  6E33               	movwf	_millis_10_stop^0,c
  3786  0013E0                     
  3787                           ;display.c: 174:             second_stop = 0;
  3788  0013E0  0E00               	movlw	0
  3789  0013E2  6E32               	movwf	_second_stop^0,c
  3790  0013E4                     
  3791                           ;display.c: 175:             minute_stop = 0;
  3792  0013E4  0E00               	movlw	0
  3793  0013E6  6E31               	movwf	_minute_stop^0,c
  3794  0013E8                     
  3795                           ;display.c: 176:             LCDPutInst(0xCA);
  3796  0013E8  0ECA               	movlw	202
  3797  0013EA  EC4D  F013         	call	i2_LCDPutInst
  3798  0013EE                     
  3799                           ;display.c: 177:             LCDPutChar(millis_10_stop/10 + 48);
  3800  0013EE  C033  F001         	movff	_millis_10_stop,i2___awdiv@dividend
  3801  0013F2  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  3802  0013F4  0E00               	movlw	0
  3803  0013F6  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  3804  0013F8  0E0A               	movlw	10
  3805  0013FA  6E03               	movwf	i2___awdiv@divisor^0,c
  3806  0013FC  ECDD  F010         	call	i2___awdiv	;wreg free
  3807  001400  5001               	movf	?i2___awdiv^0,w,c
  3808  001402  0F30               	addlw	48
  3809  001404  EC73  F013         	call	i2_LCDPutChar
  3810  001408                     
  3811                           ;display.c: 178:             LCDPutChar(millis_10_stop%10 + 48);
  3812  001408  C033  F001         	movff	_millis_10_stop,i2___awmod@dividend
  3813  00140C  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  3814  00140E  0E00               	movlw	0
  3815  001410  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  3816  001412  0E0A               	movlw	10
  3817  001414  6E03               	movwf	i2___awmod@divisor^0,c
  3818  001416  EC97  F011         	call	i2___awmod	;wreg free
  3819  00141A  5001               	movf	?i2___awmod^0,w,c
  3820  00141C  0F30               	addlw	48
  3821  00141E  EC73  F013         	call	i2_LCDPutChar
  3822  001422                     
  3823                           ;display.c: 179:             LCDPutInst(0xC7);
  3824  001422  0EC7               	movlw	199
  3825  001424  EC4D  F013         	call	i2_LCDPutInst
  3826  001428                     
  3827                           ;display.c: 180:             LCDPutChar(second_stop/10 + 48);
  3828  001428  C032  F001         	movff	_second_stop,i2___awdiv@dividend
  3829  00142C  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  3830  00142E  0E00               	movlw	0
  3831  001430  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  3832  001432  0E0A               	movlw	10
  3833  001434  6E03               	movwf	i2___awdiv@divisor^0,c
  3834  001436  ECDD  F010         	call	i2___awdiv	;wreg free
  3835  00143A  5001               	movf	?i2___awdiv^0,w,c
  3836  00143C  0F30               	addlw	48
  3837  00143E  EC73  F013         	call	i2_LCDPutChar
  3838  001442                     
  3839                           ;display.c: 181:             LCDPutChar(second_stop%10 + 48);
  3840  001442  C032  F001         	movff	_second_stop,i2___awmod@dividend
  3841  001446  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  3842  001448  0E00               	movlw	0
  3843  00144A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  3844  00144C  0E0A               	movlw	10
  3845  00144E  6E03               	movwf	i2___awmod@divisor^0,c
  3846  001450  EC97  F011         	call	i2___awmod	;wreg free
  3847  001454  5001               	movf	?i2___awmod^0,w,c
  3848  001456  0F30               	addlw	48
  3849  001458  EC73  F013         	call	i2_LCDPutChar
  3850  00145C                     
  3851                           ;display.c: 182:             LCDPutInst(0xC4);
  3852  00145C  0EC4               	movlw	196
  3853  00145E  EC4D  F013         	call	i2_LCDPutInst
  3854  001462                     
  3855                           ;display.c: 183:             LCDPutChar(minute_stop/10 + 48);
  3856  001462  C031  F001         	movff	_minute_stop,i2___awdiv@dividend
  3857  001466  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  3858  001468  0E00               	movlw	0
  3859  00146A  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  3860  00146C  0E0A               	movlw	10
  3861  00146E  6E03               	movwf	i2___awdiv@divisor^0,c
  3862  001470  ECDD  F010         	call	i2___awdiv	;wreg free
  3863  001474  5001               	movf	?i2___awdiv^0,w,c
  3864  001476  0F30               	addlw	48
  3865  001478  EC73  F013         	call	i2_LCDPutChar
  3866  00147C                     
  3867                           ;display.c: 184:             LCDPutChar(minute_stop%10 + 48);
  3868  00147C  C031  F001         	movff	_minute_stop,i2___awmod@dividend
  3869  001480  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  3870  001482  0E00               	movlw	0
  3871  001484  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  3872  001486  0E0A               	movlw	10
  3873  001488  6E03               	movwf	i2___awmod@divisor^0,c
  3874  00148A  EC97  F011         	call	i2___awmod	;wreg free
  3875  00148E  5001               	movf	?i2___awmod^0,w,c
  3876  001490  0F30               	addlw	48
  3877  001492  EC73  F013         	call	i2_LCDPutChar
  3878                           
  3879                           ;display.c: 185:             break;
  3880  001496  EF6E  F00A         	goto	i2l506
  3881  00149A                     i2l2810:
  3882  00149A  503B               	movf	_state_machine^0,w,c
  3883  00149C  6E09               	movwf	??i2_initial_display^0,c
  3884  00149E  6A0A               	clrf	(??i2_initial_display+1)^0,c
  3885                           
  3886                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3887                           ; Switch size 1, requested type "simple"
  3888                           ; Number of cases is 1, Range of values is 0 to 0
  3889                           ; switch strategies available:
  3890                           ; Name         Instructions Cycles
  3891                           ; simple_byte            4     3 (average)
  3892                           ;	Chosen strategy is simple_byte
  3893  0014A0  500A               	movf	(??i2_initial_display+1)^0,w,c
  3894  0014A2  0A00               	xorlw	0	; case 0
  3895  0014A4  B4D8               	btfsc	status,2,c
  3896  0014A6  EF57  F00A         	goto	i2l3268
  3897  0014AA  EF6E  F00A         	goto	i2l506
  3898  0014AE                     i2l3268:
  3899                           
  3900                           ; Switch size 1, requested type "simple"
  3901                           ; Number of cases is 5, Range of values is 0 to 4
  3902                           ; switch strategies available:
  3903                           ; Name         Instructions Cycles
  3904                           ; simple_byte           16     9 (average)
  3905                           ;	Chosen strategy is simple_byte
  3906  0014AE  5009               	movf	??i2_initial_display^0,w,c
  3907  0014B0  0A00               	xorlw	0	; case 0
  3908  0014B2  B4D8               	btfsc	status,2,c
  3909  0014B4  EF5F  F009         	goto	i2l2744
  3910  0014B8  0A01               	xorlw	1	; case 1
  3911  0014BA  B4D8               	btfsc	status,2,c
  3912  0014BC  EFC4  F009         	goto	i2l2768
  3913  0014C0  0A03               	xorlw	3	; case 2
  3914  0014C2  B4D8               	btfsc	status,2,c
  3915  0014C4  EFCF  F009         	goto	i2l2772
  3916  0014C8  0A01               	xorlw	1	; case 3
  3917  0014CA  B4D8               	btfsc	status,2,c
  3918  0014CC  EFDA  F009         	goto	i2l2776
  3919  0014D0  0A07               	xorlw	7	; case 4
  3920  0014D2  B4D8               	btfsc	status,2,c
  3921  0014D4  EFE5  F009         	goto	i2l2780
  3922  0014D8  EF6E  F00A         	goto	i2l506
  3923  0014DC                     i2l506:
  3924  0014DC  0012               	return		;funcret
  3925  0014DE                     __end_ofi2_initial_display:
  3926                           	opt callstack 0
  3927                           
  3928 ;; *************** function i2_LCDInit *****************
  3929 ;; Defined at:
  3930 ;;		line 46 in file "BBSPI_LCD.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;Total ram usage:        1 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    3
  3951 ;; This function calls:
  3952 ;;		i2_InitBBSPI
  3953 ;;		i2_LCDPutInst
  3954 ;;		i2_Port_BBSPIInit
  3955 ;;		i2_WritePort_BBSPI
  3956 ;; This function is called by:
  3957 ;;		i2_initial_display
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text21
  3962  002504                     __ptext21:
  3963                           	opt callstack 0
  3964  002504                     i2_LCDInit:
  3965                           	opt callstack 18
  3966  002504                     
  3967                           ;BBSPI_LCD.c: 48:     InitBBSPI();
  3968  002504  EC62  F014         	call	i2_InitBBSPI	;wreg free
  3969  002508                     
  3970                           ;BBSPI_LCD.c: 49:     TRISFbits.TRISF6 = 0;
  3971  002508  9C97               	bcf	151,6,c	;volatile
  3972  00250A                     
  3973                           ;BBSPI_LCD.c: 50:     LATFbits.LATF6 = 0;
  3974  00250A  9C8E               	bcf	142,6,c	;volatile
  3975  00250C                     
  3976                           ;BBSPI_LCD.c: 51:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3977  00250C  0E03               	movlw	3
  3978  00250E  6E07               	movwf	??i2_LCDInit^0,c
  3979  002510  0E98               	movlw	152
  3980  002512                     i2u218_47:
  3981  002512  2EE8               	decfsz	wreg,f,c
  3982  002514  D7FE               	bra	i2u218_47
  3983  002516  2E07               	decfsz	??i2_LCDInit^0,f,c
  3984  002518  D7FC               	bra	i2u218_47
  3985  00251A                     
  3986                           ;BBSPI_LCD.c: 52:     LATFbits.LATF6 = 1;
  3987  00251A  8C8E               	bsf	142,6,c	;volatile
  3988  00251C                     
  3989                           ;BBSPI_LCD.c: 53:     Port_BBSPIInit (0x00);
  3990  00251C  0E00               	movlw	0
  3991  00251E  EC3F  F014         	call	i2_Port_BBSPIInit
  3992  002522                     
  3993                           ;BBSPI_LCD.c: 54:     Port_BBSPIInit (0x01);
  3994  002522  0E01               	movlw	1
  3995  002524  EC3F  F014         	call	i2_Port_BBSPIInit
  3996  002528                     
  3997                           ;BBSPI_LCD.c: 55:     WritePort_BBSPI (0x12, 0);
  3998  002528  0E00               	movlw	0
  3999  00252A  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  4000  00252C  0E12               	movlw	18
  4001  00252E  EC4C  F014         	call	i2_WritePort_BBSPI
  4002  002532                     
  4003                           ;BBSPI_LCD.c: 56:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4004  002532  0E27               	movlw	39
  4005  002534  6E07               	movwf	??i2_LCDInit^0,c
  4006  002536  0EF5               	movlw	245
  4007  002538                     i2u219_47:
  4008  002538  2EE8               	decfsz	wreg,f,c
  4009  00253A  D7FE               	bra	i2u219_47
  4010  00253C  2E07               	decfsz	??i2_LCDInit^0,f,c
  4011  00253E  D7FC               	bra	i2u219_47
  4012  002540  F000               	nop	
  4013  002542                     
  4014                           ;BBSPI_LCD.c: 57:     LCDPutInst(0x32);
  4015  002542  0E32               	movlw	50
  4016  002544  EC4D  F013         	call	i2_LCDPutInst
  4017  002548                     
  4018                           ;BBSPI_LCD.c: 58:     LCDPutInst(0x3C);
  4019  002548  0E3C               	movlw	60
  4020  00254A  EC4D  F013         	call	i2_LCDPutInst
  4021  00254E                     
  4022                           ;BBSPI_LCD.c: 59:     LCDPutInst(0x0C);
  4023  00254E  0E0C               	movlw	12
  4024  002550  EC4D  F013         	call	i2_LCDPutInst
  4025  002554                     
  4026                           ;BBSPI_LCD.c: 60:     LCDPutInst(0x01);
  4027  002554  0E01               	movlw	1
  4028  002556  EC4D  F013         	call	i2_LCDPutInst
  4029  00255A                     
  4030                           ;BBSPI_LCD.c: 61:     LCDPutInst(0x06);
  4031  00255A  0E06               	movlw	6
  4032  00255C  EC4D  F013         	call	i2_LCDPutInst
  4033  002560  0012               	return		;funcret
  4034  002562                     __end_ofi2_LCDInit:
  4035                           	opt callstack 0
  4036                           
  4037 ;; *************** function i2_Port_BBSPIInit *****************
  4038 ;; Defined at:
  4039 ;;		line 124 in file "BBSPI_LCD.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  port_dir        1    wreg     unsigned char 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  port_dir        1    3[COMRAM] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;Total ram usage:        1 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    1
  4060 ;; This function calls:
  4061 ;;		i2_SendByteBBSPI
  4062 ;; This function is called by:
  4063 ;;		i2_LCDInit
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text22
  4068  00287E                     __ptext22:
  4069                           	opt callstack 0
  4070  00287E                     i2_Port_BBSPIInit:
  4071                           	opt callstack 19
  4072                           
  4073                           ;incstack = 0
  4074                           ;i2Port_BBSPIInit@port_dir stored from wreg
  4075  00287E  6E04               	movwf	i2Port_BBSPIInit@port_dir^0,c
  4076  002880                     
  4077                           ;BBSPI_LCD.c: 124: void Port_BBSPIInit (unsigned char port_dir);BBSPI_LCD.c: 125: {;BBSP
      +                          I_LCD.c: 129:     LATAbits.LATA2 = 0;
  4078  002880  9489               	bcf	137,2,c	;volatile
  4079  002882                     
  4080                           ;BBSPI_LCD.c: 130:     SendByteBBSPI(0x40);
  4081  002882  0E40               	movlw	64
  4082  002884  EC21  F012         	call	i2_SendByteBBSPI
  4083                           
  4084                           ;BBSPI_LCD.c: 131:     SendByteBBSPI(port_dir);
  4085  002888  5004               	movf	i2Port_BBSPIInit@port_dir^0,w,c
  4086  00288A  EC21  F012         	call	i2_SendByteBBSPI
  4087                           
  4088                           ;BBSPI_LCD.c: 132:     SendByteBBSPI(0x00);
  4089  00288E  0E00               	movlw	0
  4090  002890  EC21  F012         	call	i2_SendByteBBSPI
  4091  002894                     
  4092                           ;BBSPI_LCD.c: 133:     LATAbits.LATA2 = 1;
  4093  002894  8489               	bsf	137,2,c	;volatile
  4094  002896  0012               	return		;funcret
  4095  002898                     __end_ofi2_Port_BBSPIInit:
  4096                           	opt callstack 0
  4097                           
  4098 ;; *************** function i2_InitBBSPI *****************
  4099 ;; Defined at:
  4100 ;;		line 71 in file "BBSPI_LCD.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		None
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;Total ram usage:        0 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		i2_LCDInit
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text23
  4128  0028C4                     __ptext23:
  4129                           	opt callstack 0
  4130  0028C4                     i2_InitBBSPI:
  4131                           	opt callstack 20
  4132  0028C4                     
  4133                           ;BBSPI_LCD.c: 73:     TRISAbits.TRISA2 = 0;
  4134  0028C4  9492               	bcf	146,2,c	;volatile
  4135                           
  4136                           ;BBSPI_LCD.c: 74:     TRISCbits.TRISC4 = 1;
  4137  0028C6  8894               	bsf	148,4,c	;volatile
  4138                           
  4139                           ;BBSPI_LCD.c: 75:     TRISCbits.TRISC5 = 0;
  4140  0028C8  9A94               	bcf	148,5,c	;volatile
  4141                           
  4142                           ;BBSPI_LCD.c: 76:     TRISCbits.TRISC3 = 0;
  4143  0028CA  9694               	bcf	148,3,c	;volatile
  4144                           
  4145                           ;BBSPI_LCD.c: 78:     LATAbits.LATA2 = 1;
  4146  0028CC  8489               	bsf	137,2,c	;volatile
  4147                           
  4148                           ;BBSPI_LCD.c: 79:     LATCbits.LATC4 = 1;
  4149  0028CE  888B               	bsf	139,4,c	;volatile
  4150                           
  4151                           ;BBSPI_LCD.c: 80:     LATCbits.LATC5 = 0;
  4152  0028D0  9A8B               	bcf	139,5,c	;volatile
  4153                           
  4154                           ;BBSPI_LCD.c: 81:     LATCbits.LATC3 = 0;
  4155  0028D2  968B               	bcf	139,3,c	;volatile
  4156  0028D4  0012               	return		;funcret
  4157  0028D6                     __end_ofi2_InitBBSPI:
  4158                           	opt callstack 0
  4159                           
  4160 ;; *************** function _blink *****************
  4161 ;; Defined at:
  4162 ;;		line 55 in file "display.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  state           2    8[COMRAM] int 
  4165 ;;  type            2   10[COMRAM] int 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;Total ram usage:        6 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    4
  4184 ;; This function calls:
  4185 ;;		i2_LCDPutChar
  4186 ;;		i2_LCDPutInst
  4187 ;;		i2_LCDPutStr
  4188 ;;		i2___awdiv
  4189 ;;		i2___awmod
  4190 ;; This function is called by:
  4191 ;;		_display_change_state
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text24
  4196  001C5E                     __ptext24:
  4197                           	opt callstack 0
  4198  001C5E                     _blink:
  4199                           	opt callstack 18
  4200  001C5E                     
  4201                           ;display.c: 56:     switch(state){
  4202  001C5E  EFCA  F00E         	goto	i2l2732
  4203  001C62                     i2l2706:
  4204                           
  4205                           ;display.c: 58:             if (type == 1){
  4206  001C62  040B               	decf	blink@type^0,w,c
  4207  001C64  100C               	iorwf	(blink@type+1)^0,w,c
  4208  001C66  A4D8               	btfss	status,2,c
  4209  001C68  EF38  F00E         	goto	i2u136_41
  4210  001C6C  EF3A  F00E         	goto	i2u136_40
  4211  001C70                     i2u136_41:
  4212  001C70  EF59  F00E         	goto	i2l2710
  4213  001C74                     i2u136_40:
  4214  001C74                     
  4215                           ;display.c: 59:                 LCDPutInst(0xC4);
  4216  001C74  0EC4               	movlw	196
  4217  001C76  EC4D  F013         	call	i2_LCDPutInst
  4218                           
  4219                           ;display.c: 60:                 LCDPutChar(hour/10 + 48);
  4220  001C7A  C035  F001         	movff	_hour,i2___awdiv@dividend
  4221  001C7E  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  4222  001C80  0E00               	movlw	0
  4223  001C82  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4224  001C84  0E0A               	movlw	10
  4225  001C86  6E03               	movwf	i2___awdiv@divisor^0,c
  4226  001C88  ECDD  F010         	call	i2___awdiv	;wreg free
  4227  001C8C  5001               	movf	?i2___awdiv^0,w,c
  4228  001C8E  0F30               	addlw	48
  4229  001C90  EC73  F013         	call	i2_LCDPutChar
  4230                           
  4231                           ;display.c: 61:                 LCDPutChar(hour%10 + 48);
  4232  001C94  C035  F001         	movff	_hour,i2___awmod@dividend
  4233  001C98  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4234  001C9A  0E00               	movlw	0
  4235  001C9C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4236  001C9E  0E0A               	movlw	10
  4237  001CA0  6E03               	movwf	i2___awmod@divisor^0,c
  4238  001CA2  EC97  F011         	call	i2___awmod	;wreg free
  4239  001CA6  5001               	movf	?i2___awmod^0,w,c
  4240  001CA8  0F30               	addlw	48
  4241  001CAA  EC73  F013         	call	i2_LCDPutChar
  4242                           
  4243                           ;display.c: 62:             }
  4244  001CAE  EFE4  F00E         	goto	i2l478
  4245  001CB2                     i2l2710:
  4246                           
  4247                           ;display.c: 64:                 LCDPutInst(0xC4);
  4248  001CB2  0EC4               	movlw	196
  4249  001CB4  EC4D  F013         	call	i2_LCDPutInst
  4250  001CB8                     
  4251                           ;display.c: 65:                 LCDPutStr("__");
  4252  001CB8  0E56               	movlw	low STR_1
  4253  001CBA  6E07               	movwf	i2LCDPutStr@ptr^0,c
  4254  001CBC  0E10               	movlw	high STR_1
  4255  001CBE  6E08               	movwf	(i2LCDPutStr@ptr+1)^0,c
  4256  001CC0  ECDB  F013         	call	i2_LCDPutStr	;wreg free
  4257  001CC4  EFE4  F00E         	goto	i2l478
  4258  001CC8                     i2l2714:
  4259                           
  4260                           ;display.c: 69:             if (type == 1){
  4261  001CC8  040B               	decf	blink@type^0,w,c
  4262  001CCA  100C               	iorwf	(blink@type+1)^0,w,c
  4263  001CCC  A4D8               	btfss	status,2,c
  4264  001CCE  EF6B  F00E         	goto	i2u137_41
  4265  001CD2  EF6D  F00E         	goto	i2u137_40
  4266  001CD6                     i2u137_41:
  4267  001CD6  EF8C  F00E         	goto	i2l2718
  4268  001CDA                     i2u137_40:
  4269  001CDA                     
  4270                           ;display.c: 70:                 LCDPutInst(0xC7);
  4271  001CDA  0EC7               	movlw	199
  4272  001CDC  EC4D  F013         	call	i2_LCDPutInst
  4273                           
  4274                           ;display.c: 71:                 LCDPutChar(minute/10 + 48);
  4275  001CE0  C036  F001         	movff	_minute,i2___awdiv@dividend
  4276  001CE4  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  4277  001CE6  0E00               	movlw	0
  4278  001CE8  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4279  001CEA  0E0A               	movlw	10
  4280  001CEC  6E03               	movwf	i2___awdiv@divisor^0,c
  4281  001CEE  ECDD  F010         	call	i2___awdiv	;wreg free
  4282  001CF2  5001               	movf	?i2___awdiv^0,w,c
  4283  001CF4  0F30               	addlw	48
  4284  001CF6  EC73  F013         	call	i2_LCDPutChar
  4285                           
  4286                           ;display.c: 72:                 LCDPutChar(minute%10 + 48);
  4287  001CFA  C036  F001         	movff	_minute,i2___awmod@dividend
  4288  001CFE  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4289  001D00  0E00               	movlw	0
  4290  001D02  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4291  001D04  0E0A               	movlw	10
  4292  001D06  6E03               	movwf	i2___awmod@divisor^0,c
  4293  001D08  EC97  F011         	call	i2___awmod	;wreg free
  4294  001D0C  5001               	movf	?i2___awmod^0,w,c
  4295  001D0E  0F30               	addlw	48
  4296  001D10  EC73  F013         	call	i2_LCDPutChar
  4297                           
  4298                           ;display.c: 73:             }
  4299  001D14  EFE4  F00E         	goto	i2l478
  4300  001D18                     i2l2718:
  4301                           
  4302                           ;display.c: 75:                 LCDPutInst(0xC7);
  4303  001D18  0EC7               	movlw	199
  4304  001D1A  EC4D  F013         	call	i2_LCDPutInst
  4305  001D1E                     
  4306                           ;display.c: 76:                 LCDPutStr("__");
  4307  001D1E  0E56               	movlw	low STR_1
  4308  001D20  6E07               	movwf	i2LCDPutStr@ptr^0,c
  4309  001D22  0E10               	movlw	high STR_1
  4310  001D24  6E08               	movwf	(i2LCDPutStr@ptr+1)^0,c
  4311  001D26  ECDB  F013         	call	i2_LCDPutStr	;wreg free
  4312  001D2A  EFE4  F00E         	goto	i2l478
  4313  001D2E                     i2l2722:
  4314                           
  4315                           ;display.c: 80:             if (type == 1){
  4316  001D2E  040B               	decf	blink@type^0,w,c
  4317  001D30  100C               	iorwf	(blink@type+1)^0,w,c
  4318  001D32  A4D8               	btfss	status,2,c
  4319  001D34  EF9E  F00E         	goto	i2u138_41
  4320  001D38  EFA0  F00E         	goto	i2u138_40
  4321  001D3C                     i2u138_41:
  4322  001D3C  EFBF  F00E         	goto	i2l2726
  4323  001D40                     i2u138_40:
  4324  001D40                     
  4325                           ;display.c: 81:                 LCDPutInst(0xCA);
  4326  001D40  0ECA               	movlw	202
  4327  001D42  EC4D  F013         	call	i2_LCDPutInst
  4328                           
  4329                           ;display.c: 82:                 LCDPutChar(second/10 + 48);
  4330  001D46  C037  F001         	movff	_second,i2___awdiv@dividend
  4331  001D4A  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  4332  001D4C  0E00               	movlw	0
  4333  001D4E  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4334  001D50  0E0A               	movlw	10
  4335  001D52  6E03               	movwf	i2___awdiv@divisor^0,c
  4336  001D54  ECDD  F010         	call	i2___awdiv	;wreg free
  4337  001D58  5001               	movf	?i2___awdiv^0,w,c
  4338  001D5A  0F30               	addlw	48
  4339  001D5C  EC73  F013         	call	i2_LCDPutChar
  4340                           
  4341                           ;display.c: 83:                 LCDPutChar(second%10 + 48);
  4342  001D60  C037  F001         	movff	_second,i2___awmod@dividend
  4343  001D64  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4344  001D66  0E00               	movlw	0
  4345  001D68  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4346  001D6A  0E0A               	movlw	10
  4347  001D6C  6E03               	movwf	i2___awmod@divisor^0,c
  4348  001D6E  EC97  F011         	call	i2___awmod	;wreg free
  4349  001D72  5001               	movf	?i2___awmod^0,w,c
  4350  001D74  0F30               	addlw	48
  4351  001D76  EC73  F013         	call	i2_LCDPutChar
  4352                           
  4353                           ;display.c: 84:             }
  4354  001D7A  EFE4  F00E         	goto	i2l478
  4355  001D7E                     i2l2726:
  4356                           
  4357                           ;display.c: 86:                 LCDPutInst(0xCA);
  4358  001D7E  0ECA               	movlw	202
  4359  001D80  EC4D  F013         	call	i2_LCDPutInst
  4360  001D84                     
  4361                           ;display.c: 87:                 LCDPutStr("__");
  4362  001D84  0E56               	movlw	low STR_1
  4363  001D86  6E07               	movwf	i2LCDPutStr@ptr^0,c
  4364  001D88  0E10               	movlw	high STR_1
  4365  001D8A  6E08               	movwf	(i2LCDPutStr@ptr+1)^0,c
  4366  001D8C  ECDB  F013         	call	i2_LCDPutStr	;wreg free
  4367  001D90  EFE4  F00E         	goto	i2l478
  4368  001D94                     i2l2732:
  4369  001D94  C009  F00D         	movff	blink@state,??_blink
  4370  001D98  C00A  F00E         	movff	blink@state+1,??_blink+1
  4371                           
  4372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4373                           ; Switch size 1, requested type "simple"
  4374                           ; Number of cases is 1, Range of values is 0 to 0
  4375                           ; switch strategies available:
  4376                           ; Name         Instructions Cycles
  4377                           ; simple_byte            4     3 (average)
  4378                           ;	Chosen strategy is simple_byte
  4379  001D9C  500E               	movf	(??_blink+1)^0,w,c
  4380  001D9E  0A00               	xorlw	0	; case 0
  4381  001DA0  B4D8               	btfsc	status,2,c
  4382  001DA2  EFD5  F00E         	goto	i2l3270
  4383  001DA6  EFE4  F00E         	goto	i2l478
  4384  001DAA                     i2l3270:
  4385                           
  4386                           ; Switch size 1, requested type "simple"
  4387                           ; Number of cases is 3, Range of values is 1 to 3
  4388                           ; switch strategies available:
  4389                           ; Name         Instructions Cycles
  4390                           ; simple_byte           10     6 (average)
  4391                           ;	Chosen strategy is simple_byte
  4392  001DAA  500D               	movf	??_blink^0,w,c
  4393  001DAC  0A01               	xorlw	1	; case 1
  4394  001DAE  B4D8               	btfsc	status,2,c
  4395  001DB0  EF31  F00E         	goto	i2l2706
  4396  001DB4  0A03               	xorlw	3	; case 2
  4397  001DB6  B4D8               	btfsc	status,2,c
  4398  001DB8  EF64  F00E         	goto	i2l2714
  4399  001DBC  0A01               	xorlw	1	; case 3
  4400  001DBE  B4D8               	btfsc	status,2,c
  4401  001DC0  EF97  F00E         	goto	i2l2722
  4402  001DC4  EFE4  F00E         	goto	i2l478
  4403  001DC8                     i2l478:
  4404  001DC8  0012               	return		;funcret
  4405  001DCA                     __end_of_blink:
  4406                           	opt callstack 0
  4407                           
  4408 ;; *************** function i2_LCDPutStr *****************
  4409 ;; Defined at:
  4410 ;;		line 199 in file "BBSPI_LCD.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  ptr             2    6[COMRAM] PTR const unsigned char 
  4413 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  4414 ;;		 -> STR_4(17), STR_3(3), STR_2(3), STR_1(3), 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;Total ram usage:        2 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    3
  4433 ;; This function calls:
  4434 ;;		i2_LCDPutChar
  4435 ;; This function is called by:
  4436 ;;		_blink
  4437 ;;		i2_initial_display
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text25
  4442  0027B6                     __ptext25:
  4443                           	opt callstack 0
  4444  0027B6                     i2_LCDPutStr:
  4445                           	opt callstack 18
  4446  0027B6                     
  4447                           ;BBSPI_LCD.c: 199: void LCDPutStr (const char *ptr);BBSPI_LCD.c: 200: {;BBSPI_LCD.c: 201
      +                          :     while(*ptr) LCDPutChar(*(ptr++));
  4448  0027B6  EFE9  F013         	goto	i2l2506
  4449  0027BA                     i2l2502:
  4450  0027BA  C007  FFF6         	movff	i2LCDPutStr@ptr,tblptrl
  4451  0027BE  C008  FFF7         	movff	i2LCDPutStr@ptr+1,tblptrh
  4452  0027C2                     	if	0	;tblptru may be non-zero
  4453  0027C2                     	endif
  4454  0027C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4455  0027C2  0E00               	movlw	low (__mediumconst shr (0+16))
  4456  0027C4  6EF8               	movwf	tblptru,c
  4457  0027C6                     	endif
  4458  0027C6  0008               	tblrd		*
  4459  0027C8  50F5               	movf	tablat,w,c
  4460  0027CA  EC73  F013         	call	i2_LCDPutChar
  4461  0027CE  4A07               	infsnz	i2LCDPutStr@ptr^0,f,c
  4462  0027D0  2A08               	incf	(i2LCDPutStr@ptr+1)^0,f,c
  4463  0027D2                     i2l2506:
  4464  0027D2  C007  FFF6         	movff	i2LCDPutStr@ptr,tblptrl
  4465  0027D6  C008  FFF7         	movff	i2LCDPutStr@ptr+1,tblptrh
  4466  0027DA                     	if	0	;tblptru may be non-zero
  4467  0027DA                     	endif
  4468  0027DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4469  0027DA  0E00               	movlw	low (__mediumconst shr (0+16))
  4470  0027DC  6EF8               	movwf	tblptru,c
  4471  0027DE                     	endif
  4472  0027DE  0008               	tblrd		*
  4473  0027E0  50F5               	movf	tablat,w,c
  4474  0027E2  0900               	iorlw	0
  4475  0027E4  A4D8               	btfss	status,2,c
  4476  0027E6  EFF7  F013         	goto	i2u122_41
  4477  0027EA  EFF9  F013         	goto	i2u122_40
  4478  0027EE                     i2u122_41:
  4479  0027EE  EFDD  F013         	goto	i2l2502
  4480  0027F2                     i2u122_40:
  4481  0027F2  0012               	return		;funcret
  4482  0027F4                     __end_ofi2_LCDPutStr:
  4483                           	opt callstack 0
  4484                           
  4485 ;; *************** function _clock_count *****************
  4486 ;; Defined at:
  4487 ;;		line 15 in file "clock.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  state           2   14[COMRAM] int 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;Total ram usage:        2 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    4
  4508 ;; This function calls:
  4509 ;;		_display_clock
  4510 ;;		i2___awmod
  4511 ;; This function is called by:
  4512 ;;		_clock_system
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text26
  4517  001DCA                     __ptext26:
  4518                           	opt callstack 0
  4519  001DCA                     _clock_count:
  4520                           	opt callstack 19
  4521  001DCA                     
  4522                           ;clock.c: 16:     millis++;
  4523  001DCA  2A38               	incf	_millis^0,f,c
  4524  001DCC                     
  4525                           ;clock.c: 17:     if (millis >= 100){
  4526  001DCC  0E63               	movlw	99
  4527  001DCE  6438               	cpfsgt	_millis^0,c
  4528  001DD0  EFEC  F00E         	goto	i2u154_41
  4529  001DD4  EFEE  F00E         	goto	i2u154_40
  4530  001DD8                     i2u154_41:
  4531  001DD8  EF1C  F00F         	goto	i2l2922
  4532  001DDC                     i2u154_40:
  4533  001DDC                     
  4534                           ;clock.c: 18:         millis = 0;
  4535  001DDC  0E00               	movlw	0
  4536  001DDE  6E38               	movwf	_millis^0,c
  4537  001DE0                     
  4538                           ;clock.c: 19:         second = second + 1;
  4539  001DE0  2837               	incf	_second^0,w,c
  4540  001DE2  6E37               	movwf	_second^0,c
  4541  001DE4                     
  4542                           ;clock.c: 20:         minute_flag = second == 60? 1:0;
  4543  001DE4  0E3C               	movlw	60
  4544  001DE6  1837               	xorwf	_second^0,w,c
  4545  001DE8  B4D8               	btfsc	status,2,c
  4546  001DEA  EFF9  F00E         	goto	i2u155_41
  4547  001DEE  EFFC  F00E         	goto	i2u155_40
  4548  001DF2                     i2u155_41:
  4549  001DF2  0E01               	movlw	1
  4550  001DF4  EFFD  F00E         	goto	i2u156_40
  4551  001DF8                     i2u155_40:
  4552  001DF8  0E00               	movlw	0
  4553  001DFA                     i2u156_40:
  4554  001DFA  6E26               	movwf	_minute_flag^0,c
  4555                           
  4556                           ;clock.c: 21:         if (minute_flag) second = 0;
  4557  001DFC  5026               	movf	_minute_flag^0,w,c
  4558  001DFE  B4D8               	btfsc	status,2,c
  4559  001E00  EF04  F00F         	goto	i2u157_41
  4560  001E04  EF06  F00F         	goto	i2u157_40
  4561  001E08                     i2u157_41:
  4562  001E08  EF08  F00F         	goto	i2l2918
  4563  001E0C                     i2u157_40:
  4564  001E0C  0E00               	movlw	0
  4565  001E0E  6E37               	movwf	_second^0,c
  4566  001E10                     i2l2918:
  4567                           
  4568                           ;clock.c: 22:         if (state != MODE_4) display_clock(1,1);
  4569  001E10  0E04               	movlw	4
  4570  001E12  180F               	xorwf	clock_count@state^0,w,c
  4571  001E14  1010               	iorwf	(clock_count@state+1)^0,w,c
  4572  001E16  B4D8               	btfsc	status,2,c
  4573  001E18  EF10  F00F         	goto	i2u158_41
  4574  001E1C  EF12  F00F         	goto	i2u158_40
  4575  001E20                     i2u158_41:
  4576  001E20  EF1C  F00F         	goto	i2l2922
  4577  001E24                     i2u158_40:
  4578  001E24  0E00               	movlw	0
  4579  001E26  6E0A               	movwf	(display_clock@variable_display+1)^0,c
  4580  001E28  0E01               	movlw	1
  4581  001E2A  6E09               	movwf	display_clock@variable_display^0,c
  4582  001E2C  0E00               	movlw	0
  4583  001E2E  6E0C               	movwf	(display_clock@clock1_stopwatch2+1)^0,c
  4584  001E30  0E01               	movlw	1
  4585  001E32  6E0B               	movwf	display_clock@clock1_stopwatch2^0,c
  4586  001E34  EC81  F00B         	call	_display_clock	;wreg free
  4587  001E38                     i2l2922:
  4588                           
  4589                           ;clock.c: 24:     if (minute_flag == 1){
  4590  001E38  0426               	decf	_minute_flag^0,w,c
  4591  001E3A  A4D8               	btfss	status,2,c
  4592  001E3C  EF22  F00F         	goto	i2u159_41
  4593  001E40  EF24  F00F         	goto	i2u159_40
  4594  001E44                     i2u159_41:
  4595  001E44  EF52  F00F         	goto	i2l2936
  4596  001E48                     i2u159_40:
  4597  001E48                     
  4598                           ;clock.c: 25:         minute_flag = 0;
  4599  001E48  0E00               	movlw	0
  4600  001E4A  6E26               	movwf	_minute_flag^0,c
  4601  001E4C                     
  4602                           ;clock.c: 26:         minute = minute+1;
  4603  001E4C  2836               	incf	_minute^0,w,c
  4604  001E4E  6E36               	movwf	_minute^0,c
  4605  001E50                     
  4606                           ;clock.c: 27:         hour_flag = minute == 60? 1:0;
  4607  001E50  0E3C               	movlw	60
  4608  001E52  1836               	xorwf	_minute^0,w,c
  4609  001E54  B4D8               	btfsc	status,2,c
  4610  001E56  EF2F  F00F         	goto	i2u160_41
  4611  001E5A  EF32  F00F         	goto	i2u160_40
  4612  001E5E                     i2u160_41:
  4613  001E5E  0E01               	movlw	1
  4614  001E60  EF33  F00F         	goto	i2u161_40
  4615  001E64                     i2u160_40:
  4616  001E64  0E00               	movlw	0
  4617  001E66                     i2u161_40:
  4618  001E66  6E25               	movwf	_hour_flag^0,c
  4619                           
  4620                           ;clock.c: 28:         if (hour_flag) minute = 0;
  4621  001E68  5025               	movf	_hour_flag^0,w,c
  4622  001E6A  B4D8               	btfsc	status,2,c
  4623  001E6C  EF3A  F00F         	goto	i2u162_41
  4624  001E70  EF3C  F00F         	goto	i2u162_40
  4625  001E74                     i2u162_41:
  4626  001E74  EF3E  F00F         	goto	i2l2932
  4627  001E78                     i2u162_40:
  4628  001E78  0E00               	movlw	0
  4629  001E7A  6E36               	movwf	_minute^0,c
  4630  001E7C                     i2l2932:
  4631                           
  4632                           ;clock.c: 29:         if (state != MODE_4)display_clock(2,1);
  4633  001E7C  0E04               	movlw	4
  4634  001E7E  180F               	xorwf	clock_count@state^0,w,c
  4635  001E80  1010               	iorwf	(clock_count@state+1)^0,w,c
  4636  001E82  B4D8               	btfsc	status,2,c
  4637  001E84  EF46  F00F         	goto	i2u163_41
  4638  001E88  EF48  F00F         	goto	i2u163_40
  4639  001E8C                     i2u163_41:
  4640  001E8C  EF52  F00F         	goto	i2l2936
  4641  001E90                     i2u163_40:
  4642  001E90  0E00               	movlw	0
  4643  001E92  6E0A               	movwf	(display_clock@variable_display+1)^0,c
  4644  001E94  0E02               	movlw	2
  4645  001E96  6E09               	movwf	display_clock@variable_display^0,c
  4646  001E98  0E00               	movlw	0
  4647  001E9A  6E0C               	movwf	(display_clock@clock1_stopwatch2+1)^0,c
  4648  001E9C  0E01               	movlw	1
  4649  001E9E  6E0B               	movwf	display_clock@clock1_stopwatch2^0,c
  4650  001EA0  EC81  F00B         	call	_display_clock	;wreg free
  4651  001EA4                     i2l2936:
  4652                           
  4653                           ;clock.c: 31:     if (hour_flag == 1){
  4654  001EA4  0425               	decf	_hour_flag^0,w,c
  4655  001EA6  A4D8               	btfss	status,2,c
  4656  001EA8  EF58  F00F         	goto	i2u164_41
  4657  001EAC  EF5A  F00F         	goto	i2u164_40
  4658  001EB0                     i2u164_41:
  4659  001EB0  EF7E  F00F         	goto	i2l268
  4660  001EB4                     i2u164_40:
  4661  001EB4                     
  4662                           ;clock.c: 32:         hour_flag = 0;
  4663  001EB4  0E00               	movlw	0
  4664  001EB6  6E25               	movwf	_hour_flag^0,c
  4665  001EB8                     
  4666                           ;clock.c: 33:         hour = (hour + 1)%24;
  4667  001EB8  0E01               	movlw	1
  4668  001EBA  2435               	addwf	_hour^0,w,c
  4669  001EBC  6E01               	movwf	i2___awmod@dividend^0,c
  4670  001EBE  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4671  001EC0  0E00               	movlw	0
  4672  001EC2  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
  4673  001EC4  0E00               	movlw	0
  4674  001EC6  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4675  001EC8  0E18               	movlw	24
  4676  001ECA  6E03               	movwf	i2___awmod@divisor^0,c
  4677  001ECC  EC97  F011         	call	i2___awmod	;wreg free
  4678  001ED0  5001               	movf	?i2___awmod^0,w,c
  4679  001ED2  6E35               	movwf	_hour^0,c
  4680  001ED4                     
  4681                           ;clock.c: 34:         if (state != MODE_4) display_clock(3,1);
  4682  001ED4  0E04               	movlw	4
  4683  001ED6  180F               	xorwf	clock_count@state^0,w,c
  4684  001ED8  1010               	iorwf	(clock_count@state+1)^0,w,c
  4685  001EDA  B4D8               	btfsc	status,2,c
  4686  001EDC  EF72  F00F         	goto	i2u165_41
  4687  001EE0  EF74  F00F         	goto	i2u165_40
  4688  001EE4                     i2u165_41:
  4689  001EE4  EF7E  F00F         	goto	i2l268
  4690  001EE8                     i2u165_40:
  4691  001EE8  0E00               	movlw	0
  4692  001EEA  6E0A               	movwf	(display_clock@variable_display+1)^0,c
  4693  001EEC  0E03               	movlw	3
  4694  001EEE  6E09               	movwf	display_clock@variable_display^0,c
  4695  001EF0  0E00               	movlw	0
  4696  001EF2  6E0C               	movwf	(display_clock@clock1_stopwatch2+1)^0,c
  4697  001EF4  0E01               	movlw	1
  4698  001EF6  6E0B               	movwf	display_clock@clock1_stopwatch2^0,c
  4699  001EF8  EC81  F00B         	call	_display_clock	;wreg free
  4700  001EFC                     i2l268:
  4701  001EFC  0012               	return		;funcret
  4702  001EFE                     __end_of_clock_count:
  4703                           	opt callstack 0
  4704                           
  4705 ;; *************** function _display_clock *****************
  4706 ;; Defined at:
  4707 ;;		line 93 in file "display.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  variable_dis    2    8[COMRAM] int 
  4710 ;;  clock1_stopw    2   10[COMRAM] int 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0, cstack
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;Total ram usage:        6 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    3
  4729 ;; This function calls:
  4730 ;;		i2_LCDPutChar
  4731 ;;		i2_LCDPutInst
  4732 ;;		i2___awdiv
  4733 ;;		i2___awmod
  4734 ;; This function is called by:
  4735 ;;		_clock_count
  4736 ;;		_stop_watch_count
  4737 ;;		_display_change_state
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text27
  4742  001702                     __ptext27:
  4743                           	opt callstack 0
  4744  001702                     _display_clock:
  4745                           	opt callstack 19
  4746  001702                     
  4747                           ;display.c: 94:     switch(clock1_stopwatch2){
  4748  001702  EF71  F00C         	goto	i2l2690
  4749  001706                     i2l2668:
  4750                           
  4751                           ;display.c: 98:                     LCDPutInst(0xCA);
  4752  001706  0ECA               	movlw	202
  4753  001708  EC4D  F013         	call	i2_LCDPutInst
  4754                           
  4755                           ;display.c: 99:                     LCDPutChar(second/10 + 48);
  4756  00170C  C037  F001         	movff	_second,i2___awdiv@dividend
  4757  001710  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  4758  001712  0E00               	movlw	0
  4759  001714  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4760  001716  0E0A               	movlw	10
  4761  001718  6E03               	movwf	i2___awdiv@divisor^0,c
  4762  00171A  ECDD  F010         	call	i2___awdiv	;wreg free
  4763  00171E  5001               	movf	?i2___awdiv^0,w,c
  4764  001720  0F30               	addlw	48
  4765  001722  EC73  F013         	call	i2_LCDPutChar
  4766                           
  4767                           ;display.c: 100:                     LCDPutChar(second%10 + 48);
  4768  001726  C037  F001         	movff	_second,i2___awmod@dividend
  4769  00172A  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4770  00172C  0E00               	movlw	0
  4771  00172E  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4772  001730  0E0A               	movlw	10
  4773  001732  6E03               	movwf	i2___awmod@divisor^0,c
  4774  001734  EC97  F011         	call	i2___awmod	;wreg free
  4775  001738  5001               	movf	?i2___awmod^0,w,c
  4776  00173A  0F30               	addlw	48
  4777  00173C  EC73  F013         	call	i2_LCDPutChar
  4778                           
  4779                           ;display.c: 101:                     break;
  4780  001740  EF87  F00C         	goto	i2l495
  4781  001744                     i2l2670:
  4782                           
  4783                           ;display.c: 103:                     LCDPutInst(0xC7);
  4784  001744  0EC7               	movlw	199
  4785  001746  EC4D  F013         	call	i2_LCDPutInst
  4786                           
  4787                           ;display.c: 104:                     LCDPutChar(minute/10 + 48);
  4788  00174A  C036  F001         	movff	_minute,i2___awdiv@dividend
  4789  00174E  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  4790  001750  0E00               	movlw	0
  4791  001752  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4792  001754  0E0A               	movlw	10
  4793  001756  6E03               	movwf	i2___awdiv@divisor^0,c
  4794  001758  ECDD  F010         	call	i2___awdiv	;wreg free
  4795  00175C  5001               	movf	?i2___awdiv^0,w,c
  4796  00175E  0F30               	addlw	48
  4797  001760  EC73  F013         	call	i2_LCDPutChar
  4798                           
  4799                           ;display.c: 105:                     LCDPutChar(minute%10 + 48);
  4800  001764  C036  F001         	movff	_minute,i2___awmod@dividend
  4801  001768  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4802  00176A  0E00               	movlw	0
  4803  00176C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4804  00176E  0E0A               	movlw	10
  4805  001770  6E03               	movwf	i2___awmod@divisor^0,c
  4806  001772  EC97  F011         	call	i2___awmod	;wreg free
  4807  001776  5001               	movf	?i2___awmod^0,w,c
  4808  001778  0F30               	addlw	48
  4809  00177A  EC73  F013         	call	i2_LCDPutChar
  4810                           
  4811                           ;display.c: 106:                     break;
  4812  00177E  EF87  F00C         	goto	i2l495
  4813  001782                     i2l2672:
  4814                           
  4815                           ;display.c: 108:                     LCDPutInst(0xC4);
  4816  001782  0EC4               	movlw	196
  4817  001784  EC4D  F013         	call	i2_LCDPutInst
  4818                           
  4819                           ;display.c: 109:                     LCDPutChar(hour/10 + 48);
  4820  001788  C035  F001         	movff	_hour,i2___awdiv@dividend
  4821  00178C  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  4822  00178E  0E00               	movlw	0
  4823  001790  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4824  001792  0E0A               	movlw	10
  4825  001794  6E03               	movwf	i2___awdiv@divisor^0,c
  4826  001796  ECDD  F010         	call	i2___awdiv	;wreg free
  4827  00179A  5001               	movf	?i2___awdiv^0,w,c
  4828  00179C  0F30               	addlw	48
  4829  00179E  EC73  F013         	call	i2_LCDPutChar
  4830                           
  4831                           ;display.c: 110:                     LCDPutChar(hour%10 + 48);
  4832  0017A2  C035  F001         	movff	_hour,i2___awmod@dividend
  4833  0017A6  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4834  0017A8  0E00               	movlw	0
  4835  0017AA  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4836  0017AC  0E0A               	movlw	10
  4837  0017AE  6E03               	movwf	i2___awmod@divisor^0,c
  4838  0017B0  EC97  F011         	call	i2___awmod	;wreg free
  4839  0017B4  5001               	movf	?i2___awmod^0,w,c
  4840  0017B6  0F30               	addlw	48
  4841  0017B8  EC73  F013         	call	i2_LCDPutChar
  4842                           
  4843                           ;display.c: 111:                     break;
  4844  0017BC  EF87  F00C         	goto	i2l495
  4845  0017C0                     i2l2676:
  4846  0017C0  C009  F00D         	movff	display_clock@variable_display,??_display_clock
  4847  0017C4  C00A  F00E         	movff	display_clock@variable_display+1,??_display_clock+1
  4848                           
  4849                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4850                           ; Switch size 1, requested type "simple"
  4851                           ; Number of cases is 1, Range of values is 0 to 0
  4852                           ; switch strategies available:
  4853                           ; Name         Instructions Cycles
  4854                           ; simple_byte            4     3 (average)
  4855                           ;	Chosen strategy is simple_byte
  4856  0017C8  500E               	movf	(??_display_clock+1)^0,w,c
  4857  0017CA  0A00               	xorlw	0	; case 0
  4858  0017CC  B4D8               	btfsc	status,2,c
  4859  0017CE  EFEB  F00B         	goto	i2l3272
  4860  0017D2  EF87  F00C         	goto	i2l495
  4861  0017D6                     i2l3272:
  4862                           
  4863                           ; Switch size 1, requested type "simple"
  4864                           ; Number of cases is 3, Range of values is 1 to 3
  4865                           ; switch strategies available:
  4866                           ; Name         Instructions Cycles
  4867                           ; simple_byte           10     6 (average)
  4868                           ;	Chosen strategy is simple_byte
  4869  0017D6  500D               	movf	??_display_clock^0,w,c
  4870  0017D8  0A01               	xorlw	1	; case 1
  4871  0017DA  B4D8               	btfsc	status,2,c
  4872  0017DC  EF83  F00B         	goto	i2l2668
  4873  0017E0  0A03               	xorlw	3	; case 2
  4874  0017E2  B4D8               	btfsc	status,2,c
  4875  0017E4  EFA2  F00B         	goto	i2l2670
  4876  0017E8  0A01               	xorlw	1	; case 3
  4877  0017EA  B4D8               	btfsc	status,2,c
  4878  0017EC  EFC1  F00B         	goto	i2l2672
  4879  0017F0  EF87  F00C         	goto	i2l495
  4880  0017F4                     i2l2678:
  4881                           
  4882                           ;display.c: 117:                     LCDPutInst(0xCA);
  4883  0017F4  0ECA               	movlw	202
  4884  0017F6  EC4D  F013         	call	i2_LCDPutInst
  4885                           
  4886                           ;display.c: 118:                     LCDPutChar(millis_10_stop/10 + 48);
  4887  0017FA  C033  F001         	movff	_millis_10_stop,i2___awdiv@dividend
  4888  0017FE  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  4889  001800  0E00               	movlw	0
  4890  001802  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4891  001804  0E0A               	movlw	10
  4892  001806  6E03               	movwf	i2___awdiv@divisor^0,c
  4893  001808  ECDD  F010         	call	i2___awdiv	;wreg free
  4894  00180C  5001               	movf	?i2___awdiv^0,w,c
  4895  00180E  0F30               	addlw	48
  4896  001810  EC73  F013         	call	i2_LCDPutChar
  4897                           
  4898                           ;display.c: 119:                     LCDPutChar(millis_10_stop%10 + 48);
  4899  001814  C033  F001         	movff	_millis_10_stop,i2___awmod@dividend
  4900  001818  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4901  00181A  0E00               	movlw	0
  4902  00181C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4903  00181E  0E0A               	movlw	10
  4904  001820  6E03               	movwf	i2___awmod@divisor^0,c
  4905  001822  EC97  F011         	call	i2___awmod	;wreg free
  4906  001826  5001               	movf	?i2___awmod^0,w,c
  4907  001828  0F30               	addlw	48
  4908  00182A  EC73  F013         	call	i2_LCDPutChar
  4909                           
  4910                           ;display.c: 120:                     break;
  4911  00182E  EF87  F00C         	goto	i2l495
  4912  001832                     i2l2680:
  4913                           
  4914                           ;display.c: 122:                     LCDPutInst(0xC7);
  4915  001832  0EC7               	movlw	199
  4916  001834  EC4D  F013         	call	i2_LCDPutInst
  4917                           
  4918                           ;display.c: 123:                     LCDPutChar(second_stop/10 + 48);
  4919  001838  C032  F001         	movff	_second_stop,i2___awdiv@dividend
  4920  00183C  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  4921  00183E  0E00               	movlw	0
  4922  001840  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4923  001842  0E0A               	movlw	10
  4924  001844  6E03               	movwf	i2___awdiv@divisor^0,c
  4925  001846  ECDD  F010         	call	i2___awdiv	;wreg free
  4926  00184A  5001               	movf	?i2___awdiv^0,w,c
  4927  00184C  0F30               	addlw	48
  4928  00184E  EC73  F013         	call	i2_LCDPutChar
  4929                           
  4930                           ;display.c: 124:                     LCDPutChar(second_stop%10 + 48);
  4931  001852  C032  F001         	movff	_second_stop,i2___awmod@dividend
  4932  001856  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4933  001858  0E00               	movlw	0
  4934  00185A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4935  00185C  0E0A               	movlw	10
  4936  00185E  6E03               	movwf	i2___awmod@divisor^0,c
  4937  001860  EC97  F011         	call	i2___awmod	;wreg free
  4938  001864  5001               	movf	?i2___awmod^0,w,c
  4939  001866  0F30               	addlw	48
  4940  001868  EC73  F013         	call	i2_LCDPutChar
  4941                           
  4942                           ;display.c: 125:                     break;
  4943  00186C  EF87  F00C         	goto	i2l495
  4944  001870                     i2l2682:
  4945                           
  4946                           ;display.c: 127:                     LCDPutInst(0xC4);
  4947  001870  0EC4               	movlw	196
  4948  001872  EC4D  F013         	call	i2_LCDPutInst
  4949                           
  4950                           ;display.c: 128:                     LCDPutChar(minute_stop/10 + 48);
  4951  001876  C031  F001         	movff	_minute_stop,i2___awdiv@dividend
  4952  00187A  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  4953  00187C  0E00               	movlw	0
  4954  00187E  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4955  001880  0E0A               	movlw	10
  4956  001882  6E03               	movwf	i2___awdiv@divisor^0,c
  4957  001884  ECDD  F010         	call	i2___awdiv	;wreg free
  4958  001888  5001               	movf	?i2___awdiv^0,w,c
  4959  00188A  0F30               	addlw	48
  4960  00188C  EC73  F013         	call	i2_LCDPutChar
  4961                           
  4962                           ;display.c: 129:                     LCDPutChar(minute_stop%10 + 48);
  4963  001890  C031  F001         	movff	_minute_stop,i2___awmod@dividend
  4964  001894  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4965  001896  0E00               	movlw	0
  4966  001898  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4967  00189A  0E0A               	movlw	10
  4968  00189C  6E03               	movwf	i2___awmod@divisor^0,c
  4969  00189E  EC97  F011         	call	i2___awmod	;wreg free
  4970  0018A2  5001               	movf	?i2___awmod^0,w,c
  4971  0018A4  0F30               	addlw	48
  4972  0018A6  EC73  F013         	call	i2_LCDPutChar
  4973                           
  4974                           ;display.c: 130:                     break;
  4975  0018AA  EF87  F00C         	goto	i2l495
  4976  0018AE                     i2l2686:
  4977  0018AE  C009  F00D         	movff	display_clock@variable_display,??_display_clock
  4978  0018B2  C00A  F00E         	movff	display_clock@variable_display+1,??_display_clock+1
  4979                           
  4980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4981                           ; Switch size 1, requested type "simple"
  4982                           ; Number of cases is 1, Range of values is 0 to 0
  4983                           ; switch strategies available:
  4984                           ; Name         Instructions Cycles
  4985                           ; simple_byte            4     3 (average)
  4986                           ;	Chosen strategy is simple_byte
  4987  0018B6  500E               	movf	(??_display_clock+1)^0,w,c
  4988  0018B8  0A00               	xorlw	0	; case 0
  4989  0018BA  B4D8               	btfsc	status,2,c
  4990  0018BC  EF62  F00C         	goto	i2l3274
  4991  0018C0  EF87  F00C         	goto	i2l495
  4992  0018C4                     i2l3274:
  4993                           
  4994                           ; Switch size 1, requested type "simple"
  4995                           ; Number of cases is 3, Range of values is 1 to 3
  4996                           ; switch strategies available:
  4997                           ; Name         Instructions Cycles
  4998                           ; simple_byte           10     6 (average)
  4999                           ;	Chosen strategy is simple_byte
  5000  0018C4  500D               	movf	??_display_clock^0,w,c
  5001  0018C6  0A01               	xorlw	1	; case 1
  5002  0018C8  B4D8               	btfsc	status,2,c
  5003  0018CA  EFFA  F00B         	goto	i2l2678
  5004  0018CE  0A03               	xorlw	3	; case 2
  5005  0018D0  B4D8               	btfsc	status,2,c
  5006  0018D2  EF19  F00C         	goto	i2l2680
  5007  0018D6  0A01               	xorlw	1	; case 3
  5008  0018D8  B4D8               	btfsc	status,2,c
  5009  0018DA  EF38  F00C         	goto	i2l2682
  5010  0018DE  EF87  F00C         	goto	i2l495
  5011  0018E2                     i2l2690:
  5012  0018E2  C00B  F00D         	movff	display_clock@clock1_stopwatch2,??_display_clock
  5013  0018E6  C00C  F00E         	movff	display_clock@clock1_stopwatch2+1,??_display_clock+1
  5014                           
  5015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5016                           ; Switch size 1, requested type "simple"
  5017                           ; Number of cases is 1, Range of values is 0 to 0
  5018                           ; switch strategies available:
  5019                           ; Name         Instructions Cycles
  5020                           ; simple_byte            4     3 (average)
  5021                           ;	Chosen strategy is simple_byte
  5022  0018EA  500E               	movf	(??_display_clock+1)^0,w,c
  5023  0018EC  0A00               	xorlw	0	; case 0
  5024  0018EE  B4D8               	btfsc	status,2,c
  5025  0018F0  EF7C  F00C         	goto	i2l3276
  5026  0018F4  EF87  F00C         	goto	i2l495
  5027  0018F8                     i2l3276:
  5028                           
  5029                           ; Switch size 1, requested type "simple"
  5030                           ; Number of cases is 2, Range of values is 1 to 2
  5031                           ; switch strategies available:
  5032                           ; Name         Instructions Cycles
  5033                           ; simple_byte            7     4 (average)
  5034                           ;	Chosen strategy is simple_byte
  5035  0018F8  500D               	movf	??_display_clock^0,w,c
  5036  0018FA  0A01               	xorlw	1	; case 1
  5037  0018FC  B4D8               	btfsc	status,2,c
  5038  0018FE  EFE0  F00B         	goto	i2l2676
  5039  001902  0A03               	xorlw	3	; case 2
  5040  001904  B4D8               	btfsc	status,2,c
  5041  001906  EF57  F00C         	goto	i2l2686
  5042  00190A  EF87  F00C         	goto	i2l495
  5043  00190E                     i2l495:
  5044  00190E  0012               	return		;funcret
  5045  001910                     __end_of_display_clock:
  5046                           	opt callstack 0
  5047                           
  5048 ;; *************** function i2___awmod *****************
  5049 ;; Defined at:
  5050 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  dividend        2    0[COMRAM] int 
  5053 ;;  divisor         2    2[COMRAM] int 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  __awmod         1    5[COMRAM] unsigned char 
  5056 ;;  __awmod         1    4[COMRAM] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  2    0[COMRAM] int 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:        6 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_clock_count
  5076 ;;		_blink
  5077 ;;		_display_clock
  5078 ;;		i2_initial_display
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           	psect	text28
  5083  00232E                     __ptext28:
  5084                           	opt callstack 0
  5085  00232E                     i2___awmod:
  5086                           	opt callstack 21
  5087  00232E  0E00               	movlw	0
  5088  002330  6E06               	movwf	i2___awmod@sign^0,c
  5089  002332  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  5090  002334  EFA0  F011         	goto	i2u129_40
  5091  002338  EF9E  F011         	goto	i2u129_41
  5092  00233C                     i2u129_41:
  5093  00233C  EFA6  F011         	goto	i2l2560
  5094  002340                     i2u129_40:
  5095  002340  6C01               	negf	i2___awmod@dividend^0,c
  5096  002342  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5097  002344  B0D8               	btfsc	status,0,c
  5098  002346  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5099  002348  0E01               	movlw	1
  5100  00234A  6E06               	movwf	i2___awmod@sign^0,c
  5101  00234C                     i2l2560:
  5102  00234C  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  5103  00234E  EFAD  F011         	goto	i2u130_40
  5104  002352  EFAB  F011         	goto	i2u130_41
  5105  002356                     i2u130_41:
  5106  002356  EFB1  F011         	goto	i2l2564
  5107  00235A                     i2u130_40:
  5108  00235A  6C03               	negf	i2___awmod@divisor^0,c
  5109  00235C  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  5110  00235E  B0D8               	btfsc	status,0,c
  5111  002360  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  5112  002362                     i2l2564:
  5113  002362  5003               	movf	i2___awmod@divisor^0,w,c
  5114  002364  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  5115  002366  B4D8               	btfsc	status,2,c
  5116  002368  EFB8  F011         	goto	i2u131_41
  5117  00236C  EFBA  F011         	goto	i2u131_40
  5118  002370                     i2u131_41:
  5119  002370  EFDE  F011         	goto	i2l2580
  5120  002374                     i2u131_40:
  5121  002374  0E01               	movlw	1
  5122  002376  6E05               	movwf	i2___awmod@counter^0,c
  5123  002378  EFC2  F011         	goto	i2l2570
  5124  00237C                     i2l2568:
  5125  00237C  90D8               	bcf	status,0,c
  5126  00237E  3603               	rlcf	i2___awmod@divisor^0,f,c
  5127  002380  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  5128  002382  2A05               	incf	i2___awmod@counter^0,f,c
  5129  002384                     i2l2570:
  5130  002384  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5131  002386  EFC7  F011         	goto	i2u132_41
  5132  00238A  EFC9  F011         	goto	i2u132_40
  5133  00238E                     i2u132_41:
  5134  00238E  EFBE  F011         	goto	i2l2568
  5135  002392                     i2u132_40:
  5136  002392                     i2l2572:
  5137  002392  5003               	movf	i2___awmod@divisor^0,w,c
  5138  002394  5C01               	subwf	i2___awmod@dividend^0,w,c
  5139  002396  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5140  002398  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  5141  00239A  A0D8               	btfss	status,0,c
  5142  00239C  EFD2  F011         	goto	i2u133_41
  5143  0023A0  EFD4  F011         	goto	i2u133_40
  5144  0023A4                     i2u133_41:
  5145  0023A4  EFD8  F011         	goto	i2l2576
  5146  0023A8                     i2u133_40:
  5147  0023A8  5003               	movf	i2___awmod@divisor^0,w,c
  5148  0023AA  5E01               	subwf	i2___awmod@dividend^0,f,c
  5149  0023AC  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5150  0023AE  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  5151  0023B0                     i2l2576:
  5152  0023B0  90D8               	bcf	status,0,c
  5153  0023B2  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  5154  0023B4  3203               	rrcf	i2___awmod@divisor^0,f,c
  5155  0023B6  2E05               	decfsz	i2___awmod@counter^0,f,c
  5156  0023B8  EFC9  F011         	goto	i2l2572
  5157  0023BC                     i2l2580:
  5158  0023BC  5006               	movf	i2___awmod@sign^0,w,c
  5159  0023BE  B4D8               	btfsc	status,2,c
  5160  0023C0  EFE4  F011         	goto	i2u134_41
  5161  0023C4  EFE6  F011         	goto	i2u134_40
  5162  0023C8                     i2u134_41:
  5163  0023C8  EFEA  F011         	goto	i2l2584
  5164  0023CC                     i2u134_40:
  5165  0023CC  6C01               	negf	i2___awmod@dividend^0,c
  5166  0023CE  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5167  0023D0  B0D8               	btfsc	status,0,c
  5168  0023D2  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5169  0023D4                     i2l2584:
  5170  0023D4  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  5171  0023D8  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  5172  0023DC  0012               	return		;funcret
  5173  0023DE                     __end_ofi2___awmod:
  5174                           	opt callstack 0
  5175                           
  5176 ;; *************** function i2___awdiv *****************
  5177 ;; Defined at:
  5178 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  dividend        2    0[COMRAM] int 
  5181 ;;  divisor         2    2[COMRAM] int 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  __awdiv         2    6[COMRAM] int 
  5184 ;;  __awdiv         1    5[COMRAM] unsigned char 
  5185 ;;  __awdiv         1    4[COMRAM] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  2    0[COMRAM] int 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5195 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;Total ram usage:        8 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_blink
  5205 ;;		_display_clock
  5206 ;;		i2_initial_display
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text29
  5211  0021BA                     __ptext29:
  5212                           	opt callstack 0
  5213  0021BA                     i2___awdiv:
  5214                           	opt callstack 21
  5215  0021BA  0E00               	movlw	0
  5216  0021BC  6E06               	movwf	i2___awdiv@sign^0,c
  5217  0021BE  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  5218  0021C0  EFE6  F010         	goto	i2u123_40
  5219  0021C4  EFE4  F010         	goto	i2u123_41
  5220  0021C8                     i2u123_41:
  5221  0021C8  EFEC  F010         	goto	i2l2516
  5222  0021CC                     i2u123_40:
  5223  0021CC  6C03               	negf	i2___awdiv@divisor^0,c
  5224  0021CE  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  5225  0021D0  B0D8               	btfsc	status,0,c
  5226  0021D2  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  5227  0021D4  0E01               	movlw	1
  5228  0021D6  6E06               	movwf	i2___awdiv@sign^0,c
  5229  0021D8                     i2l2516:
  5230  0021D8  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  5231  0021DA  EFF3  F010         	goto	i2u124_40
  5232  0021DE  EFF1  F010         	goto	i2u124_41
  5233  0021E2                     i2u124_41:
  5234  0021E2  EFF9  F010         	goto	i2l2522
  5235  0021E6                     i2u124_40:
  5236  0021E6  6C01               	negf	i2___awdiv@dividend^0,c
  5237  0021E8  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  5238  0021EA  B0D8               	btfsc	status,0,c
  5239  0021EC  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  5240  0021EE  0E01               	movlw	1
  5241  0021F0  1A06               	xorwf	i2___awdiv@sign^0,f,c
  5242  0021F2                     i2l2522:
  5243  0021F2  0E00               	movlw	0
  5244  0021F4  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  5245  0021F6  0E00               	movlw	0
  5246  0021F8  6E07               	movwf	i2___awdiv@quotient^0,c
  5247  0021FA  5003               	movf	i2___awdiv@divisor^0,w,c
  5248  0021FC  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  5249  0021FE  B4D8               	btfsc	status,2,c
  5250  002200  EF04  F011         	goto	i2u125_41
  5251  002204  EF06  F011         	goto	i2u125_40
  5252  002208                     i2u125_41:
  5253  002208  EF2E  F011         	goto	i2l2544
  5254  00220C                     i2u125_40:
  5255  00220C  0E01               	movlw	1
  5256  00220E  6E05               	movwf	i2___awdiv@counter^0,c
  5257  002210  EF0E  F011         	goto	i2l2530
  5258  002214                     i2l2528:
  5259  002214  90D8               	bcf	status,0,c
  5260  002216  3603               	rlcf	i2___awdiv@divisor^0,f,c
  5261  002218  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  5262  00221A  2A05               	incf	i2___awdiv@counter^0,f,c
  5263  00221C                     i2l2530:
  5264  00221C  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  5265  00221E  EF13  F011         	goto	i2u126_41
  5266  002222  EF15  F011         	goto	i2u126_40
  5267  002226                     i2u126_41:
  5268  002226  EF0A  F011         	goto	i2l2528
  5269  00222A                     i2u126_40:
  5270  00222A                     i2l2532:
  5271  00222A  90D8               	bcf	status,0,c
  5272  00222C  3607               	rlcf	i2___awdiv@quotient^0,f,c
  5273  00222E  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  5274  002230  5003               	movf	i2___awdiv@divisor^0,w,c
  5275  002232  5C01               	subwf	i2___awdiv@dividend^0,w,c
  5276  002234  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  5277  002236  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  5278  002238  A0D8               	btfss	status,0,c
  5279  00223A  EF21  F011         	goto	i2u127_41
  5280  00223E  EF23  F011         	goto	i2u127_40
  5281  002242                     i2u127_41:
  5282  002242  EF28  F011         	goto	i2l2540
  5283  002246                     i2u127_40:
  5284  002246  5003               	movf	i2___awdiv@divisor^0,w,c
  5285  002248  5E01               	subwf	i2___awdiv@dividend^0,f,c
  5286  00224A  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  5287  00224C  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  5288  00224E  8007               	bsf	i2___awdiv@quotient^0,0,c
  5289  002250                     i2l2540:
  5290  002250  90D8               	bcf	status,0,c
  5291  002252  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  5292  002254  3203               	rrcf	i2___awdiv@divisor^0,f,c
  5293  002256  2E05               	decfsz	i2___awdiv@counter^0,f,c
  5294  002258  EF15  F011         	goto	i2l2532
  5295  00225C                     i2l2544:
  5296  00225C  5006               	movf	i2___awdiv@sign^0,w,c
  5297  00225E  B4D8               	btfsc	status,2,c
  5298  002260  EF34  F011         	goto	i2u128_41
  5299  002264  EF36  F011         	goto	i2u128_40
  5300  002268                     i2u128_41:
  5301  002268  EF3A  F011         	goto	i2l2548
  5302  00226C                     i2u128_40:
  5303  00226C  6C07               	negf	i2___awdiv@quotient^0,c
  5304  00226E  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  5305  002270  B0D8               	btfsc	status,0,c
  5306  002272  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  5307  002274                     i2l2548:
  5308  002274  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  5309  002278  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  5310  00227C  0012               	return		;funcret
  5311  00227E                     __end_ofi2___awdiv:
  5312                           	opt callstack 0
  5313                           
  5314 ;; *************** function i2_LCDPutInst *****************
  5315 ;; Defined at:
  5316 ;;		line 180 in file "BBSPI_LCD.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  ch              1    wreg     unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  ch              1    5[COMRAM] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;Total ram usage:        1 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    2
  5337 ;; This function calls:
  5338 ;;		i2_WritePort_BBSPI
  5339 ;; This function is called by:
  5340 ;;		_blink
  5341 ;;		_display_clock
  5342 ;;		i2_LCDInit
  5343 ;;		i2_initial_display
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text30
  5348  00269A                     __ptext30:
  5349                           	opt callstack 0
  5350  00269A                     i2_LCDPutInst:
  5351                           	opt callstack 19
  5352                           
  5353                           ;incstack = 0
  5354                           ;i2LCDPutInst@ch stored from wreg
  5355  00269A  6E06               	movwf	i2LCDPutInst@ch^0,c
  5356  00269C                     
  5357                           ;BBSPI_LCD.c: 180: void LCDPutInst (unsigned char ch);BBSPI_LCD.c: 181: {;BBSPI_LCD.c: 1
      +                          82:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  5358  00269C  0E21               	movlw	33
  5359  00269E                     i2u220_47:
  5360  00269E  2EE8               	decfsz	wreg,f,c
  5361  0026A0  D7FE               	bra	i2u220_47
  5362  0026A2  F000               	nop	
  5363  0026A4                     
  5364                           ;BBSPI_LCD.c: 183:     WritePort_BBSPI (0x12, 0x00);
  5365  0026A4  0E00               	movlw	0
  5366  0026A6  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  5367  0026A8  0E12               	movlw	18
  5368  0026AA  EC4C  F014         	call	i2_WritePort_BBSPI
  5369  0026AE                     
  5370                           ;BBSPI_LCD.c: 184:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  5371  0026AE  0E06               	movlw	6
  5372  0026B0                     i2u221_47:
  5373  0026B0  2EE8               	decfsz	wreg,f,c
  5374  0026B2  D7FE               	bra	i2u221_47
  5375  0026B4  D000               	nop2	
  5376  0026B6                     
  5377                           ;BBSPI_LCD.c: 185:     WritePort_BBSPI (0x13, ch);
  5378  0026B6  C006  F004         	movff	i2LCDPutInst@ch,i2WritePort_BBSPI@a
  5379  0026BA  0E13               	movlw	19
  5380  0026BC  EC4C  F014         	call	i2_WritePort_BBSPI
  5381  0026C0                     
  5382                           ;BBSPI_LCD.c: 186:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  5383  0026C0  0E06               	movlw	6
  5384  0026C2                     i2u222_47:
  5385  0026C2  2EE8               	decfsz	wreg,f,c
  5386  0026C4  D7FE               	bra	i2u222_47
  5387  0026C6  D000               	nop2	
  5388  0026C8                     
  5389                           ;BBSPI_LCD.c: 187:     WritePort_BBSPI (0x12,0x40);
  5390  0026C8  0E40               	movlw	64
  5391  0026CA  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  5392  0026CC  0E12               	movlw	18
  5393  0026CE  EC4C  F014         	call	i2_WritePort_BBSPI
  5394  0026D2                     
  5395                           ;BBSPI_LCD.c: 188:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  5396  0026D2  0E06               	movlw	6
  5397  0026D4                     i2u223_47:
  5398  0026D4  2EE8               	decfsz	wreg,f,c
  5399  0026D6  D7FE               	bra	i2u223_47
  5400  0026D8  D000               	nop2	
  5401  0026DA                     
  5402                           ;BBSPI_LCD.c: 189:     WritePort_BBSPI (0x12, 0x00);
  5403  0026DA  0E00               	movlw	0
  5404  0026DC  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  5405  0026DE  0E12               	movlw	18
  5406  0026E0  EC4C  F014         	call	i2_WritePort_BBSPI
  5407  0026E4  0012               	return		;funcret
  5408  0026E6                     __end_ofi2_LCDPutInst:
  5409                           	opt callstack 0
  5410                           
  5411 ;; *************** function i2_LCDPutChar *****************
  5412 ;; Defined at:
  5413 ;;		line 161 in file "BBSPI_LCD.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  ch              1    wreg     unsigned char 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  ch              1    5[COMRAM] unsigned char 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2, status,0, cstack
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;Total ram usage:        1 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    2
  5434 ;; This function calls:
  5435 ;;		i2_WritePort_BBSPI
  5436 ;; This function is called by:
  5437 ;;		_blink
  5438 ;;		_display_clock
  5439 ;;		i2_LCDPutStr
  5440 ;;		i2_initial_display
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text31
  5445  0026E6                     __ptext31:
  5446                           	opt callstack 0
  5447  0026E6                     i2_LCDPutChar:
  5448                           	opt callstack 19
  5449                           
  5450                           ;incstack = 0
  5451                           ;i2LCDPutChar@ch stored from wreg
  5452  0026E6  6E06               	movwf	i2LCDPutChar@ch^0,c
  5453  0026E8                     
  5454                           ;BBSPI_LCD.c: 161: void LCDPutChar (unsigned char ch);BBSPI_LCD.c: 162: {;BBSPI_LCD.c: 1
      +                          63:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  5455  0026E8  0E21               	movlw	33
  5456  0026EA                     i2u224_47:
  5457  0026EA  2EE8               	decfsz	wreg,f,c
  5458  0026EC  D7FE               	bra	i2u224_47
  5459  0026EE  F000               	nop	
  5460  0026F0                     
  5461                           ;BBSPI_LCD.c: 164:     WritePort_BBSPI (0x12, 0x80);
  5462  0026F0  0E80               	movlw	128
  5463  0026F2  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  5464  0026F4  0E12               	movlw	18
  5465  0026F6  EC4C  F014         	call	i2_WritePort_BBSPI
  5466  0026FA                     
  5467                           ;BBSPI_LCD.c: 165:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  5468  0026FA  0E06               	movlw	6
  5469  0026FC                     i2u225_47:
  5470  0026FC  2EE8               	decfsz	wreg,f,c
  5471  0026FE  D7FE               	bra	i2u225_47
  5472  002700  D000               	nop2	
  5473  002702                     
  5474                           ;BBSPI_LCD.c: 166:     WritePort_BBSPI (0x13, ch);
  5475  002702  C006  F004         	movff	i2LCDPutChar@ch,i2WritePort_BBSPI@a
  5476  002706  0E13               	movlw	19
  5477  002708  EC4C  F014         	call	i2_WritePort_BBSPI
  5478  00270C                     
  5479                           ;BBSPI_LCD.c: 167:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  5480  00270C  0E06               	movlw	6
  5481  00270E                     i2u226_47:
  5482  00270E  2EE8               	decfsz	wreg,f,c
  5483  002710  D7FE               	bra	i2u226_47
  5484  002712  D000               	nop2	
  5485  002714                     
  5486                           ;BBSPI_LCD.c: 168:     WritePort_BBSPI (0x12, 0xC0);
  5487  002714  0EC0               	movlw	192
  5488  002716  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  5489  002718  0E12               	movlw	18
  5490  00271A  EC4C  F014         	call	i2_WritePort_BBSPI
  5491  00271E                     
  5492                           ;BBSPI_LCD.c: 169:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  5493  00271E  0E06               	movlw	6
  5494  002720                     i2u227_47:
  5495  002720  2EE8               	decfsz	wreg,f,c
  5496  002722  D7FE               	bra	i2u227_47
  5497  002724  D000               	nop2	
  5498  002726                     
  5499                           ;BBSPI_LCD.c: 170:     WritePort_BBSPI (0x12, 0x00);
  5500  002726  0E00               	movlw	0
  5501  002728  6E04               	movwf	i2WritePort_BBSPI@a^0,c
  5502  00272A  0E12               	movlw	18
  5503  00272C  EC4C  F014         	call	i2_WritePort_BBSPI
  5504  002730  0012               	return		;funcret
  5505  002732                     __end_ofi2_LCDPutChar:
  5506                           	opt callstack 0
  5507                           
  5508 ;; *************** function i2_WritePort_BBSPI *****************
  5509 ;; Defined at:
  5510 ;;		line 145 in file "BBSPI_LCD.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  port_add        1    wreg     unsigned char 
  5513 ;;  a               1    3[COMRAM] unsigned char 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  port_add        1    4[COMRAM] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5525 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;Total ram usage:        2 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    1
  5532 ;; This function calls:
  5533 ;;		i2_SendByteBBSPI
  5534 ;; This function is called by:
  5535 ;;		i2_LCDInit
  5536 ;;		i2_LCDPutChar
  5537 ;;		i2_LCDPutInst
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text32
  5542  002898                     __ptext32:
  5543                           	opt callstack 0
  5544  002898                     i2_WritePort_BBSPI:
  5545                           	opt callstack 19
  5546                           
  5547                           ;incstack = 0
  5548                           ;i2WritePort_BBSPI@port_add stored from wreg
  5549  002898  6E05               	movwf	i2WritePort_BBSPI@port_add^0,c
  5550  00289A                     
  5551                           ;BBSPI_LCD.c: 145: void WritePort_BBSPI (unsigned char port_add, unsigned char a);BBSPI_
      +                          LCD.c: 146: {;BBSPI_LCD.c: 147:     LATAbits.LATA2 = 0;
  5552  00289A  9489               	bcf	137,2,c	;volatile
  5553  00289C                     
  5554                           ;BBSPI_LCD.c: 148:     SendByteBBSPI(0x40);
  5555  00289C  0E40               	movlw	64
  5556  00289E  EC21  F012         	call	i2_SendByteBBSPI
  5557                           
  5558                           ;BBSPI_LCD.c: 149:     SendByteBBSPI(port_add);
  5559  0028A2  5005               	movf	i2WritePort_BBSPI@port_add^0,w,c
  5560  0028A4  EC21  F012         	call	i2_SendByteBBSPI
  5561                           
  5562                           ;BBSPI_LCD.c: 150:     SendByteBBSPI(a);
  5563  0028A8  5004               	movf	i2WritePort_BBSPI@a^0,w,c
  5564  0028AA  EC21  F012         	call	i2_SendByteBBSPI
  5565  0028AE                     
  5566                           ;BBSPI_LCD.c: 151:     LATAbits.LATA2 = 1;
  5567  0028AE  8489               	bsf	137,2,c	;volatile
  5568  0028B0  0012               	return		;funcret
  5569  0028B2                     __end_ofi2_WritePort_BBSPI:
  5570                           	opt callstack 0
  5571                           
  5572 ;; *************** function i2_SendByteBBSPI *****************
  5573 ;; Defined at:
  5574 ;;		line 92 in file "BBSPI_LCD.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  output          1    wreg     unsigned char 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  output          1    0[COMRAM] unsigned char 
  5579 ;;  SendByteBBSP    1    2[COMRAM] unsigned char 
  5580 ;;  SendByteBBSP    1    1[COMRAM] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;Total ram usage:        3 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		i2_Port_BBSPIInit
  5600 ;;		i2_WritePort_BBSPI
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text33
  5605  002442                     __ptext33:
  5606                           	opt callstack 0
  5607  002442                     i2_SendByteBBSPI:
  5608                           	opt callstack 19
  5609                           
  5610                           ;incstack = 0
  5611                           ;i2SendByteBBSPI@output stored from wreg
  5612  002442  6E01               	movwf	i2SendByteBBSPI@output^0,c
  5613  002444                     
  5614                           ;BBSPI_LCD.c: 92: void SendByteBBSPI (unsigned char output);BBSPI_LCD.c: 93: {;BBSPI_LCD
      +                          .c: 94:     unsigned char bitcount;;BBSPI_LCD.c: 95:     unsigned char input = output;
  5615  002444  C001  F003         	movff	i2SendByteBBSPI@output,i2SendByteBBSPI@input
  5616  002448                     
  5617                           ;BBSPI_LCD.c: 97:     for(bitcount=0;bitcount<8;bitcount++)
  5618  002448  0E00               	movlw	0
  5619  00244A  6E02               	movwf	i2SendByteBBSPI@bitcount^0,c
  5620  00244C                     i2l173:
  5621                           
  5622                           ;BBSPI_LCD.c: 98:     {;BBSPI_LCD.c: 100:         if(output & 0x80)
  5623  00244C  AE01               	btfss	i2SendByteBBSPI@output^0,7,c
  5624  00244E  EF2B  F012         	goto	i2u106_41
  5625  002452  EF2D  F012         	goto	i2u106_40
  5626  002456                     i2u106_41:
  5627  002456  EF30  F012         	goto	i2l175
  5628  00245A                     i2u106_40:
  5629  00245A                     
  5630                           ;BBSPI_LCD.c: 101:             LATCbits.LATC5 = 1;
  5631  00245A  8A8B               	bsf	139,5,c	;volatile
  5632  00245C  EF31  F012         	goto	i2l176
  5633  002460                     i2l175:
  5634                           
  5635                           ;BBSPI_LCD.c: 103:             LATCbits.LATC5 = 0;
  5636  002460  9A8B               	bcf	139,5,c	;volatile
  5637  002462                     i2l176:
  5638                           
  5639                           ;BBSPI_LCD.c: 105:         if (LATCbits.LATC4)
  5640  002462  A88B               	btfss	139,4,c	;volatile
  5641  002464  EF36  F012         	goto	i2u107_41
  5642  002468  EF38  F012         	goto	i2u107_40
  5643  00246C                     i2u107_41:
  5644  00246C  EF3C  F012         	goto	i2l2252
  5645  002470                     i2u107_40:
  5646  002470                     
  5647                           ;BBSPI_LCD.c: 106:             input = (input << 1) | 0x1;
  5648  002470  80D8               	bsf	status,0,c
  5649  002472  3603               	rlcf	i2SendByteBBSPI@input^0,f,c
  5650  002474  EF3F  F012         	goto	i2l2254
  5651  002478                     i2l2252:
  5652                           
  5653                           ;BBSPI_LCD.c: 108:             input = input << 1;
  5654  002478  5003               	movf	i2SendByteBBSPI@input^0,w,c
  5655  00247A  2403               	addwf	i2SendByteBBSPI@input^0,w,c
  5656  00247C  6E03               	movwf	i2SendByteBBSPI@input^0,c
  5657  00247E                     i2l2254:
  5658                           
  5659                           ;BBSPI_LCD.c: 109:         LATCbits.LATC3 = 1;
  5660  00247E  868B               	bsf	139,3,c	;volatile
  5661  002480                     
  5662                           ;BBSPI_LCD.c: 110:         __nop();__nop();__nop();__nop();__nop();__nop();
  5663  002480  F000               	nop	
  5664  002482  F000               	nop	
  5665  002484  F000               	nop	
  5666  002486  F000               	nop	
  5667  002488  F000               	nop	
  5668  00248A  F000               	nop	
  5669  00248C                     
  5670                           ;BBSPI_LCD.c: 112:         LATCbits.LATC3 = 0;
  5671  00248C  968B               	bcf	139,3,c	;volatile
  5672                           
  5673                           ;BBSPI_LCD.c: 113:         output <<= 1;
  5674  00248E  90D8               	bcf	status,0,c
  5675  002490  3601               	rlcf	i2SendByteBBSPI@output^0,f,c
  5676  002492                     
  5677                           ;BBSPI_LCD.c: 114:     }
  5678  002492  2A02               	incf	i2SendByteBBSPI@bitcount^0,f,c
  5679  002494  0E07               	movlw	7
  5680  002496  6402               	cpfsgt	i2SendByteBBSPI@bitcount^0,c
  5681  002498  EF50  F012         	goto	i2u108_41
  5682  00249C  EF52  F012         	goto	i2u108_40
  5683  0024A0                     i2u108_41:
  5684  0024A0  EF26  F012         	goto	i2l173
  5685  0024A4                     i2u108_40:
  5686  0024A4  0012               	return		;funcret
  5687  0024A6                     __end_ofi2_SendByteBBSPI:
  5688                           	opt callstack 0
  5689                           
  5690                           	psect	rparam
  5691  0000                     
  5692                           	psect	temp
  5693  00003D                     btemp:
  5694                           	opt callstack 0
  5695  00003D                     	ds	1
  5696  0000                     int$flags	set	btemp
  5697  0000                     wtemp8	set	btemp+1
  5698  0000                     ttemp5	set	btemp+1
  5699  0000                     ttemp6	set	btemp+4
  5700  0000                     ttemp7	set	btemp+8
  5701                           tosu	equ	0xFFF
  5702                           tosh	equ	0xFFE
  5703                           tosl	equ	0xFFD
  5704                           stkptr	equ	0xFFC
  5705                           pclatu	equ	0xFFB
  5706                           pclath	equ	0xFFA
  5707                           pcl	equ	0xFF9
  5708                           tblptru	equ	0xFF8
  5709                           tblptrh	equ	0xFF7
  5710                           tblptrl	equ	0xFF6
  5711                           tablat	equ	0xFF5
  5712                           prodh	equ	0xFF4
  5713                           prodl	equ	0xFF3
  5714                           indf0	equ	0xFEF
  5715                           postinc0	equ	0xFEE
  5716                           postdec0	equ	0xFED
  5717                           preinc0	equ	0xFEC
  5718                           plusw0	equ	0xFEB
  5719                           fsr0h	equ	0xFEA
  5720                           fsr0l	equ	0xFE9
  5721                           wreg	equ	0xFE8
  5722                           indf1	equ	0xFE7
  5723                           postinc1	equ	0xFE6
  5724                           postdec1	equ	0xFE5
  5725                           preinc1	equ	0xFE4
  5726                           plusw1	equ	0xFE3
  5727                           fsr1h	equ	0xFE2
  5728                           fsr1l	equ	0xFE1
  5729                           bsr	equ	0xFE0
  5730                           indf2	equ	0xFDF
  5731                           postinc2	equ	0xFDE
  5732                           postdec2	equ	0xFDD
  5733                           preinc2	equ	0xFDC
  5734                           plusw2	equ	0xFDB
  5735                           fsr2h	equ	0xFDA
  5736                           fsr2l	equ	0xFD9
  5737                           status	equ	0xFD8


Data Sizes:
    Strings     88
    Constant    0
    Data        1
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      60
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _initial->_initial_display
    _initial_display->_LCDPutStr
    _initial_display->___awdiv
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI
    _change_time->___awmod

Critical Paths under _clock_system in COMRAM

    _clock_system->_clock_count
    _clock_system->_display_change_state
    _stop_watch_count->_display_clock
    _read_all_button->_read_button_change
    _read_all_button->_read_button_sel
    _display_change_state->_blink
    _display_change_state->_display_clock
    i2_initial_display->i2_LCDPutStr
    i2_initial_display->i2___awdiv
    i2_LCDInit->i2_LCDPutInst
    i2_Port_BBSPIInit->i2_SendByteBBSPI
    _blink->i2_LCDPutStr
    _blink->i2___awdiv
    i2_LCDPutStr->i2_LCDPutChar
    _clock_count->_display_clock
    _display_clock->i2___awdiv
    i2_LCDPutInst->i2_WritePort_BBSPI
    i2_LCDPutChar->i2_WritePort_BBSPI
    i2_WritePort_BBSPI->i2_SendByteBBSPI

Critical Paths under _main in BANK0

    None.

Critical Paths under _clock_system in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _clock_system in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _clock_system in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _clock_system in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _clock_system in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _clock_system in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _clock_system in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _clock_system in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _clock_system in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _clock_system in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _clock_system in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _clock_system in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _clock_system in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _clock_system in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _clock_system in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _clock_system in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13210
                                             30 COMRAM     2     2      0
                        _change_time
                            _initial
 ---------------------------------------------------------------------------------
 (1) _initial                                              0     0      0   10090
                    _initial_display
 ---------------------------------------------------------------------------------
 (2) _initial_display                                      2     2      0   10090
                                             28 COMRAM     2     2      0
                            _LCDInit
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2112
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _LCDPutStr                                            2     0      2    1415
                                             26 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (4) _LCDPutChar                                           1     1      0     840
                                             25 COMRAM     1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _LCDInit                                              1     1      0    1763
                                             26 COMRAM     1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _Port_BBSPIInit                                       1     1      0     105
                                             23 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _LCDPutInst                                           1     1      0     840
                                             25 COMRAM     1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (5) _WritePort_BBSPI                                      2     1      1     818
                                             23 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (6) _SendByteBBSPI                                        3     3      0      90
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _change_time                                          2     2      0    3120
                                             26 COMRAM     2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    3120
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _clock_system                                         4     4      0   23672
                                             16 COMRAM     4     4      0
                        _clock_count
               _display_change_state
                    _read_all_button
                 _read_button_change
                    _read_button_sel
                   _stop_watch_count
 ---------------------------------------------------------------------------------
 (8) _stop_watch_count                                     0     0      0    4214
                      _display_clock
 ---------------------------------------------------------------------------------
 (8) _read_button_sel                                      2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _read_button_change                                   2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _read_all_button                                      4     0      4     196
                                              2 COMRAM     4     0      4
                 _read_button_change (ARG)
                    _read_button_sel (ARG)
 ---------------------------------------------------------------------------------
 (8) _display_change_state                                 2     2      0   13778
                                             14 COMRAM     2     2      0
                              _blink
                      _display_clock
                  i2_initial_display
 ---------------------------------------------------------------------------------
 (9) i2_initial_display                                    2     2      0    4789
                                              8 COMRAM     2     2      0
                          i2_LCDInit
                       i2_LCDPutChar
                       i2_LCDPutInst
                        i2_LCDPutStr
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2_LCDInit                                           1     1      0    1014
                                              6 COMRAM     1     1      0
                        i2_InitBBSPI
                       i2_LCDPutInst
                   i2_Port_BBSPIInit
                  i2_WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (11) i2_Port_BBSPIInit                                    1     1      0     160
                                              3 COMRAM     1     1      0
                    i2_SendByteBBSPI
 ---------------------------------------------------------------------------------
 (11) i2_InitBBSPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _blink                                                6     2      4    4775
                                              8 COMRAM     6     2      4
                       i2_LCDPutChar
                       i2_LCDPutInst
                        i2_LCDPutStr
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2_LCDPutStr                                         2     0      2     691
                                              6 COMRAM     2     0      2
                       i2_LCDPutChar
 ---------------------------------------------------------------------------------
 (8) _clock_count                                          2     0      2    5484
                                             14 COMRAM     2     0      2
                      _display_clock
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) _display_clock                                        6     2      4    4214
                                              8 COMRAM     6     2      4
                       i2_LCDPutChar
                       i2_LCDPutInst
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4    1128
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4    1080
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i2_LCDPutInst                                        1     1      0     438
                                              5 COMRAM     1     1      0
                  i2_WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (10) i2_LCDPutChar                                        1     1      0     438
                                              5 COMRAM     1     1      0
                  i2_WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (11) i2_WritePort_BBSPI                                   2     1      1     416
                                              3 COMRAM     2     1      1
                    i2_SendByteBBSPI
 ---------------------------------------------------------------------------------
 (12) i2_SendByteBBSPI                                     3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change_time
     ___awmod
   _initial
     _initial_display
       _LCDInit
         _InitBBSPI
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
         _Port_BBSPIInit
           _SendByteBBSPI
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
       ___awdiv
       ___awmod

 _clock_system (ROOT)
   _clock_count
     _display_clock
       i2_LCDPutChar
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2_LCDPutInst
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2___awdiv
       i2___awmod
     i2___awmod
   _display_change_state
     _blink
       i2_LCDPutChar
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2_LCDPutInst
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2_LCDPutStr
         i2_LCDPutChar
           i2_WritePort_BBSPI
             i2_SendByteBBSPI
       i2___awdiv
       i2___awmod
     _display_clock
       i2_LCDPutChar
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2_LCDPutInst
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2___awdiv
       i2___awmod
     i2_initial_display
       i2_LCDInit
         i2_InitBBSPI
         i2_LCDPutInst
           i2_WritePort_BBSPI
             i2_SendByteBBSPI
         i2_Port_BBSPIInit
           i2_SendByteBBSPI
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2_LCDPutChar
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2_LCDPutInst
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2_LCDPutStr
         i2_LCDPutChar
           i2_WritePort_BBSPI
             i2_SendByteBBSPI
       i2___awdiv
       i2___awmod
   _read_all_button
     _read_button_change (ARG)
     _read_button_sel (ARG)
   _read_button_change
   _read_button_sel
   _stop_watch_count
     _display_clock
       i2_LCDPutChar
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2_LCDPutInst
         i2_WritePort_BBSPI
           i2_SendByteBBSPI
       i2___awdiv
       i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3C       1       63.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C      32        0.0%
DATA                 0      0      3C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 22 17:20:08 2019

           ??i2_initial_display 0009                     ?_LCDPutChar 0001                              l96 1A7E  
                            u10 23F6                              u11 23F2                              u20 240C  
                            u21 2408                              u30 2440                              u31 243C  
                  ___awdiv@sign 001A                     ?_LCDPutInst 0001                  ??_clock_system 0011  
     __size_of_stop_watch_count 00CA           SendByteBBSPI@bitcount 0016                             l300 1700  
                           l140 2820                             l170 28C2                             l173 23E8  
                           l182 2862                             l175 23FC                             l191 2698  
                           l167 2502                             l176 23FE                             l185 287C  
                           l506 129A                             l179 2440                             l188 264C  
                           l197 27B4                             l740 21B8                             l753 232C  
                  ___awmod@sign 001A                             wreg 000FE8                ?i2_SendByteBBSPI 0001  
               __end_of_LCDInit 2504                    __CFG_LVP$OFF 000000       __end_ofi2_initial_display 14DE  
                  __CFG_WDT$OFF 000000                            l1200 241E                            l1210 2428  
                          l1202 2420                            l1212 242E                            l1204 2422  
                          l1214 2430                            l1206 2424                            l1208 2426  
                          l3010 2800                            l3020 14DE                            l2300 268E  
                          l3012 2802                            l3004 27F4                            l3030 1516  
                          l3022 14E2                            l1262 28B2                            l1190 23F6  
                          l1182 23E0                            l2310 2628                            l2302 2604  
                          l3014 2804                            l3006 27FC                            l3032 1536  
                          l3040 1590                            l3024 14F4                            l1192 240C  
                          l1184 23E4                            l1264 284C                            l2312 2630  
                          l2304 260C                            l2400 2114                            l3016 281A  
                          l3008 27FE                            l3200 1A7E                            l3050 15FC  
                          l3034 1556                            l3042 15CA                            l3026 14FC  
                          l1194 2414                            l1266 284E                            l2314 263A  
                          l2306 2616                            l2410 2148                            l2402 2122  
                          l3018 281C                            l3060 165C                            l3052 160E  
                          l3044 15DA                            l3036 1576                            l3028 150E  
                          l1196 241A                            l1268 2860                            l2316 2642  
                          l2308 261E                            l2420 2182                            l2412 2150  
                          l2404 212A                            l3140 1918                            l3062 167C  
                          l3054 1624                            l3046 15E6                            l3070 16CE  
                          l1198 241C                            l2430 21A8                            l2422 218A  
                          l2414 2158                            l2406 212E                            l3150 195E  
                          l3142 1928                            l2440 2290                            l3056 1634  
                          l3048 15F8                            l2360 24AC                            l2432 21B0  
                          l2424 218C                            l2416 2166                            l2408 2136  
                          l2600 1094                            l3160 19A0                            l3152 196E  
                          l3144 192C                            l2450 22C4                            l2442 2298  
                          l3058 163C                            l3066 169C                            l2274 2866  
                          l2290 2662                            l2370 24CA                            l2362 24AE  
                          l2426 2192                            l2418 216C                            l2610 10EE  
                          l2602 109A                            l3170 19DE                            l3162 19A8  
                          l3154 1972                            l3146 193C                            l3138 1910  
                          l2460 2300                            l2452 22CC                            l2444 229C  
                          l2436 227E                            l3260 16B0                            l2276 2868  
                          l2292 266A                            l2380 24F6                            l2372 24D4  
                          l2364 24BC                            l2356 24A6                            l2428 2198  
                          l2620 114C                            l2612 1108                            l2604 10B4  
                          l3180 1A12                            l3164 19B8                            l3156 1982  
                          l3148 194E                            l2462 2306                            l2454 22D4  
                          l2446 22AA                            l2438 2282                            l3262 16E2  
                          l2278 287A                            l2294 2674                            l2286 2650  
                          l2382 24FC                            l2374 24E4                            l2366 24BE  
                          l2358 24AA                            l2390 2794                            l2630 1188  
                          l2622 115C                            l2614 110E                            l2606 10CE  
                          l3254 1A92                            l3190 1A48                            l3182 1A24  
                          l3174 19EE                            l3166 19BC                            l3158 1994  
                          l2456 22E2                            l2464 230C                            l2448 22B2  
                          l2296 267C                            l2288 2658                            l2376 24EA  
                          l2368 24C4                            l2384 2778                            l2392 20F6  
                          l3256 126C                            l2640 11A6                            l2632 118E  
                          l2624 1162                            l2616 1128                            l2608 10D4  
                          l3192 1A58                            l3176 19FE                            l3168 19CC  
                          l2466 231C                            l2458 22F8                            l3258 15A4  
                          l2298 2686                            l2378 24F0                            l2386 277C  
                          l2394 20FA                            l2650 1200                            l2642 11AC  
                          l2634 119A                            l2626 1172                            l2618 1146  
                          l3194 1A6A                            l3186 1A34                            l3178 1A02  
                          l2468 2324                            l2388 2790                            l2396 2108  
                          l2652 121A                            l2644 11C6                            l2636 119E  
                          l2628 1178                            l2660 1258                            l3188 1A44  
                          l2398 2110                            l2654 1220                            l2646 11E0  
                          l2638 11A2                            l2590 106A                            l2656 123A  
                          l2648 11E6                            l2592 1074                            l2594 107C  
                          l2596 1082                            l2588 105A                            l2598 108E  
                ?_display_clock 0009                            STR_1 1056                            STR_2 1056  
                          STR_3 1056                            STR_4 1045                            STR_5 1001  
                          STR_6 1034                            STR_7 1023                            STR_8 1012  
                          u1100 2108                            u1101 2104                            u1110 2122  
                          u1111 211E                            u1200 22F8                            u1120 2148  
                          u2000 19CC                            u1201 22F4                            u1121 2144  
                          u2001 19C8                            u1210 231C                            u1130 2166  
                          u2010 19DE                            u1211 2318                            u1131 2162  
                          u2011 19DA                            u1140 2182                            u2020 19FE  
                          u1141 217E                            u2021 19FA                            u1150 21A8  
                          u2030 1A12                            u1151 21A4                            u2031 1A0E  
                          u1160 2290                            u2040 1A24                            u1161 228C  
                          u2041 1A20                            u1170 22AA                            u1090 27B4  
                          u2050 1A44                            u1171 22A6                            u2107 262A  
                          u1091 27B0                            u2051 1A40                            u1180 22C4  
                          u2060 1A58                            u1181 22C0                            u2117 263C  
                          u2061 1A54                            u1190 22E2                            u1350 106A  
                          u2070 1A6A                            u1191 22DE                            u2127 24B4  
                          u1351 1066                            u2071 1A66                            _LATD 000F8C  
                          u2137 24DA                            u2147 2652                            u2157 2664  
                          u2167 2676                            u2087 2606                            u1800 1622  
                          u1720 14F4                            u1721 14F0                            u2177 2688  
                          u2097 2618                            u1810 1634                            u1730 150E  
                          u1811 1630                            u1731 150A                            u1740 1588  
                          u1741 1582                            u1750 158A                            u1760 15DA  
                          u1761 15D6                            u1770 15F8                            u1930 1928  
                          u1771 15F4                            u1931 1924                            u1780 160E  
                          u1940 193C                            u1781 160A                            u1941 1938  
                          u1790 1620                            u1950 194E                            u1791 161A  
                          u1951 194A                            u1960 196E                            u1961 196A  
                          u1970 1982                            u1971 197E                            u1980 1994  
                          u1981 1990                            u1990 19B8                            u1991 19B4  
                          i2l90 2018              _read_button_change 25B2               ??_read_all_button 0007  
                 _state_machine 003B                            _main 1910                            _hour 0035  
                 _state_but_sel 003A                            btemp 003D                ?_WritePort_BBSPI 0018  
                          start 000E              __size_of_LCDPutStr 003E                   __CFG_IESO$OFF 000000  
             ??_initial_display 001D             ?_read_button_change 0001                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000000              __size_ofi2_LCDInit 005E                           ?_main 0001  
               __end_of___awdiv 21BA                 __end_of___awmod 232E                           _T0CON 000FD5  
               ___awdiv@divisor 0017                           i2l170 28D4                           i2l173 244C  
                         i2l182 2896                           i2l175 2460                           i2l191 26E4  
                         i2l167 2560                           i2l176 2462                           i2l185 28B0  
                         i2l506 14DC                           i2l179 24A4                           i2l371 25B0  
                         i2l275 20F4                           i2l188 2730                           i2l268 1EFC  
                         i2l452 1C5C                           i2l197 27F2                           i2l365 2600  
                         i2l376 2776                           i2l740 227C                           i2l478 1DC8  
                         i2l495 190E                           i2l753 23DC                 ___awdiv@counter 0019  
                         _TMR0H 000FD7                           _TMR0L 000FD6                           _PORTD 000F83  
                         _TRISD 000F95                   __CFG_PWRT$OFF 000000            ??_read_button_change 0003  
                __CFG_FCMEN$OFF 000000         __size_of_Port_BBSPIInit 001A                           _blink 1C5E  
               _stop_watch_flag 0024                 __end_of_initial 2822            __size_of_change_time 0224  
                  ?i2_LCDPutStr 0007                  __CFG_BOREN$OFF 000000                           tablat 000FF5  
           __size_of_LCDPutChar 004C             __size_of_LCDPutInst 004C                           ttemp5 003E  
                         ttemp6 0041                           ttemp7 0045                           status 000FD8  
                         wtemp8 003E              __size_ofi2___awdiv 00C4              __size_ofi2___awmod 00B0  
               __initialization 2822                i2_Port_BBSPIInit 287E                    __end_of_main 1AC4  
             ??_read_button_sel 0003                          ??_main 001F            i2SendByteBBSPI@input 0003  
                 __activetblptr 000003                       ??_LCDInit 001B                    LCDPutChar@ch 001A  
             __end_of_LCDPutStr 27B6                 ??_display_clock 000D                          ?_blink 0009  
                        _ADCON1 000FC1              __size_of_InitBBSPI 0012      __size_ofi2_initial_display 0242  
              ___awdiv@dividend 0015                    LCDPutInst@ch 001A               __end_ofi2_LCDInit 2562  
          __size_of_clock_count 0134                          i2l1302 28C4                          i2l3100 1F4C  
                        i2l3110 1F84                          i2l3102 1F5C                          i2l2240 2444  
                        i2l2320 2882                          i2l3120 1FC6                          i2l3112 1F88  
                        i2l3104 1F6C                          i2l2250 2470                          i2l2242 2448  
                        i2l2330 2702                          i2l2322 2894                          i2l3130 1FF0  
                        i2l3114 1FA8                          i2l3122 1FCA                          i2l3106 1F70  
                        i2l2260 2484                          i2l2252 2478                          i2l2332 270C  
                        i2l2324 26E8                          i2l2340 269C                          i2l2500 27B6  
                        i2l3132 2000                          i2l3124 1FDA                          i2l3116 1FB8  
                        i2l3108 1F74                          i2l2270 2492                          i2l2262 2486  
                        i2l2254 247E                          i2l2334 2714                          i2l2326 26F0  
                        i2l2350 26C8                          i2l2342 26A4                          i2l2510 21BE  
                        i2l2502 27BA                          i2l2318 2880                          i2l3134 2012  
                        i2l3126 1FEA                          i2l3118 1FC2                          i2l2272 2494  
                        i2l2264 2488                          i2l2256 2480                          i2l2248 245A  
                        i2l2280 289A                          i2l2336 271E                          i2l2328 26FA  
                        i2l2352 26D2                          i2l2344 26AE                          i2l2520 21EE  
                        i2l2512 21CC                          i2l2504 27CE                          i2l3136 2014  
                        i2l3128 1FEC                          i2l2266 248A                          i2l2258 2482  
                        i2l2282 289C                          i2l2338 2726                          i2l2354 26DA  
                        i2l2346 26B6                          i2l2530 221C                          i2l2522 21F2  
                        i2l2514 21D4                          i2l2506 27D2                          i2l3090 1F30  
                        i2l2268 248C                          i2l2284 28AE                          i2l2348 26C0  
                        i2l2540 2250                          i2l2532 222A                          i2l2524 21FA  
                        i2l2516 21D8                          i2l2508 21BA                          i2l3092 1F34  
                        i2l3084 1F10                          i2l2542 2256                          i2l2534 2230  
                        i2l2526 220C                          i2l2518 21E6                          i2l3270 1DAA  
                        i2l2710 1CB2                          i2l3094 1F36                          i2l3086 1F14  
                        i2l2536 2246                          i2l2528 2214                          i2l2544 225C  
                        i2l2560 234C                          i2l2552 232E                          i2l3272 17D6  
                        i2l2720 1D1E                          i2l2712 1CB8                          i2l2704 1C5E  
                        i2l2480 251A                          i2l2472 2504                          i2l2800 1442  
                        i2l3264 1B90                          i2l3096 1F38                          i2l3088 1F22  
                        i2l2546 226C                          i2l2538 224E                          i2l2570 2384  
                        i2l2562 235A                          i2l2554 2332                          i2l3274 18C4  
                        i2l2722 1D2E                          i2l2714 1CC8                          i2l2706 1C62  
                        i2l2490 2542                          i2l2482 251C                          i2l2474 2508  
                        i2l2802 145C                          i2l2810 149A                          i2l3266 1C36  
                        i2l3098 1F3A                          i2l2548 2274                          i2l2572 2392  
                        i2l2580 23BC                          i2l2564 2362                          i2l2556 2340  
                        i2l3276 18F8                          i2l2724 1D40                          i2l2716 1CDA  
                        i2l2708 1C74                          i2l2732 1D94                          i2l2492 2548  
                        i2l2484 2522                          i2l2476 250A                          i2l3268 14AE  
                        i2l2804 1462                          i2l2740 12AC                          i2l2820 2048  
                        i2l2582 23CC                          i2l2574 23A8                          i2l2566 2374  
                        i2l2558 2348                          i2l2670 1744                          i2l2910 1DDC  
                        i2l2726 1D7E                          i2l2718 1D18                          i2l2494 254E  
                        i2l2486 2528                          i2l2478 250C                          i2l2806 147C  
                        i2l2750 12D6                          i2l2742 12B6                          i2l2902 276E  
                        i2l2830 2084                          i2l2822 2058                          i2l2584 23D4  
                        i2l2576 23B0                          i2l2568 237C                          i2l2680 1832  
                        i2l2672 1782                          i2l2920 1E24                          i2l2912 1DE0  
                        i2l2728 1D84                          i2l2496 2554                          i2l2488 2532  
                        i2l2760 1330                          i2l2752 12DC                          i2l2744 12BE  
                        i2l2840 20D8                          i2l2832 2088                          i2l2824 205C  
                        i2l2816 202C                          i2l2578 23B6                          i2l2682 1870  
                        i2l2690 18E2                          i2l2666 1702                          i2l2930 1E78  
                        i2l2914 1DE4                          i2l2922 1E38                          i2l2906 1DCA  
                        i2l2498 255A                          i2l2770 138E                          i2l2762 134A  
                        i2l2754 12F6                          i2l2746 12C4                          i2l2738 129C  
                        i2l2850 25BE                          i2l2842 20DC                          i2l2834 20B0  
                        i2l2826 2070                          i2l2818 2030                          i2l2676 17C0  
                        i2l2668 1706                          i2l2940 1EB8                          i2l2932 1E7C  
                        i2l2924 1E48                          i2l2916 1E0C                          i2l2908 1DCC  
                        i2l2780 13CA                          i2l2772 139E                          i2l2764 1350  
                        i2l2756 1310                          i2l2748 12D0                          i2l2860 25EC  
                        i2l2852 25D0                          i2l2844 20E0                          i2l2836 20B4  
                        i2l2828 2080                          i2l2686 18AE                          i2l2678 17F4  
                        i2l2942 1ED4                          i2l2934 1E90                          i2l2926 1E4C  
                        i2l2918 1E10                          i2l2790 13E8                          i2l2782 13D0  
                        i2l2774 13A4                          i2l2766 136A                          i2l2758 1316  
                        i2l2950 1AD6                          i2l2854 25E0                          i2l2846 25B2  
                        i2l2870 2566                          i2l2838 20C8                          i2l2944 1EE8  
                        i2l2928 1E50                          i2l2936 1EA4                          i2l2792 13EE  
                        i2l2784 13DC                          i2l2776 13B4                          i2l2768 1388  
                        i2l2952 1AE8                          i2l2960 1B10                          i2l2864 25F8  
                        i2l2848 25B6                          i2l2872 256E                          i2l2938 1EB4  
                        i2l2794 1408                          i2l2786 13E0                          i2l2778 13BA  
                        i2l2970 1B64                          i2l2962 1B20                          i2l2954 1B04  
                        i2l2946 1AC4                          i2l2890 2732                          i2l2882 259C  
                        i2l2874 2580                          i2l2796 1422                          i2l2788 13E4  
                        i2l2980 1BC6                          i2l2956 1B08                          i2l2948 1AC6  
                        i2l2892 2744                          i2l2876 2590                          i2l2868 2562  
                        i2l2798 1428                          i2l2966 1B34                          i2l2974 1B7C  
                        i2l2886 25A8                          i2l2984 1BDA                          i2l2992 1C22  
                        i2l2968 1B4C                          i2l2976 1BAE                          i2l2896 2750  
                        i2l2986 1BF2                          i2l2994 1C54                          i2l2978 1BB6  
                        i2l2898 2762                          i2l2988 1C0A                          _OSCCON 000FD3  
  __end_of_display_change_state 1C5E            __end_of_clock_system 202C                    LCDPutStr@ptr 001B  
                __CFG_XINST$OFF 000000                       ??___awdiv 0019                       ??___awmod 0019  
                 ?i2_LCDPutChar 0001         i2SendByteBBSPI@bitcount 0002                          _button 002B  
              _stop_watch_count 202C                   ?i2_LCDPutInst 0001                          _millis 0038  
                        clear_0 283A                ___awdiv@quotient 001B                          _minute 0036  
                        _second 0037                 ___awmod@divisor 0017               _millis_stop_watch 0034  
               ___awmod@counter 0019                  i2___awdiv@sign 0006                    ?i2_InitBBSPI 0001  
                  __pdataCOMRAM 003C                       ??_initial 001F               __end_ofi2___awdiv 227E  
        Port_BBSPIInit@port_dir 0018               __end_ofi2___awmod 23DE                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                i2___awmod@sign 0006                clock_count@state 000F                      __accesstop 0060  
       __end_of__initialization 2840                   ___rparam_used 000001          __size_of_SendByteBBSPI 0064  
                  _change_state 0021                  __pcstackCOMRAM 0001                   __end_of_blink 1DCA  
                ??i2_LCDPutChar 0006               __end_of_InitBBSPI 28C4                    ??_LCDPutChar 001A  
                ??i2_LCDPutInst 0006                    ??_LCDPutInst 001A                 __CFG_OSC$INTIO7 000000  
               _read_all_button 2732                  _first_read_sel 002E                  _Port_BBSPIInit 284A  
                       ??_blink 000D                 _initial_display 105A                 _second_read_sel 002D  
         i2SendByteBBSPI@output 0001            __size_ofi2_LCDPutStr 003E              __end_of_LCDPutChar 264E  
            __end_of_LCDPutInst 269A       i2WritePort_BBSPI@port_add 0005               _first_read_change 0030  
          _display_change_state 1AC4         read_all_button@button_A 0003         read_all_button@button_B 0005  
        __end_of_Port_BBSPIInit 2864                         _LCDInit 24A6                   _SendByteBBSPI 23DE  
                i2LCDPutChar@ch 0006        __end_ofi2_Port_BBSPIInit 2898           __size_of_clock_system 2024  
              WritePort_BBSPI@a 0018                 _read_button_sel 2562                  i2LCDPutInst@ch 0006  
      __size_ofi2_SendByteBBSPI 0064   display_clock@variable_display 0009                  i2LCDPutStr@ptr 0007  
                       __Hparam 0000                         __Lparam 0000                         ___awdiv 20F6  
                       ___awmod 227E        __size_of_WritePort_BBSPI 001A                    __psmallconst 1000  
       __end_of_read_all_button 2778                         __pcinit 2822                         __ramtop 1000  
                       __ptext0 1910                         __ptext1 27F4                         __ptext2 105A  
                       __ptext3 20F6                         __ptext4 2778                         __ptext5 2602  
                       __ptext6 24A6                         __ptext7 284A                         __ptext8 264E  
                       __ptext9 2864           ?_display_change_state 0001                    _clock_system 0008  
                ?_SendByteBBSPI 0001                 ?_Port_BBSPIInit 0001         __end_of_initial_display 129C  
                       _initial 27F4                ___awmod@dividend 0015                   ??_change_time 001B  
          __size_ofi2_InitBBSPI 0012     __size_of_read_button_change 0050                       _LCDPutStr 2778  
                __pintcode_body 1EFE            end_of_initialization 2840            __end_ofi2_LCDPutChar 2732  
          __end_ofi2_LCDPutInst 26E6        __end_of_stop_watch_count 20F6                   _millis_system 0039  
                       int_func 1EFE                      blink@state 0009                       i2_LCDInit 2504  
            _second_read_change 002F                         postinc0 000FEE               i2_WritePort_BBSPI 2898  
                     _PORTAbits 000F80                       _PORTBbits 000F81              ?i2_WritePort_BBSPI 0004  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
       __end_of_read_button_sel 25B2                       _TRISFbits 000F97                   ??_clock_count 0011  
           ??i2_WritePort_BBSPI 0005                       i2___awdiv 21BA                      ?_LCDPutStr 001B  
                     i2___awmod 232E           __end_of_display_clock 1910             __end_of_change_time 1702  
           SendByteBBSPI@output 0015              i2___awdiv@dividend 0001                      ?i2_LCDInit 0001  
             ??i2_SendByteBBSPI 0001       __end_ofi2_WritePort_BBSPI 28B2                ?_read_all_button 0003  
        ??_display_change_state 000F                   __pidataCOMRAM 28D6                 ??_SendByteBBSPI 0015  
                     _InitBBSPI 28B2                ?_initial_display 0001               ??_WritePort_BBSPI 0019  
           start_initialization 2822              i2___awdiv@quotient 0007  display_clock@clock1_stopwatch2 000B  
                    ?i2___awdiv 0001                      ?i2___awmod 0001             __end_of_clock_count 1EFE  
      i2Port_BBSPIInit@port_dir 0004                      ?_InitBBSPI 0001                _minute_stop_flag 0022  
                      ?_LCDInit 0001                     __pbssCOMRAM 0021           __size_ofi2_LCDPutChar 004C  
                   _change_time 14DE           __size_ofi2_LCDPutInst 004C                ?_read_button_sel 0001  
                 ??i2_LCDPutStr 0009                     ??_LCDPutStr 001D               ?i2_Port_BBSPIInit 0001  
            ??i2_Port_BBSPIInit 0004                     ??i2_LCDInit 0007                    _init_setting 002C  
                     __pintcode 0008      __size_ofi2_WritePort_BBSPI 001A                _second_stop_flag 0023  
                      ?___awdiv 0015                        ?___awmod 0015                ??_Port_BBSPIInit 0018  
                  i2_LCDPutChar 26E6                    i2_LCDPutInst 269A                     _blink_count 0028  
                   _blink_state 0027                     __smallconst 1000                        ?_initial 0001  
                     _count_but 002A                       _count_sel 0029                     _clock_count 1DCA  
                __size_of_blink 016C                     ??i2___awdiv 0005                     ??i2___awmod 0005  
                     _hour_flag 0025               ?_stop_watch_count 0001                        _LATAbits 000F89  
                      _LATCbits 000F8B                        _LATFbits 000F8E             __end_ofi2_LCDPutStr 27F4  
            ??_stop_watch_count 000F                       blink@type 000B                        i2u106_40 245A  
                      i2u130_40 235A                        i2u122_40 27F2                        i2u106_41 2456  
                      i2u130_41 2356                        i2u122_41 27EE                        i2u107_40 2470  
                      i2u123_40 21CC                        i2u131_40 2374                        i2u107_41 246C  
                      i2u123_41 21C8                        i2u131_41 2370                        i2u108_40 24A4  
                      i2u124_40 21E6                        i2u132_40 2392                        i2u140_40 2044  
                      i2u108_41 24A0                        i2u124_41 21E2                        i2u132_41 238E  
                      i2u140_41 203E                        i2u220_47 269E                        i2u125_40 220C  
                      i2u133_40 23A8                        i2u141_40 2046                        i2u125_41 2208  
                      i2u133_41 23A4                        i2u221_47 26B0                        i2u126_40 222A  
                      i2u134_40 23CC                        i2u150_40 2580                        i2u142_40 2058  
                      i2u126_41 2226                        i2u134_41 23C8                        i2u150_41 257C  
                      i2u142_41 2054                        i2u222_47 26C2                        i2u127_40 2246  
                      i2u151_40 2590                        i2u143_40 2080                        i2u127_41 2242  
                      i2u151_41 258C                        i2u143_41 207C                        i2u223_47 26D4  
                      i2u128_40 226C                        i2u160_40 1E64                        i2u136_40 1C74  
                      i2u152_40 2744                        i2u144_40 209C                        i2u128_41 2268  
                      i2u160_41 1E5E                        i2u136_41 1C70                        i2u152_41 2740  
                      i2u144_41 2096                        i2u224_47 26EA                        i2u129_40 2340  
                      i2u161_40 1E66                        i2u137_40 1CDA                        i2u153_40 2762  
                      i2u145_40 209E                        i2u129_41 233C                        i2u137_41 1CD6  
                      i2u153_41 275E                        i2u225_47 26FC                        i2u162_40 1E78  
                      i2u154_40 1DDC                        i2u138_40 1D40                        i2u170_40 1BC6  
                      i2u146_40 20B0                        i2u162_41 1E74                        i2u154_41 1DD8  
                      i2u138_41 1D3C                        i2u170_41 1BC2                        i2u146_41 20AC  
                      i2u226_47 270E                        i2u218_47 2512                        i2u163_40 1E90  
                      i2u155_40 1DF8                        i2u139_40 12AC                        i2u171_40 1BD6  
                      i2u147_40 20D8                        i2u163_41 1E8C                        i2u155_41 1DF2  
                      i2u139_41 12A8                        i2u171_41 1BD2                        i2u147_41 20D4  
                      i2u227_47 2720                        i2u219_47 2538                        i2u164_40 1EB4  
                      i2u156_40 1DFA                        i2u148_40 25D0                        i2u164_41 1EB0  
                      i2u148_41 25CC                        i2u165_40 1EE8                        i2u157_40 1E0C  
                      i2u149_40 25E0                        i2u165_41 1EE4                        i2u157_41 1E08  
                      i2u149_41 25DC                        i2u158_40 1E24                        i2u166_40 1AD6  
                      i2u190_40 1FEA                        i2u182_40 1F22                        i2u158_41 1E20  
                      i2u166_41 1AD2                        i2u190_41 1FE6                        i2u182_41 1F1E  
                      i2u159_40 1E48                        i2u167_40 1AE8                        i2u191_40 2000  
                      i2u183_40 1F30                        i2u159_41 1E44                        i2u167_41 1AE4  
                      i2u191_41 1FFC                        i2u183_41 1F2C              i2WritePort_BBSPI@a 0004  
                      i2u168_40 1B20                        i2u192_40 2012                        i2u184_40 1F4C  
                      i2u168_41 1B1C                        i2u192_41 200E                        i2u184_41 1F48  
                      i2u169_40 1B30                        i2u185_40 1F5C                        i2u169_41 1B2C  
                      i2u185_41 1F58                        i2u186_40 1F6C                        i2u186_41 1F68  
                      i2u187_40 1F84                        i2u187_41 1F80                        i2u188_40 1FB8  
                      i2u188_41 1FB4                        i2u189_40 1FDA                        i2u189_41 1FD6  
                 ??i2_InitBBSPI 0001                     ??_InitBBSPI 0015              SendByteBBSPI@input 0017  
    __end_of_read_button_change 2602                __size_of_LCDInit 005E               i2___awdiv@divisor 0003  
             i2___awdiv@counter 0005              i2___awmod@dividend 0001                 i2_SendByteBBSPI 2442  
                _millis_10_stop 0033                        __Hrparam 0000                        __Lrparam 0000  
               _WritePort_BBSPI 2864                __size_of___awdiv 00C4                __size_of___awmod 00B0  
                   _button_flag 003C                __size_of_initial 002E                        __ptext10 23DE  
                      __ptext11 28B2                        __ptext20 129C                        __ptext12 14DE  
                      __ptext21 2504                        __ptext13 227E                        __ptext30 269A  
                      __ptext22 287E                        __ptext31 26E6                        __ptext23 28C4  
                      __ptext15 202C                        __ptext32 2898                        __ptext24 1C5E  
                      __ptext16 2562                        __ptext33 2442                        __ptext25 27B6  
                      __ptext17 25B2                        __ptext26 1DCA                        __ptext18 2732  
                      __ptext27 1702                        __ptext19 1AC4                        __ptext28 232E  
                      __ptext29 21BA             __end_ofi2_InitBBSPI 28D6                     i2_LCDPutStr 27B6  
                 __size_of_main 01B4                        int$flags 003D                      _LCDPutChar 2602  
                    _LCDPutInst 264E          __size_of_display_clock 020E   __size_of_display_change_state 019A  
         __end_of_SendByteBBSPI 2442               i2___awmod@divisor 0003                     _minute_flag 0026  
             i2___awmod@counter 0005                      _INTCONbits 000FF2                     _minute_stop 0031  
                   _second_stop 0032         __end_ofi2_SendByteBBSPI 24A6                    ?_change_time 0001  
      __size_of_read_all_button 0046                        intlevel2 0000        __size_of_initial_display 0242  
       __end_of_WritePort_BBSPI 287E       __size_ofi2_Port_BBSPIInit 001A                   ?_clock_system 0001  
                   i2_InitBBSPI 28C4         WritePort_BBSPI@port_add 0019                    ?_clock_count 000F  
                 _display_clock 1702               i2_initial_display 129C        __size_of_read_button_sel 0050  
            ?i2_initial_display 0001  
